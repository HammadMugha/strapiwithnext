"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/contentful";
exports.ids = ["vendor-chunks/contentful"];
exports.modules = {

/***/ "(rsc)/./node_modules/contentful/dist/contentful.node.min.js":
/*!*************************************************************!*\
  !*** ./node_modules/contentful/dist/contentful.node.min.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*! For license information please see contentful.node.min.js.LICENSE.txt */ \n!function(e, a) {\n     true ? module.exports = a() : 0;\n}(global, ()=>(()=>{\n        var e = {\n            878: (e, a, n)=>{\n                e.exports = {\n                    parallel: n(50),\n                    serial: n(181),\n                    serialOrdered: n(709)\n                };\n            },\n            813: (e)=>{\n                function a(e) {\n                    \"function\" == typeof this.jobs[e] && this.jobs[e]();\n                }\n                e.exports = function(e) {\n                    Object.keys(e.jobs).forEach(a.bind(e)), e.jobs = {};\n                };\n            },\n            127: (e, a, n)=>{\n                var i = n(701);\n                e.exports = function(e) {\n                    var a = !1;\n                    return i(function() {\n                        a = !0;\n                    }), function(n, o) {\n                        a ? e(n, o) : i(function() {\n                            e(n, o);\n                        });\n                    };\n                };\n            },\n            701: (e)=>{\n                e.exports = function(e) {\n                    var a = \"function\" == typeof setImmediate ? setImmediate : \"object\" == typeof process && \"function\" == typeof process.nextTick ? process.nextTick : null;\n                    a ? a(e) : setTimeout(e, 0);\n                };\n            },\n            751: (e, a, n)=>{\n                var i = n(127), o = n(813);\n                e.exports = function(e, a, n, s) {\n                    var t = n.keyedList ? n.keyedList[n.index] : n.index;\n                    n.jobs[t] = function(e, a, n, o) {\n                        return 2 == e.length ? e(n, i(o)) : e(n, a, i(o));\n                    }(a, t, e[t], function(e, a) {\n                        t in n.jobs && (delete n.jobs[t], e ? o(n) : n.results[t] = a, s(e, n.results));\n                    });\n                };\n            },\n            178: (e)=>{\n                e.exports = function(e, a) {\n                    var n = !Array.isArray(e), i = {\n                        index: 0,\n                        keyedList: n || a ? Object.keys(e) : null,\n                        jobs: {},\n                        results: n ? {} : [],\n                        size: n ? Object.keys(e).length : e.length\n                    };\n                    return a && i.keyedList.sort(n ? a : function(n, i) {\n                        return a(e[n], e[i]);\n                    }), i;\n                };\n            },\n            694: (e, a, n)=>{\n                var i = n(813), o = n(127);\n                e.exports = function(e) {\n                    Object.keys(this.jobs).length && (this.index = this.size, i(this), o(e)(null, this.results));\n                };\n            },\n            50: (e, a, n)=>{\n                var i = n(751), o = n(178), s = n(694);\n                e.exports = function(e, a, n) {\n                    for(var t = o(e); t.index < (t.keyedList || e).length;)i(e, a, t, function(e, a) {\n                        e ? n(e, a) : 0 !== Object.keys(t.jobs).length || n(null, t.results);\n                    }), t.index++;\n                    return s.bind(t, n);\n                };\n            },\n            181: (e, a, n)=>{\n                var i = n(709);\n                e.exports = function(e, a, n) {\n                    return i(e, a, null, n);\n                };\n            },\n            709: (e, a, n)=>{\n                var i = n(751), o = n(178), s = n(694);\n                function t(e, a) {\n                    return e < a ? -1 : e > a ? 1 : 0;\n                }\n                e.exports = function(e, a, n, t) {\n                    var r = o(e, n);\n                    return i(e, a, r, function n(o, s) {\n                        o ? t(o, s) : (r.index++, r.index < (r.keyedList || e).length ? i(e, a, r, n) : t(null, r.results));\n                    }), s.bind(r, t);\n                }, e.exports.ascending = t, e.exports.descending = function(e, a) {\n                    return -1 * t(e, a);\n                };\n            },\n            970: (e, a, n)=>{\n                var i = n(464), o = n(837), s = n(17), t = n(685), r = n(687), c = n(310).parse, p = n(147), l = n(781).Stream, u = n(839), d = n(878), m = n(259);\n                function f(e) {\n                    if (!(this instanceof f)) return new f(e);\n                    for(var a in this._overheadLength = 0, this._valueLength = 0, this._valuesToMeasure = [], i.call(this), e = e || {})this[a] = e[a];\n                }\n                e.exports = f, o.inherits(f, i), f.LINE_BREAK = \"\\r\\n\", f.DEFAULT_CONTENT_TYPE = \"application/octet-stream\", f.prototype.append = function(e, a, n) {\n                    \"string\" == typeof (n = n || {}) && (n = {\n                        filename: n\n                    });\n                    var s = i.prototype.append.bind(this);\n                    if (\"number\" == typeof a && (a = \"\" + a), o.isArray(a)) this._error(new Error(\"Arrays are not supported.\"));\n                    else {\n                        var t = this._multiPartHeader(e, a, n), r = this._multiPartFooter();\n                        s(t), s(a), s(r), this._trackLength(t, a, n);\n                    }\n                }, f.prototype._trackLength = function(e, a, n) {\n                    var i = 0;\n                    null != n.knownLength ? i += +n.knownLength : Buffer.isBuffer(a) ? i = a.length : \"string\" == typeof a && (i = Buffer.byteLength(a)), this._valueLength += i, this._overheadLength += Buffer.byteLength(e) + f.LINE_BREAK.length, a && (a.path || a.readable && a.hasOwnProperty(\"httpVersion\") || a instanceof l) && (n.knownLength || this._valuesToMeasure.push(a));\n                }, f.prototype._lengthRetriever = function(e, a) {\n                    e.hasOwnProperty(\"fd\") ? null != e.end && e.end != 1 / 0 && null != e.start ? a(null, e.end + 1 - (e.start ? e.start : 0)) : p.stat(e.path, function(n, i) {\n                        var o;\n                        n ? a(n) : (o = i.size - (e.start ? e.start : 0), a(null, o));\n                    }) : e.hasOwnProperty(\"httpVersion\") ? a(null, +e.headers[\"content-length\"]) : e.hasOwnProperty(\"httpModule\") ? (e.on(\"response\", function(n) {\n                        e.pause(), a(null, +n.headers[\"content-length\"]);\n                    }), e.resume()) : a(\"Unknown stream\");\n                }, f.prototype._multiPartHeader = function(e, a, n) {\n                    if (\"string\" == typeof n.header) return n.header;\n                    var i, o = this._getContentDisposition(a, n), s = this._getContentType(a, n), t = \"\", r = {\n                        \"Content-Disposition\": [\n                            \"form-data\",\n                            'name=\"' + e + '\"'\n                        ].concat(o || []),\n                        \"Content-Type\": [].concat(s || [])\n                    };\n                    for(var c in \"object\" == typeof n.header && m(r, n.header), r)r.hasOwnProperty(c) && null != (i = r[c]) && (Array.isArray(i) || (i = [\n                        i\n                    ]), i.length && (t += c + \": \" + i.join(\"; \") + f.LINE_BREAK));\n                    return \"--\" + this.getBoundary() + f.LINE_BREAK + t + f.LINE_BREAK;\n                }, f.prototype._getContentDisposition = function(e, a) {\n                    var n, i;\n                    return \"string\" == typeof a.filepath ? n = s.normalize(a.filepath).replace(/\\\\/g, \"/\") : a.filename || e.name || e.path ? n = s.basename(a.filename || e.name || e.path) : e.readable && e.hasOwnProperty(\"httpVersion\") && (n = s.basename(e.client._httpMessage.path || \"\")), n && (i = 'filename=\"' + n + '\"'), i;\n                }, f.prototype._getContentType = function(e, a) {\n                    var n = a.contentType;\n                    return !n && e.name && (n = u.lookup(e.name)), !n && e.path && (n = u.lookup(e.path)), !n && e.readable && e.hasOwnProperty(\"httpVersion\") && (n = e.headers[\"content-type\"]), n || !a.filepath && !a.filename || (n = u.lookup(a.filepath || a.filename)), n || \"object\" != typeof e || (n = f.DEFAULT_CONTENT_TYPE), n;\n                }, f.prototype._multiPartFooter = function() {\n                    return (function(e) {\n                        var a = f.LINE_BREAK;\n                        0 === this._streams.length && (a += this._lastBoundary()), e(a);\n                    }).bind(this);\n                }, f.prototype._lastBoundary = function() {\n                    return \"--\" + this.getBoundary() + \"--\" + f.LINE_BREAK;\n                }, f.prototype.getHeaders = function(e) {\n                    var a, n = {\n                        \"content-type\": \"multipart/form-data; boundary=\" + this.getBoundary()\n                    };\n                    for(a in e)e.hasOwnProperty(a) && (n[a.toLowerCase()] = e[a]);\n                    return n;\n                }, f.prototype.setBoundary = function(e) {\n                    this._boundary = e;\n                }, f.prototype.getBoundary = function() {\n                    return this._boundary || this._generateBoundary(), this._boundary;\n                }, f.prototype.getBuffer = function() {\n                    for(var e = new Buffer.alloc(0), a = this.getBoundary(), n = 0, i = this._streams.length; n < i; n++)\"function\" != typeof this._streams[n] && (e = Buffer.isBuffer(this._streams[n]) ? Buffer.concat([\n                        e,\n                        this._streams[n]\n                    ]) : Buffer.concat([\n                        e,\n                        Buffer.from(this._streams[n])\n                    ]), \"string\" == typeof this._streams[n] && this._streams[n].substring(2, a.length + 2) === a || (e = Buffer.concat([\n                        e,\n                        Buffer.from(f.LINE_BREAK)\n                    ])));\n                    return Buffer.concat([\n                        e,\n                        Buffer.from(this._lastBoundary())\n                    ]);\n                }, f.prototype._generateBoundary = function() {\n                    for(var e = \"--------------------------\", a = 0; a < 24; a++)e += Math.floor(10 * Math.random()).toString(16);\n                    this._boundary = e;\n                }, f.prototype.getLengthSync = function() {\n                    var e = this._overheadLength + this._valueLength;\n                    return this._streams.length && (e += this._lastBoundary().length), this.hasKnownLength() || this._error(new Error(\"Cannot calculate proper length in synchronous way.\")), e;\n                }, f.prototype.hasKnownLength = function() {\n                    var e = !0;\n                    return this._valuesToMeasure.length && (e = !1), e;\n                }, f.prototype.getLength = function(e) {\n                    var a = this._overheadLength + this._valueLength;\n                    this._streams.length && (a += this._lastBoundary().length), this._valuesToMeasure.length ? d.parallel(this._valuesToMeasure, this._lengthRetriever, function(n, i) {\n                        n ? e(n) : (i.forEach(function(e) {\n                            a += e;\n                        }), e(null, a));\n                    }) : process.nextTick(e.bind(this, null, a));\n                }, f.prototype.submit = function(e, a) {\n                    var n, i, o = {\n                        method: \"post\"\n                    };\n                    return \"string\" == typeof e ? (e = c(e), i = m({\n                        port: e.port,\n                        path: e.pathname,\n                        host: e.hostname,\n                        protocol: e.protocol\n                    }, o)) : (i = m(e, o)).port || (i.port = \"https:\" == i.protocol ? 443 : 80), i.headers = this.getHeaders(e.headers), n = \"https:\" == i.protocol ? r.request(i) : t.request(i), this.getLength((function(e, i) {\n                        if (e && \"Unknown stream\" !== e) this._error(e);\n                        else if (i && n.setHeader(\"Content-Length\", i), this.pipe(n), a) {\n                            var o, s = function(e, i) {\n                                return n.removeListener(\"error\", s), n.removeListener(\"response\", o), a.call(this, e, i);\n                            };\n                            o = s.bind(this, null), n.on(\"error\", s), n.on(\"response\", o);\n                        }\n                    }).bind(this)), n;\n                }, f.prototype._error = function(e) {\n                    this.error || (this.error = e, this.pause(), this.emit(\"error\", e));\n                }, f.prototype.toString = function() {\n                    return \"[object FormData]\";\n                };\n            },\n            259: (e)=>{\n                e.exports = function(e, a) {\n                    return Object.keys(a).forEach(function(n) {\n                        e[n] = e[n] || a[n];\n                    }), e;\n                };\n            },\n            464: (e, a, n)=>{\n                var i = n(837), o = n(781).Stream, s = n(444);\n                function t() {\n                    this.writable = !1, this.readable = !0, this.dataSize = 0, this.maxDataSize = 2097152, this.pauseStreams = !0, this._released = !1, this._streams = [], this._currentStream = null, this._insideLoop = !1, this._pendingNext = !1;\n                }\n                e.exports = t, i.inherits(t, o), t.create = function(e) {\n                    var a = new this;\n                    for(var n in e = e || {})a[n] = e[n];\n                    return a;\n                }, t.isStreamLike = function(e) {\n                    return \"function\" != typeof e && \"string\" != typeof e && \"boolean\" != typeof e && \"number\" != typeof e && !Buffer.isBuffer(e);\n                }, t.prototype.append = function(e) {\n                    if (t.isStreamLike(e)) {\n                        if (!(e instanceof s)) {\n                            var a = s.create(e, {\n                                maxDataSize: 1 / 0,\n                                pauseStream: this.pauseStreams\n                            });\n                            e.on(\"data\", this._checkDataSize.bind(this)), e = a;\n                        }\n                        this._handleErrors(e), this.pauseStreams && e.pause();\n                    }\n                    return this._streams.push(e), this;\n                }, t.prototype.pipe = function(e, a) {\n                    return o.prototype.pipe.call(this, e, a), this.resume(), e;\n                }, t.prototype._getNext = function() {\n                    if (this._currentStream = null, this._insideLoop) this._pendingNext = !0;\n                    else {\n                        this._insideLoop = !0;\n                        try {\n                            do {\n                                this._pendingNext = !1, this._realGetNext();\n                            }while (this._pendingNext);\n                        } finally{\n                            this._insideLoop = !1;\n                        }\n                    }\n                }, t.prototype._realGetNext = function() {\n                    var e = this._streams.shift();\n                    void 0 !== e ? \"function\" == typeof e ? e((function(e) {\n                        t.isStreamLike(e) && (e.on(\"data\", this._checkDataSize.bind(this)), this._handleErrors(e)), this._pipeNext(e);\n                    }).bind(this)) : this._pipeNext(e) : this.end();\n                }, t.prototype._pipeNext = function(e) {\n                    if (this._currentStream = e, t.isStreamLike(e)) return e.on(\"end\", this._getNext.bind(this)), void e.pipe(this, {\n                        end: !1\n                    });\n                    var a = e;\n                    this.write(a), this._getNext();\n                }, t.prototype._handleErrors = function(e) {\n                    var a = this;\n                    e.on(\"error\", function(e) {\n                        a._emitError(e);\n                    });\n                }, t.prototype.write = function(e) {\n                    this.emit(\"data\", e);\n                }, t.prototype.pause = function() {\n                    this.pauseStreams && (this.pauseStreams && this._currentStream && \"function\" == typeof this._currentStream.pause && this._currentStream.pause(), this.emit(\"pause\"));\n                }, t.prototype.resume = function() {\n                    this._released || (this._released = !0, this.writable = !0, this._getNext()), this.pauseStreams && this._currentStream && \"function\" == typeof this._currentStream.resume && this._currentStream.resume(), this.emit(\"resume\");\n                }, t.prototype.end = function() {\n                    this._reset(), this.emit(\"end\");\n                }, t.prototype.destroy = function() {\n                    this._reset(), this.emit(\"close\");\n                }, t.prototype._reset = function() {\n                    this.writable = !1, this._streams = [], this._currentStream = null;\n                }, t.prototype._checkDataSize = function() {\n                    if (this._updateDataSize(), !(this.dataSize <= this.maxDataSize)) {\n                        var e = \"DelayedStream#maxDataSize of \" + this.maxDataSize + \" bytes exceeded.\";\n                        this._emitError(new Error(e));\n                    }\n                }, t.prototype._updateDataSize = function() {\n                    this.dataSize = 0;\n                    var e = this;\n                    this._streams.forEach(function(a) {\n                        a.dataSize && (e.dataSize += a.dataSize);\n                    }), this._currentStream && this._currentStream.dataSize && (this.dataSize += this._currentStream.dataSize);\n                }, t.prototype._emitError = function(e) {\n                    this._reset(), this.emit(\"error\", e);\n                };\n            },\n            292: (e, a, n)=>{\n                a.formatArgs = function(a) {\n                    if (a[0] = (this.useColors ? \"%c\" : \"\") + this.namespace + (this.useColors ? \" %c\" : \" \") + a[0] + (this.useColors ? \"%c \" : \" \") + \"+\" + e.exports.humanize(this.diff), !this.useColors) return;\n                    const n = \"color: \" + this.color;\n                    a.splice(1, 0, n, \"color: inherit\");\n                    let i = 0, o = 0;\n                    a[0].replace(/%[a-zA-Z%]/g, (e)=>{\n                        \"%%\" !== e && (i++, \"%c\" === e && (o = i));\n                    }), a.splice(o, 0, n);\n                }, a.save = function(e) {\n                    try {\n                        e ? a.storage.setItem(\"debug\", e) : a.storage.removeItem(\"debug\");\n                    } catch (e) {}\n                }, a.load = function() {\n                    let e;\n                    try {\n                        e = a.storage.getItem(\"debug\");\n                    } catch (e) {}\n                    return !e && \"undefined\" != typeof process && \"env\" in process && (e = process.env.DEBUG), e;\n                }, a.useColors = function() {\n                    return  false || (\"undefined\" == typeof navigator || !navigator.userAgent || !navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) && (\"undefined\" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance ||  false && (0) || \"undefined\" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || \"undefined\" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n                }, a.storage = function() {\n                    try {\n                        return localStorage;\n                    } catch (e) {}\n                }(), a.destroy = (()=>{\n                    let e = !1;\n                    return ()=>{\n                        e || (e = !0, console.warn(\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\"));\n                    };\n                })(), a.colors = [\n                    \"#0000CC\",\n                    \"#0000FF\",\n                    \"#0033CC\",\n                    \"#0033FF\",\n                    \"#0066CC\",\n                    \"#0066FF\",\n                    \"#0099CC\",\n                    \"#0099FF\",\n                    \"#00CC00\",\n                    \"#00CC33\",\n                    \"#00CC66\",\n                    \"#00CC99\",\n                    \"#00CCCC\",\n                    \"#00CCFF\",\n                    \"#3300CC\",\n                    \"#3300FF\",\n                    \"#3333CC\",\n                    \"#3333FF\",\n                    \"#3366CC\",\n                    \"#3366FF\",\n                    \"#3399CC\",\n                    \"#3399FF\",\n                    \"#33CC00\",\n                    \"#33CC33\",\n                    \"#33CC66\",\n                    \"#33CC99\",\n                    \"#33CCCC\",\n                    \"#33CCFF\",\n                    \"#6600CC\",\n                    \"#6600FF\",\n                    \"#6633CC\",\n                    \"#6633FF\",\n                    \"#66CC00\",\n                    \"#66CC33\",\n                    \"#9900CC\",\n                    \"#9900FF\",\n                    \"#9933CC\",\n                    \"#9933FF\",\n                    \"#99CC00\",\n                    \"#99CC33\",\n                    \"#CC0000\",\n                    \"#CC0033\",\n                    \"#CC0066\",\n                    \"#CC0099\",\n                    \"#CC00CC\",\n                    \"#CC00FF\",\n                    \"#CC3300\",\n                    \"#CC3333\",\n                    \"#CC3366\",\n                    \"#CC3399\",\n                    \"#CC33CC\",\n                    \"#CC33FF\",\n                    \"#CC6600\",\n                    \"#CC6633\",\n                    \"#CC9900\",\n                    \"#CC9933\",\n                    \"#CCCC00\",\n                    \"#CCCC33\",\n                    \"#FF0000\",\n                    \"#FF0033\",\n                    \"#FF0066\",\n                    \"#FF0099\",\n                    \"#FF00CC\",\n                    \"#FF00FF\",\n                    \"#FF3300\",\n                    \"#FF3333\",\n                    \"#FF3366\",\n                    \"#FF3399\",\n                    \"#FF33CC\",\n                    \"#FF33FF\",\n                    \"#FF6600\",\n                    \"#FF6633\",\n                    \"#FF9900\",\n                    \"#FF9933\",\n                    \"#FFCC00\",\n                    \"#FFCC33\"\n                ], a.log = console.debug || console.log || (()=>{}), e.exports = n(374)(a);\n                const { formatters: i } = e.exports;\n                i.j = function(e) {\n                    try {\n                        return JSON.stringify(e);\n                    } catch (e) {\n                        return \"[UnexpectedJSONParseError]: \" + e.message;\n                    }\n                };\n            },\n            374: (e, a, n)=>{\n                e.exports = function(e) {\n                    function a(e) {\n                        let n, o, s, t = null;\n                        function r(...e) {\n                            if (!r.enabled) return;\n                            const i = r, o = Number(new Date), s = o - (n || o);\n                            i.diff = s, i.prev = n, i.curr = o, n = o, e[0] = a.coerce(e[0]), \"string\" != typeof e[0] && e.unshift(\"%O\");\n                            let t = 0;\n                            e[0] = e[0].replace(/%([a-zA-Z%])/g, (n, o)=>{\n                                if (\"%%\" === n) return \"%\";\n                                t++;\n                                const s = a.formatters[o];\n                                if (\"function\" == typeof s) {\n                                    const a = e[t];\n                                    n = s.call(i, a), e.splice(t, 1), t--;\n                                }\n                                return n;\n                            }), a.formatArgs.call(i, e), (i.log || a.log).apply(i, e);\n                        }\n                        return r.namespace = e, r.useColors = a.useColors(), r.color = a.selectColor(e), r.extend = i, r.destroy = a.destroy, Object.defineProperty(r, \"enabled\", {\n                            enumerable: !0,\n                            configurable: !1,\n                            get: ()=>null !== t ? t : (o !== a.namespaces && (o = a.namespaces, s = a.enabled(e)), s),\n                            set: (e)=>{\n                                t = e;\n                            }\n                        }), \"function\" == typeof a.init && a.init(r), r;\n                    }\n                    function i(e, n) {\n                        const i = a(this.namespace + (void 0 === n ? \":\" : n) + e);\n                        return i.log = this.log, i;\n                    }\n                    function o(e) {\n                        return e.toString().substring(2, e.toString().length - 2).replace(/\\.\\*\\?$/, \"*\");\n                    }\n                    return a.debug = a, a.default = a, a.coerce = function(e) {\n                        return e instanceof Error ? e.stack || e.message : e;\n                    }, a.disable = function() {\n                        const e = [\n                            ...a.names.map(o),\n                            ...a.skips.map(o).map((e)=>\"-\" + e)\n                        ].join(\",\");\n                        return a.enable(\"\"), e;\n                    }, a.enable = function(e) {\n                        let n;\n                        a.save(e), a.namespaces = e, a.names = [], a.skips = [];\n                        const i = (\"string\" == typeof e ? e : \"\").split(/[\\s,]+/), o = i.length;\n                        for(n = 0; n < o; n++)i[n] && (\"-\" === (e = i[n].replace(/\\*/g, \".*?\"))[0] ? a.skips.push(new RegExp(\"^\" + e.slice(1) + \"$\")) : a.names.push(new RegExp(\"^\" + e + \"$\")));\n                    }, a.enabled = function(e) {\n                        if (\"*\" === e[e.length - 1]) return !0;\n                        let n, i;\n                        for(n = 0, i = a.skips.length; n < i; n++)if (a.skips[n].test(e)) return !1;\n                        for(n = 0, i = a.names.length; n < i; n++)if (a.names[n].test(e)) return !0;\n                        return !1;\n                    }, a.humanize = n(628), a.destroy = function() {\n                        console.warn(\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\");\n                    }, Object.keys(e).forEach((n)=>{\n                        a[n] = e[n];\n                    }), a.names = [], a.skips = [], a.formatters = {}, a.selectColor = function(e) {\n                        let n = 0;\n                        for(let a = 0; a < e.length; a++)n = (n << 5) - n + e.charCodeAt(a), n |= 0;\n                        return a.colors[Math.abs(n) % a.colors.length];\n                    }, a.enable(a.load()), a;\n                };\n            },\n            241: (e, a, n)=>{\n                \"undefined\" == typeof process || \"renderer\" === process.type || !0 === false || process.__nwjs ? e.exports = n(292) : e.exports = n(428);\n            },\n            428: (e, a, n)=>{\n                const i = n(224), o = n(837);\n                a.init = function(e) {\n                    e.inspectOpts = {};\n                    const n = Object.keys(a.inspectOpts);\n                    for(let i = 0; i < n.length; i++)e.inspectOpts[n[i]] = a.inspectOpts[n[i]];\n                }, a.log = function(...e) {\n                    return process.stderr.write(o.format(...e) + \"\\n\");\n                }, a.formatArgs = function(n) {\n                    const { namespace: i, useColors: o } = this;\n                    if (o) {\n                        const a = this.color, o = \"\\x1b[3\" + (a < 8 ? a : \"8;5;\" + a), s = `  ${o};1m${i} \u001b[0m`;\n                        n[0] = s + n[0].split(\"\\n\").join(\"\\n\" + s), n.push(o + \"m+\" + e.exports.humanize(this.diff) + \"\\x1b[0m\");\n                    } else n[0] = (a.inspectOpts.hideDate ? \"\" : (new Date).toISOString() + \" \") + i + \" \" + n[0];\n                }, a.save = function(e) {\n                    e ? process.env.DEBUG = e : delete process.env.DEBUG;\n                }, a.load = function() {\n                    return process.env.DEBUG;\n                }, a.useColors = function() {\n                    return \"colors\" in a.inspectOpts ? Boolean(a.inspectOpts.colors) : i.isatty(process.stderr.fd);\n                }, a.destroy = o.deprecate(()=>{}, \"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\"), a.colors = [\n                    6,\n                    2,\n                    3,\n                    4,\n                    5,\n                    1\n                ];\n                try {\n                    const e = n(974);\n                    e && (e.stderr || e).level >= 2 && (a.colors = [\n                        20,\n                        21,\n                        26,\n                        27,\n                        32,\n                        33,\n                        38,\n                        39,\n                        40,\n                        41,\n                        42,\n                        43,\n                        44,\n                        45,\n                        56,\n                        57,\n                        62,\n                        63,\n                        68,\n                        69,\n                        74,\n                        75,\n                        76,\n                        77,\n                        78,\n                        79,\n                        80,\n                        81,\n                        92,\n                        93,\n                        98,\n                        99,\n                        112,\n                        113,\n                        128,\n                        129,\n                        134,\n                        135,\n                        148,\n                        149,\n                        160,\n                        161,\n                        162,\n                        163,\n                        164,\n                        165,\n                        166,\n                        167,\n                        168,\n                        169,\n                        170,\n                        171,\n                        172,\n                        173,\n                        178,\n                        179,\n                        184,\n                        185,\n                        196,\n                        197,\n                        198,\n                        199,\n                        200,\n                        201,\n                        202,\n                        203,\n                        204,\n                        205,\n                        206,\n                        207,\n                        208,\n                        209,\n                        214,\n                        215,\n                        220,\n                        221\n                    ]);\n                } catch (e) {}\n                a.inspectOpts = Object.keys(process.env).filter((e)=>/^debug_/i.test(e)).reduce((e, a)=>{\n                    const n = a.substring(6).toLowerCase().replace(/_([a-z])/g, (e, a)=>a.toUpperCase());\n                    let i = process.env[a];\n                    return i = !!/^(yes|on|true|enabled)$/i.test(i) || !/^(no|off|false|disabled)$/i.test(i) && (\"null\" === i ? null : Number(i)), e[n] = i, e;\n                }, {}), e.exports = n(374)(a);\n                const { formatters: s } = e.exports;\n                s.o = function(e) {\n                    return this.inspectOpts.colors = this.useColors, o.inspect(e, this.inspectOpts).split(\"\\n\").map((e)=>e.trim()).join(\" \");\n                }, s.O = function(e) {\n                    return this.inspectOpts.colors = this.useColors, o.inspect(e, this.inspectOpts);\n                };\n            },\n            444: (e, a, n)=>{\n                var i = n(781).Stream, o = n(837);\n                function s() {\n                    this.source = null, this.dataSize = 0, this.maxDataSize = 1048576, this.pauseStream = !0, this._maxDataSizeExceeded = !1, this._released = !1, this._bufferedEvents = [];\n                }\n                e.exports = s, o.inherits(s, i), s.create = function(e, a) {\n                    var n = new this;\n                    for(var i in a = a || {})n[i] = a[i];\n                    n.source = e;\n                    var o = e.emit;\n                    return e.emit = function() {\n                        return n._handleEmit(arguments), o.apply(e, arguments);\n                    }, e.on(\"error\", function() {}), n.pauseStream && e.pause(), n;\n                }, Object.defineProperty(s.prototype, \"readable\", {\n                    configurable: !0,\n                    enumerable: !0,\n                    get: function() {\n                        return this.source.readable;\n                    }\n                }), s.prototype.setEncoding = function() {\n                    return this.source.setEncoding.apply(this.source, arguments);\n                }, s.prototype.resume = function() {\n                    this._released || this.release(), this.source.resume();\n                }, s.prototype.pause = function() {\n                    this.source.pause();\n                }, s.prototype.release = function() {\n                    this._released = !0, this._bufferedEvents.forEach((function(e) {\n                        this.emit.apply(this, e);\n                    }).bind(this)), this._bufferedEvents = [];\n                }, s.prototype.pipe = function() {\n                    var e = i.prototype.pipe.apply(this, arguments);\n                    return this.resume(), e;\n                }, s.prototype._handleEmit = function(e) {\n                    this._released ? this.emit.apply(this, e) : (\"data\" === e[0] && (this.dataSize += e[1].length, this._checkIfMaxDataSizeExceeded()), this._bufferedEvents.push(e));\n                }, s.prototype._checkIfMaxDataSizeExceeded = function() {\n                    if (!(this._maxDataSizeExceeded || this.dataSize <= this.maxDataSize)) {\n                        this._maxDataSizeExceeded = !0;\n                        var e = \"DelayedStream#maxDataSize of \" + this.maxDataSize + \" bytes exceeded.\";\n                        this.emit(\"error\", new Error(e));\n                    }\n                };\n            },\n            276: (e, a, n)=>{\n                var i;\n                e.exports = function() {\n                    if (!i) {\n                        try {\n                            i = n(241)(\"follow-redirects\");\n                        } catch (e) {}\n                        \"function\" != typeof i && (i = function() {});\n                    }\n                    i.apply(null, arguments);\n                };\n            },\n            95: (e, a, n)=>{\n                var i = n(310), o = i.URL, s = n(685), t = n(687), r = n(781).Writable, c = n(491), p = n(276), l = [\n                    \"abort\",\n                    \"aborted\",\n                    \"connect\",\n                    \"error\",\n                    \"socket\",\n                    \"timeout\"\n                ], u = Object.create(null);\n                l.forEach(function(e) {\n                    u[e] = function(a, n, i) {\n                        this._redirectable.emit(e, a, n, i);\n                    };\n                });\n                var d = k(\"ERR_INVALID_URL\", \"Invalid URL\", TypeError), m = k(\"ERR_FR_REDIRECTION_FAILURE\", \"Redirected request failed\"), f = k(\"ERR_FR_TOO_MANY_REDIRECTS\", \"Maximum number of redirects exceeded\"), x = k(\"ERR_FR_MAX_BODY_LENGTH_EXCEEDED\", \"Request body larger than maxBodyLength limit\"), v = k(\"ERR_STREAM_WRITE_AFTER_END\", \"write after end\");\n                function h(e, a) {\n                    r.call(this), this._sanitizeOptions(e), this._options = e, this._ended = !1, this._ending = !1, this._redirectCount = 0, this._redirects = [], this._requestBodyLength = 0, this._requestBodyBuffers = [], a && this.on(\"response\", a);\n                    var n = this;\n                    this._onNativeResponse = function(e) {\n                        n._processResponse(e);\n                    }, this._performRequest();\n                }\n                function b(e) {\n                    var a = {\n                        maxRedirects: 21,\n                        maxBodyLength: 10485760\n                    }, n = {};\n                    return Object.keys(e).forEach(function(s) {\n                        var t = s + \":\", r = n[t] = e[s], l = a[s] = Object.create(r);\n                        Object.defineProperties(l, {\n                            request: {\n                                value: function(e, s, r) {\n                                    if (_(e)) {\n                                        var l;\n                                        try {\n                                            l = y(new o(e));\n                                        } catch (a) {\n                                            l = i.parse(e);\n                                        }\n                                        if (!_(l.protocol)) throw new d({\n                                            input: e\n                                        });\n                                        e = l;\n                                    } else o && e instanceof o ? e = y(e) : (r = s, s = e, e = {\n                                        protocol: t\n                                    });\n                                    return E(s) && (r = s, s = null), (s = Object.assign({\n                                        maxRedirects: a.maxRedirects,\n                                        maxBodyLength: a.maxBodyLength\n                                    }, e, s)).nativeProtocols = n, _(s.host) || _(s.hostname) || (s.hostname = \"::1\"), c.equal(s.protocol, t, \"protocol mismatch\"), p(\"options\", s), new h(s, r);\n                                },\n                                configurable: !0,\n                                enumerable: !0,\n                                writable: !0\n                            },\n                            get: {\n                                value: function(e, a, n) {\n                                    var i = l.request(e, a, n);\n                                    return i.end(), i;\n                                },\n                                configurable: !0,\n                                enumerable: !0,\n                                writable: !0\n                            }\n                        });\n                    }), a;\n                }\n                function g() {}\n                function y(e) {\n                    var a = {\n                        protocol: e.protocol,\n                        hostname: e.hostname.startsWith(\"[\") ? e.hostname.slice(1, -1) : e.hostname,\n                        hash: e.hash,\n                        search: e.search,\n                        pathname: e.pathname,\n                        path: e.pathname + e.search,\n                        href: e.href\n                    };\n                    return \"\" !== e.port && (a.port = Number(e.port)), a;\n                }\n                function w(e, a) {\n                    var n;\n                    for(var i in a)e.test(i) && (n = a[i], delete a[i]);\n                    return null == n ? void 0 : String(n).trim();\n                }\n                function k(e, a, n) {\n                    function i(n) {\n                        Error.captureStackTrace(this, this.constructor), Object.assign(this, n || {}), this.code = e, this.message = this.cause ? a + \": \" + this.cause.message : a;\n                    }\n                    return i.prototype = new (n || Error), i.prototype.constructor = i, i.prototype.name = \"Error [\" + e + \"]\", i;\n                }\n                function j(e) {\n                    for (var a of l)e.removeListener(a, u[a]);\n                    e.on(\"error\", g), e.abort();\n                }\n                function _(e) {\n                    return \"string\" == typeof e || e instanceof String;\n                }\n                function E(e) {\n                    return \"function\" == typeof e;\n                }\n                h.prototype = Object.create(r.prototype), h.prototype.abort = function() {\n                    j(this._currentRequest), this.emit(\"abort\");\n                }, h.prototype.write = function(e, a, n) {\n                    if (this._ending) throw new v;\n                    if (!(_(e) || \"object\" == typeof (i = e) && \"length\" in i)) throw new TypeError(\"data should be a string, Buffer or Uint8Array\");\n                    var i;\n                    E(a) && (n = a, a = null), 0 !== e.length ? this._requestBodyLength + e.length <= this._options.maxBodyLength ? (this._requestBodyLength += e.length, this._requestBodyBuffers.push({\n                        data: e,\n                        encoding: a\n                    }), this._currentRequest.write(e, a, n)) : (this.emit(\"error\", new x), this.abort()) : n && n();\n                }, h.prototype.end = function(e, a, n) {\n                    if (E(e) ? (n = e, e = a = null) : E(a) && (n = a, a = null), e) {\n                        var i = this, o = this._currentRequest;\n                        this.write(e, a, function() {\n                            i._ended = !0, o.end(null, null, n);\n                        }), this._ending = !0;\n                    } else this._ended = this._ending = !0, this._currentRequest.end(null, null, n);\n                }, h.prototype.setHeader = function(e, a) {\n                    this._options.headers[e] = a, this._currentRequest.setHeader(e, a);\n                }, h.prototype.removeHeader = function(e) {\n                    delete this._options.headers[e], this._currentRequest.removeHeader(e);\n                }, h.prototype.setTimeout = function(e, a) {\n                    var n = this;\n                    function i(a) {\n                        a.setTimeout(e), a.removeListener(\"timeout\", a.destroy), a.addListener(\"timeout\", a.destroy);\n                    }\n                    function o(a) {\n                        n._timeout && clearTimeout(n._timeout), n._timeout = setTimeout(function() {\n                            n.emit(\"timeout\"), s();\n                        }, e), i(a);\n                    }\n                    function s() {\n                        n._timeout && (clearTimeout(n._timeout), n._timeout = null), n.removeListener(\"abort\", s), n.removeListener(\"error\", s), n.removeListener(\"response\", s), a && n.removeListener(\"timeout\", a), n.socket || n._currentRequest.removeListener(\"socket\", o);\n                    }\n                    return a && this.on(\"timeout\", a), this.socket ? o(this.socket) : this._currentRequest.once(\"socket\", o), this.on(\"socket\", i), this.on(\"abort\", s), this.on(\"error\", s), this.on(\"response\", s), this;\n                }, [\n                    \"flushHeaders\",\n                    \"getHeader\",\n                    \"setNoDelay\",\n                    \"setSocketKeepAlive\"\n                ].forEach(function(e) {\n                    h.prototype[e] = function(a, n) {\n                        return this._currentRequest[e](a, n);\n                    };\n                }), [\n                    \"aborted\",\n                    \"connection\",\n                    \"socket\"\n                ].forEach(function(e) {\n                    Object.defineProperty(h.prototype, e, {\n                        get: function() {\n                            return this._currentRequest[e];\n                        }\n                    });\n                }), h.prototype._sanitizeOptions = function(e) {\n                    if (e.headers || (e.headers = {}), e.host && (e.hostname || (e.hostname = e.host), delete e.host), !e.pathname && e.path) {\n                        var a = e.path.indexOf(\"?\");\n                        a < 0 ? e.pathname = e.path : (e.pathname = e.path.substring(0, a), e.search = e.path.substring(a));\n                    }\n                }, h.prototype._performRequest = function() {\n                    var e = this._options.protocol, a = this._options.nativeProtocols[e];\n                    if (a) {\n                        if (this._options.agents) {\n                            var n = e.slice(0, -1);\n                            this._options.agent = this._options.agents[n];\n                        }\n                        var o = this._currentRequest = a.request(this._options, this._onNativeResponse);\n                        for (var s of (o._redirectable = this, l))o.on(s, u[s]);\n                        if (this._currentUrl = /^\\//.test(this._options.path) ? i.format(this._options) : this._options.path, this._isRedirect) {\n                            var t = 0, r = this, c = this._requestBodyBuffers;\n                            !function e(a) {\n                                if (o === r._currentRequest) if (a) r.emit(\"error\", a);\n                                else if (t < c.length) {\n                                    var n = c[t++];\n                                    o.finished || o.write(n.data, n.encoding, e);\n                                } else r._ended && o.end();\n                            }();\n                        }\n                    } else this.emit(\"error\", new TypeError(\"Unsupported protocol \" + e));\n                }, h.prototype._processResponse = function(e) {\n                    var a = e.statusCode;\n                    this._options.trackRedirects && this._redirects.push({\n                        url: this._currentUrl,\n                        headers: e.headers,\n                        statusCode: a\n                    });\n                    var n = e.headers.location;\n                    if (!n || !1 === this._options.followRedirects || a < 300 || a >= 400) return e.responseUrl = this._currentUrl, e.redirects = this._redirects, this.emit(\"response\", e), void (this._requestBodyBuffers = []);\n                    if (j(this._currentRequest), e.destroy(), ++this._redirectCount > this._options.maxRedirects) this.emit(\"error\", new f);\n                    else {\n                        var o, s = this._options.beforeRedirect;\n                        s && (o = Object.assign({\n                            Host: e.req.getHeader(\"host\")\n                        }, this._options.headers));\n                        var t = this._options.method;\n                        ((301 === a || 302 === a) && \"POST\" === this._options.method || 303 === a && !/^(?:GET|HEAD)$/.test(this._options.method)) && (this._options.method = \"GET\", this._requestBodyBuffers = [], w(/^content-/i, this._options.headers));\n                        var r, l = w(/^host$/i, this._options.headers), u = i.parse(this._currentUrl), d = l || u.host, x = /^\\w+:/.test(n) ? this._currentUrl : i.format(Object.assign(u, {\n                            host: d\n                        }));\n                        try {\n                            r = i.resolve(x, n);\n                        } catch (e) {\n                            return void this.emit(\"error\", new m({\n                                cause: e\n                            }));\n                        }\n                        p(\"redirecting to\", r), this._isRedirect = !0;\n                        var v = i.parse(r);\n                        if (Object.assign(this._options, v), (v.protocol !== u.protocol && \"https:\" !== v.protocol || v.host !== d && !function(e, a) {\n                            c(_(e) && _(a));\n                            var n = e.length - a.length - 1;\n                            return n > 0 && \".\" === e[n] && e.endsWith(a);\n                        }(v.host, d)) && w(/^(?:authorization|cookie)$/i, this._options.headers), E(s)) {\n                            var h = {\n                                headers: e.headers,\n                                statusCode: a\n                            }, b = {\n                                url: x,\n                                method: t,\n                                headers: o\n                            };\n                            try {\n                                s(this._options, h, b);\n                            } catch (e) {\n                                return void this.emit(\"error\", e);\n                            }\n                            this._sanitizeOptions(this._options);\n                        }\n                        try {\n                            this._performRequest();\n                        } catch (e) {\n                            this.emit(\"error\", new m({\n                                cause: e\n                            }));\n                        }\n                    }\n                }, e.exports = b({\n                    http: s,\n                    https: t\n                }), e.exports.wrap = b;\n            },\n            875: (e)=>{\n                \"use strict\";\n                e.exports = (e, a)=>{\n                    a = a || process.argv;\n                    const n = e.startsWith(\"-\") ? \"\" : 1 === e.length ? \"-\" : \"--\", i = a.indexOf(n + e), o = a.indexOf(\"--\");\n                    return -1 !== i && (-1 === o || i < o);\n                };\n            },\n            784: (e, a)=>{\n                function n(e, a) {\n                    var n = [], i = [];\n                    return null == a && (a = function(e, a) {\n                        return n[0] === a ? \"[Circular ~]\" : \"[Circular ~.\" + i.slice(0, n.indexOf(a)).join(\".\") + \"]\";\n                    }), function(o, s) {\n                        if (n.length > 0) {\n                            var t = n.indexOf(this);\n                            ~t ? n.splice(t + 1) : n.push(this), ~t ? i.splice(t, 1 / 0, o) : i.push(o), ~n.indexOf(s) && (s = a.call(this, o, s));\n                        } else n.push(s);\n                        return null == e ? s : e.call(this, o, s);\n                    };\n                }\n                (e.exports = function(e, a, i, o) {\n                    return JSON.stringify(e, n(a, o), i);\n                }).getSerialize = n;\n            },\n            261: (e)=>{\n                var a, n, i = Function.prototype, o = Object.prototype, s = i.toString, t = o.hasOwnProperty, r = s.call(Object), c = o.toString, p = (a = Object.getPrototypeOf, n = Object, function(e) {\n                    return a(n(e));\n                });\n                e.exports = function(e) {\n                    if (!function(e) {\n                        return !!e && \"object\" == typeof e;\n                    }(e) || \"[object Object]\" != c.call(e) || function(e) {\n                        var a = !1;\n                        if (null != e && \"function\" != typeof e.toString) try {\n                            a = !!(e + \"\");\n                        } catch (e) {}\n                        return a;\n                    }(e)) return !1;\n                    var a = p(e);\n                    if (null === a) return !0;\n                    var n = t.call(a, \"constructor\") && a.constructor;\n                    return \"function\" == typeof n && n instanceof n && s.call(n) == r;\n                };\n            },\n            451: (e)=>{\n                var a = Object.prototype.toString, n = Array.isArray;\n                e.exports = function(e) {\n                    return \"string\" == typeof e || !n(e) && function(e) {\n                        return !!e && \"object\" == typeof e;\n                    }(e) && \"[object String]\" == a.call(e);\n                };\n            },\n            955: (e, a, n)=>{\n                e.exports = n(392);\n            },\n            839: (e, a, n)=>{\n                \"use strict\";\n                var i, o, s, t = n(955), r = n(17).extname, c = /^\\s*([^;\\s]*)(?:;|\\s|$)/, p = /^text\\//i;\n                function l(e) {\n                    if (!e || \"string\" != typeof e) return !1;\n                    var a = c.exec(e), n = a && t[a[1].toLowerCase()];\n                    return n && n.charset ? n.charset : !(!a || !p.test(a[1])) && \"UTF-8\";\n                }\n                a.charset = l, a.charsets = {\n                    lookup: l\n                }, a.contentType = function(e) {\n                    if (!e || \"string\" != typeof e) return !1;\n                    var n = -1 === e.indexOf(\"/\") ? a.lookup(e) : e;\n                    if (!n) return !1;\n                    if (-1 === n.indexOf(\"charset\")) {\n                        var i = a.charset(n);\n                        i && (n += \"; charset=\" + i.toLowerCase());\n                    }\n                    return n;\n                }, a.extension = function(e) {\n                    if (!e || \"string\" != typeof e) return !1;\n                    var n = c.exec(e), i = n && a.extensions[n[1].toLowerCase()];\n                    return !(!i || !i.length) && i[0];\n                }, a.extensions = Object.create(null), a.lookup = function(e) {\n                    if (!e || \"string\" != typeof e) return !1;\n                    var n = r(\"x.\" + e).toLowerCase().substr(1);\n                    return n && a.types[n] || !1;\n                }, a.types = Object.create(null), i = a.extensions, o = a.types, s = [\n                    \"nginx\",\n                    \"apache\",\n                    void 0,\n                    \"iana\"\n                ], Object.keys(t).forEach(function(e) {\n                    var a = t[e], n = a.extensions;\n                    if (n && n.length) {\n                        i[e] = n;\n                        for(var r = 0; r < n.length; r++){\n                            var c = n[r];\n                            if (o[c]) {\n                                var p = s.indexOf(t[o[c]].source), l = s.indexOf(a.source);\n                                if (\"application/octet-stream\" !== o[c] && (p > l || p === l && \"application/\" === o[c].substr(0, 12))) continue;\n                            }\n                            o[c] = e;\n                        }\n                    }\n                });\n            },\n            628: (e)=>{\n                var a = 1e3, n = 60 * a, i = 60 * n, o = 24 * i;\n                function s(e, a, n, i) {\n                    var o = a >= 1.5 * n;\n                    return Math.round(e / n) + \" \" + i + (o ? \"s\" : \"\");\n                }\n                e.exports = function(e, t) {\n                    t = t || {};\n                    var r, c, p = typeof e;\n                    if (\"string\" === p && e.length > 0) return function(e) {\n                        if (!((e = String(e)).length > 100)) {\n                            var s = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);\n                            if (s) {\n                                var t = parseFloat(s[1]);\n                                switch((s[2] || \"ms\").toLowerCase()){\n                                    case \"years\":\n                                    case \"year\":\n                                    case \"yrs\":\n                                    case \"yr\":\n                                    case \"y\":\n                                        return 315576e5 * t;\n                                    case \"weeks\":\n                                    case \"week\":\n                                    case \"w\":\n                                        return 6048e5 * t;\n                                    case \"days\":\n                                    case \"day\":\n                                    case \"d\":\n                                        return t * o;\n                                    case \"hours\":\n                                    case \"hour\":\n                                    case \"hrs\":\n                                    case \"hr\":\n                                    case \"h\":\n                                        return t * i;\n                                    case \"minutes\":\n                                    case \"minute\":\n                                    case \"mins\":\n                                    case \"min\":\n                                    case \"m\":\n                                        return t * n;\n                                    case \"seconds\":\n                                    case \"second\":\n                                    case \"secs\":\n                                    case \"sec\":\n                                    case \"s\":\n                                        return t * a;\n                                    case \"milliseconds\":\n                                    case \"millisecond\":\n                                    case \"msecs\":\n                                    case \"msec\":\n                                    case \"ms\":\n                                        return t;\n                                    default:\n                                        return;\n                                }\n                            }\n                        }\n                    }(e);\n                    if (\"number\" === p && isFinite(e)) return t.long ? (r = e, (c = Math.abs(r)) >= o ? s(r, c, o, \"day\") : c >= i ? s(r, c, i, \"hour\") : c >= n ? s(r, c, n, \"minute\") : c >= a ? s(r, c, a, \"second\") : r + \" ms\") : function(e) {\n                        var s = Math.abs(e);\n                        return s >= o ? Math.round(e / o) + \"d\" : s >= i ? Math.round(e / i) + \"h\" : s >= n ? Math.round(e / n) + \"m\" : s >= a ? Math.round(e / a) + \"s\" : e + \"ms\";\n                    }(e);\n                    throw new Error(\"val is not a non-empty string or a valid number. val=\" + JSON.stringify(e));\n                };\n            },\n            930: (e)=>{\n                \"use strict\";\n                class a extends Error {\n                    constructor(){\n                        super(\"Throttled function aborted\"), this.name = \"AbortError\";\n                    }\n                }\n                e.exports = ({ limit: e, interval: n, strict: i })=>{\n                    if (!Number.isFinite(e)) throw new TypeError(\"Expected `limit` to be a finite number\");\n                    if (!Number.isFinite(n)) throw new TypeError(\"Expected `interval` to be a finite number\");\n                    const o = new Map;\n                    let s = 0, t = 0;\n                    const r = [], c = i ? function() {\n                        const a = Date.now();\n                        if (r.length < e) return r.push(a), 0;\n                        const i = r.shift() + n;\n                        return a >= i ? (r.push(a), 0) : (r.push(i), i - a);\n                    } : function() {\n                        const a = Date.now();\n                        return a - s > n ? (t = 1, s = a, 0) : (t < e ? t++ : (s += n, t = 1), s - a);\n                    };\n                    return (e)=>{\n                        const n = function(...a) {\n                            if (!n.isEnabled) return (async ()=>e.apply(this, a))();\n                            let i;\n                            return new Promise((n, s)=>{\n                                i = setTimeout(()=>{\n                                    n(e.apply(this, a)), o.delete(i);\n                                }, c()), o.set(i, s);\n                            });\n                        };\n                        return n.abort = ()=>{\n                            for (const e of o.keys())clearTimeout(e), o.get(e)(new a);\n                            o.clear(), r.splice(0, r.length);\n                        }, n.isEnabled = !0, n;\n                    };\n                }, e.exports.AbortError = a;\n            },\n            104: (e, a, n)=>{\n                \"use strict\";\n                var i = n(310).parse, o = {\n                    ftp: 21,\n                    gopher: 70,\n                    http: 80,\n                    https: 443,\n                    ws: 80,\n                    wss: 443\n                }, s = String.prototype.endsWith || function(e) {\n                    return e.length <= this.length && -1 !== this.indexOf(e, this.length - e.length);\n                };\n                function t(e) {\n                    return process.env[e.toLowerCase()] || process.env[e.toUpperCase()] || \"\";\n                }\n                a.j = function(e) {\n                    var a = \"string\" == typeof e ? i(e) : e || {}, n = a.protocol, r = a.host, c = a.port;\n                    if (\"string\" != typeof r || !r || \"string\" != typeof n) return \"\";\n                    if (n = n.split(\":\", 1)[0], !function(e, a) {\n                        var n = (t(\"npm_config_no_proxy\") || t(\"no_proxy\")).toLowerCase();\n                        return !n || \"*\" !== n && n.split(/[,\\s]/).every(function(n) {\n                            if (!n) return !0;\n                            var i = n.match(/^(.+):(\\d+)$/), o = i ? i[1] : n, t = i ? parseInt(i[2]) : 0;\n                            return !(!t || t === a) || (/^[.*]/.test(o) ? (\"*\" === o.charAt(0) && (o = o.slice(1)), !s.call(e, o)) : e !== o);\n                        });\n                    }(r = r.replace(/:\\d*$/, \"\"), c = parseInt(c) || o[n] || 0)) return \"\";\n                    var p = t(\"npm_config_\" + n + \"_proxy\") || t(n + \"_proxy\") || t(\"npm_config_proxy\") || t(\"all_proxy\");\n                    return p && -1 === p.indexOf(\"://\") && (p = n + \"://\" + p), p;\n                };\n            },\n            974: (e, a, n)=>{\n                \"use strict\";\n                const i = n(37), o = n(875), s = process.env;\n                let t;\n                function r(e) {\n                    const a = function(e) {\n                        if (!1 === t) return 0;\n                        if (o(\"color=16m\") || o(\"color=full\") || o(\"color=truecolor\")) return 3;\n                        if (o(\"color=256\")) return 2;\n                        if (e && !e.isTTY && !0 !== t) return 0;\n                        const a = t ? 1 : 0;\n                        if (\"win32\" === process.platform) {\n                            const e = i.release().split(\".\");\n                            return Number(process.versions.node.split(\".\")[0]) >= 8 && Number(e[0]) >= 10 && Number(e[2]) >= 10586 ? Number(e[2]) >= 14931 ? 3 : 2 : 1;\n                        }\n                        if (\"CI\" in s) return [\n                            \"TRAVIS\",\n                            \"CIRCLECI\",\n                            \"APPVEYOR\",\n                            \"GITLAB_CI\"\n                        ].some((e)=>e in s) || \"codeship\" === s.CI_NAME ? 1 : a;\n                        if (\"TEAMCITY_VERSION\" in s) return /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(s.TEAMCITY_VERSION) ? 1 : 0;\n                        if (\"truecolor\" === s.COLORTERM) return 3;\n                        if (\"TERM_PROGRAM\" in s) {\n                            const e = parseInt((s.TERM_PROGRAM_VERSION || \"\").split(\".\")[0], 10);\n                            switch(s.TERM_PROGRAM){\n                                case \"iTerm.app\":\n                                    return e >= 3 ? 3 : 2;\n                                case \"Apple_Terminal\":\n                                    return 2;\n                            }\n                        }\n                        return /-256(color)?$/i.test(s.TERM) ? 2 : /^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(s.TERM) || \"COLORTERM\" in s ? 1 : (s.TERM, a);\n                    }(e);\n                    return function(e) {\n                        return 0 !== e && {\n                            level: e,\n                            hasBasic: !0,\n                            has256: e >= 2,\n                            has16m: e >= 3\n                        };\n                    }(a);\n                }\n                o(\"no-color\") || o(\"no-colors\") || o(\"color=false\") ? t = !1 : (o(\"color\") || o(\"colors\") || o(\"color=true\") || o(\"color=always\")) && (t = !0), \"FORCE_COLOR\" in s && (t = 0 === s.FORCE_COLOR.length || 0 !== parseInt(s.FORCE_COLOR, 10)), e.exports = {\n                    supportsColor: r,\n                    stdout: r(process.stdout),\n                    stderr: r(process.stderr)\n                };\n            },\n            491: (e)=>{\n                \"use strict\";\n                e.exports = __webpack_require__(/*! assert */ \"assert\");\n            },\n            147: (e)=>{\n                \"use strict\";\n                e.exports = __webpack_require__(/*! fs */ \"fs\");\n            },\n            685: (e)=>{\n                \"use strict\";\n                e.exports = __webpack_require__(/*! http */ \"http\");\n            },\n            687: (e)=>{\n                \"use strict\";\n                e.exports = __webpack_require__(/*! https */ \"https\");\n            },\n            37: (e)=>{\n                \"use strict\";\n                e.exports = __webpack_require__(/*! os */ \"os\");\n            },\n            17: (e)=>{\n                \"use strict\";\n                e.exports = __webpack_require__(/*! path */ \"path\");\n            },\n            781: (e)=>{\n                \"use strict\";\n                e.exports = __webpack_require__(/*! stream */ \"stream\");\n            },\n            224: (e)=>{\n                \"use strict\";\n                e.exports = __webpack_require__(/*! tty */ \"tty\");\n            },\n            310: (e)=>{\n                \"use strict\";\n                e.exports = __webpack_require__(/*! url */ \"url\");\n            },\n            837: (e)=>{\n                \"use strict\";\n                e.exports = __webpack_require__(/*! util */ \"util\");\n            },\n            392: (e)=>{\n                \"use strict\";\n                e.exports = JSON.parse('{\"application/1d-interleaved-parityfec\":{\"source\":\"iana\"},\"application/3gpdash-qoe-report+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/3gpp-ims+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/3gpphal+json\":{\"source\":\"iana\",\"compressible\":true},\"application/3gpphalforms+json\":{\"source\":\"iana\",\"compressible\":true},\"application/a2l\":{\"source\":\"iana\"},\"application/ace+cbor\":{\"source\":\"iana\"},\"application/activemessage\":{\"source\":\"iana\"},\"application/activity+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-costmap+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-costmapfilter+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-directory+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-endpointcost+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-endpointcostparams+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-endpointprop+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-endpointpropparams+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-error+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-networkmap+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-networkmapfilter+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-updatestreamcontrol+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-updatestreamparams+json\":{\"source\":\"iana\",\"compressible\":true},\"application/aml\":{\"source\":\"iana\"},\"application/andrew-inset\":{\"source\":\"iana\",\"extensions\":[\"ez\"]},\"application/applefile\":{\"source\":\"iana\"},\"application/applixware\":{\"source\":\"apache\",\"extensions\":[\"aw\"]},\"application/at+jwt\":{\"source\":\"iana\"},\"application/atf\":{\"source\":\"iana\"},\"application/atfx\":{\"source\":\"iana\"},\"application/atom+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"atom\"]},\"application/atomcat+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"atomcat\"]},\"application/atomdeleted+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"atomdeleted\"]},\"application/atomicmail\":{\"source\":\"iana\"},\"application/atomsvc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"atomsvc\"]},\"application/atsc-dwd+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dwd\"]},\"application/atsc-dynamic-event-message\":{\"source\":\"iana\"},\"application/atsc-held+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"held\"]},\"application/atsc-rdt+json\":{\"source\":\"iana\",\"compressible\":true},\"application/atsc-rsat+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rsat\"]},\"application/atxml\":{\"source\":\"iana\"},\"application/auth-policy+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/bacnet-xdd+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/batch-smtp\":{\"source\":\"iana\"},\"application/bdoc\":{\"compressible\":false,\"extensions\":[\"bdoc\"]},\"application/beep+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/calendar+json\":{\"source\":\"iana\",\"compressible\":true},\"application/calendar+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xcs\"]},\"application/call-completion\":{\"source\":\"iana\"},\"application/cals-1840\":{\"source\":\"iana\"},\"application/captive+json\":{\"source\":\"iana\",\"compressible\":true},\"application/cbor\":{\"source\":\"iana\"},\"application/cbor-seq\":{\"source\":\"iana\"},\"application/cccex\":{\"source\":\"iana\"},\"application/ccmp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/ccxml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ccxml\"]},\"application/cdfx+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"cdfx\"]},\"application/cdmi-capability\":{\"source\":\"iana\",\"extensions\":[\"cdmia\"]},\"application/cdmi-container\":{\"source\":\"iana\",\"extensions\":[\"cdmic\"]},\"application/cdmi-domain\":{\"source\":\"iana\",\"extensions\":[\"cdmid\"]},\"application/cdmi-object\":{\"source\":\"iana\",\"extensions\":[\"cdmio\"]},\"application/cdmi-queue\":{\"source\":\"iana\",\"extensions\":[\"cdmiq\"]},\"application/cdni\":{\"source\":\"iana\"},\"application/cea\":{\"source\":\"iana\"},\"application/cea-2018+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cellml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cfw\":{\"source\":\"iana\"},\"application/clr\":{\"source\":\"iana\"},\"application/clue+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/clue_info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cms\":{\"source\":\"iana\"},\"application/cnrp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/coap-group+json\":{\"source\":\"iana\",\"compressible\":true},\"application/coap-payload\":{\"source\":\"iana\"},\"application/commonground\":{\"source\":\"iana\"},\"application/conference-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cose\":{\"source\":\"iana\"},\"application/cose-key\":{\"source\":\"iana\"},\"application/cose-key-set\":{\"source\":\"iana\"},\"application/cpl+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/csrattrs\":{\"source\":\"iana\"},\"application/csta+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cstadata+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/csvm+json\":{\"source\":\"iana\",\"compressible\":true},\"application/cu-seeme\":{\"source\":\"apache\",\"extensions\":[\"cu\"]},\"application/cwt\":{\"source\":\"iana\"},\"application/cybercash\":{\"source\":\"iana\"},\"application/dart\":{\"compressible\":true},\"application/dash+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mpd\"]},\"application/dashdelta\":{\"source\":\"iana\"},\"application/davmount+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"davmount\"]},\"application/dca-rft\":{\"source\":\"iana\"},\"application/dcd\":{\"source\":\"iana\"},\"application/dec-dx\":{\"source\":\"iana\"},\"application/dialog-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/dicom\":{\"source\":\"iana\"},\"application/dicom+json\":{\"source\":\"iana\",\"compressible\":true},\"application/dicom+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/dii\":{\"source\":\"iana\"},\"application/dit\":{\"source\":\"iana\"},\"application/dns\":{\"source\":\"iana\"},\"application/dns+json\":{\"source\":\"iana\",\"compressible\":true},\"application/dns-message\":{\"source\":\"iana\"},\"application/docbook+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"dbk\"]},\"application/dots+cbor\":{\"source\":\"iana\"},\"application/dskpp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/dssc+der\":{\"source\":\"iana\",\"extensions\":[\"dssc\"]},\"application/dssc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xdssc\"]},\"application/dvcs\":{\"source\":\"iana\"},\"application/ecmascript\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"es\",\"ecma\"]},\"application/edi-consent\":{\"source\":\"iana\"},\"application/edi-x12\":{\"source\":\"iana\",\"compressible\":false},\"application/edifact\":{\"source\":\"iana\",\"compressible\":false},\"application/efi\":{\"source\":\"iana\"},\"application/elm+json\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/elm+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.cap+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/emergencycalldata.comment+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.control+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.deviceinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.ecall.msd\":{\"source\":\"iana\"},\"application/emergencycalldata.providerinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.serviceinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.subscriberinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.veds+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emma+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"emma\"]},\"application/emotionml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"emotionml\"]},\"application/encaprtp\":{\"source\":\"iana\"},\"application/epp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/epub+zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"epub\"]},\"application/eshop\":{\"source\":\"iana\"},\"application/exi\":{\"source\":\"iana\",\"extensions\":[\"exi\"]},\"application/expect-ct-report+json\":{\"source\":\"iana\",\"compressible\":true},\"application/express\":{\"source\":\"iana\",\"extensions\":[\"exp\"]},\"application/fastinfoset\":{\"source\":\"iana\"},\"application/fastsoap\":{\"source\":\"iana\"},\"application/fdt+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"fdt\"]},\"application/fhir+json\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/fhir+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/fido.trusted-apps+json\":{\"compressible\":true},\"application/fits\":{\"source\":\"iana\"},\"application/flexfec\":{\"source\":\"iana\"},\"application/font-sfnt\":{\"source\":\"iana\"},\"application/font-tdpfr\":{\"source\":\"iana\",\"extensions\":[\"pfr\"]},\"application/font-woff\":{\"source\":\"iana\",\"compressible\":false},\"application/framework-attributes+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/geo+json\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"geojson\"]},\"application/geo+json-seq\":{\"source\":\"iana\"},\"application/geopackage+sqlite3\":{\"source\":\"iana\"},\"application/geoxacml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/gltf-buffer\":{\"source\":\"iana\"},\"application/gml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"gml\"]},\"application/gpx+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"gpx\"]},\"application/gxf\":{\"source\":\"apache\",\"extensions\":[\"gxf\"]},\"application/gzip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"gz\"]},\"application/h224\":{\"source\":\"iana\"},\"application/held+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/hjson\":{\"extensions\":[\"hjson\"]},\"application/http\":{\"source\":\"iana\"},\"application/hyperstudio\":{\"source\":\"iana\",\"extensions\":[\"stk\"]},\"application/ibe-key-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/ibe-pkg-reply+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/ibe-pp-data\":{\"source\":\"iana\"},\"application/iges\":{\"source\":\"iana\"},\"application/im-iscomposing+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/index\":{\"source\":\"iana\"},\"application/index.cmd\":{\"source\":\"iana\"},\"application/index.obj\":{\"source\":\"iana\"},\"application/index.response\":{\"source\":\"iana\"},\"application/index.vnd\":{\"source\":\"iana\"},\"application/inkml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ink\",\"inkml\"]},\"application/iotp\":{\"source\":\"iana\"},\"application/ipfix\":{\"source\":\"iana\",\"extensions\":[\"ipfix\"]},\"application/ipp\":{\"source\":\"iana\"},\"application/isup\":{\"source\":\"iana\"},\"application/its+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"its\"]},\"application/java-archive\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"jar\",\"war\",\"ear\"]},\"application/java-serialized-object\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"ser\"]},\"application/java-vm\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"class\"]},\"application/javascript\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"js\",\"mjs\"]},\"application/jf2feed+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jose\":{\"source\":\"iana\"},\"application/jose+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jrd+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jscalendar+json\":{\"source\":\"iana\",\"compressible\":true},\"application/json\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"json\",\"map\"]},\"application/json-patch+json\":{\"source\":\"iana\",\"compressible\":true},\"application/json-seq\":{\"source\":\"iana\"},\"application/json5\":{\"extensions\":[\"json5\"]},\"application/jsonml+json\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"jsonml\"]},\"application/jwk+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jwk-set+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jwt\":{\"source\":\"iana\"},\"application/kpml-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/kpml-response+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/ld+json\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"jsonld\"]},\"application/lgr+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"lgr\"]},\"application/link-format\":{\"source\":\"iana\"},\"application/load-control+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/lost+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"lostxml\"]},\"application/lostsync+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/lpf+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/lxf\":{\"source\":\"iana\"},\"application/mac-binhex40\":{\"source\":\"iana\",\"extensions\":[\"hqx\"]},\"application/mac-compactpro\":{\"source\":\"apache\",\"extensions\":[\"cpt\"]},\"application/macwriteii\":{\"source\":\"iana\"},\"application/mads+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mads\"]},\"application/manifest+json\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"webmanifest\"]},\"application/marc\":{\"source\":\"iana\",\"extensions\":[\"mrc\"]},\"application/marcxml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mrcx\"]},\"application/mathematica\":{\"source\":\"iana\",\"extensions\":[\"ma\",\"nb\",\"mb\"]},\"application/mathml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mathml\"]},\"application/mathml-content+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mathml-presentation+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-associated-procedure-description+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-deregister+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-envelope+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-msk+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-msk-response+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-protection-description+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-reception-report+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-register+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-register-response+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-schedule+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-user-service-description+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbox\":{\"source\":\"iana\",\"extensions\":[\"mbox\"]},\"application/media-policy-dataset+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/media_control+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mediaservercontrol+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mscml\"]},\"application/merge-patch+json\":{\"source\":\"iana\",\"compressible\":true},\"application/metalink+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"metalink\"]},\"application/metalink4+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"meta4\"]},\"application/mets+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mets\"]},\"application/mf4\":{\"source\":\"iana\"},\"application/mikey\":{\"source\":\"iana\"},\"application/mipc\":{\"source\":\"iana\"},\"application/missing-blocks+cbor-seq\":{\"source\":\"iana\"},\"application/mmt-aei+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"maei\"]},\"application/mmt-usd+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"musd\"]},\"application/mods+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mods\"]},\"application/moss-keys\":{\"source\":\"iana\"},\"application/moss-signature\":{\"source\":\"iana\"},\"application/mosskey-data\":{\"source\":\"iana\"},\"application/mosskey-request\":{\"source\":\"iana\"},\"application/mp21\":{\"source\":\"iana\",\"extensions\":[\"m21\",\"mp21\"]},\"application/mp4\":{\"source\":\"iana\",\"extensions\":[\"mp4s\",\"m4p\"]},\"application/mpeg4-generic\":{\"source\":\"iana\"},\"application/mpeg4-iod\":{\"source\":\"iana\"},\"application/mpeg4-iod-xmt\":{\"source\":\"iana\"},\"application/mrb-consumer+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mrb-publish+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/msc-ivr+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/msc-mixer+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/msword\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"doc\",\"dot\"]},\"application/mud+json\":{\"source\":\"iana\",\"compressible\":true},\"application/multipart-core\":{\"source\":\"iana\"},\"application/mxf\":{\"source\":\"iana\",\"extensions\":[\"mxf\"]},\"application/n-quads\":{\"source\":\"iana\",\"extensions\":[\"nq\"]},\"application/n-triples\":{\"source\":\"iana\",\"extensions\":[\"nt\"]},\"application/nasdata\":{\"source\":\"iana\"},\"application/news-checkgroups\":{\"source\":\"iana\",\"charset\":\"US-ASCII\"},\"application/news-groupinfo\":{\"source\":\"iana\",\"charset\":\"US-ASCII\"},\"application/news-transmission\":{\"source\":\"iana\"},\"application/nlsml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/node\":{\"source\":\"iana\",\"extensions\":[\"cjs\"]},\"application/nss\":{\"source\":\"iana\"},\"application/oauth-authz-req+jwt\":{\"source\":\"iana\"},\"application/ocsp-request\":{\"source\":\"iana\"},\"application/ocsp-response\":{\"source\":\"iana\"},\"application/octet-stream\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"bin\",\"dms\",\"lrf\",\"mar\",\"so\",\"dist\",\"distz\",\"pkg\",\"bpk\",\"dump\",\"elc\",\"deploy\",\"exe\",\"dll\",\"deb\",\"dmg\",\"iso\",\"img\",\"msi\",\"msp\",\"msm\",\"buffer\"]},\"application/oda\":{\"source\":\"iana\",\"extensions\":[\"oda\"]},\"application/odm+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/odx\":{\"source\":\"iana\"},\"application/oebps-package+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"opf\"]},\"application/ogg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"ogx\"]},\"application/omdoc+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"omdoc\"]},\"application/onenote\":{\"source\":\"apache\",\"extensions\":[\"onetoc\",\"onetoc2\",\"onetmp\",\"onepkg\"]},\"application/opc-nodeset+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/oscore\":{\"source\":\"iana\"},\"application/oxps\":{\"source\":\"iana\",\"extensions\":[\"oxps\"]},\"application/p21\":{\"source\":\"iana\"},\"application/p21+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/p2p-overlay+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"relo\"]},\"application/parityfec\":{\"source\":\"iana\"},\"application/passport\":{\"source\":\"iana\"},\"application/patch-ops-error+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xer\"]},\"application/pdf\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"pdf\"]},\"application/pdx\":{\"source\":\"iana\"},\"application/pem-certificate-chain\":{\"source\":\"iana\"},\"application/pgp-encrypted\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"pgp\"]},\"application/pgp-keys\":{\"source\":\"iana\"},\"application/pgp-signature\":{\"source\":\"iana\",\"extensions\":[\"asc\",\"sig\"]},\"application/pics-rules\":{\"source\":\"apache\",\"extensions\":[\"prf\"]},\"application/pidf+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/pidf-diff+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/pkcs10\":{\"source\":\"iana\",\"extensions\":[\"p10\"]},\"application/pkcs12\":{\"source\":\"iana\"},\"application/pkcs7-mime\":{\"source\":\"iana\",\"extensions\":[\"p7m\",\"p7c\"]},\"application/pkcs7-signature\":{\"source\":\"iana\",\"extensions\":[\"p7s\"]},\"application/pkcs8\":{\"source\":\"iana\",\"extensions\":[\"p8\"]},\"application/pkcs8-encrypted\":{\"source\":\"iana\"},\"application/pkix-attr-cert\":{\"source\":\"iana\",\"extensions\":[\"ac\"]},\"application/pkix-cert\":{\"source\":\"iana\",\"extensions\":[\"cer\"]},\"application/pkix-crl\":{\"source\":\"iana\",\"extensions\":[\"crl\"]},\"application/pkix-pkipath\":{\"source\":\"iana\",\"extensions\":[\"pkipath\"]},\"application/pkixcmp\":{\"source\":\"iana\",\"extensions\":[\"pki\"]},\"application/pls+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"pls\"]},\"application/poc-settings+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/postscript\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ai\",\"eps\",\"ps\"]},\"application/ppsp-tracker+json\":{\"source\":\"iana\",\"compressible\":true},\"application/problem+json\":{\"source\":\"iana\",\"compressible\":true},\"application/problem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/provenance+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"provx\"]},\"application/prs.alvestrand.titrax-sheet\":{\"source\":\"iana\"},\"application/prs.cww\":{\"source\":\"iana\",\"extensions\":[\"cww\"]},\"application/prs.cyn\":{\"source\":\"iana\",\"charset\":\"7-BIT\"},\"application/prs.hpub+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/prs.nprend\":{\"source\":\"iana\"},\"application/prs.plucker\":{\"source\":\"iana\"},\"application/prs.rdf-xml-crypt\":{\"source\":\"iana\"},\"application/prs.xsf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/pskc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"pskcxml\"]},\"application/pvd+json\":{\"source\":\"iana\",\"compressible\":true},\"application/qsig\":{\"source\":\"iana\"},\"application/raml+yaml\":{\"compressible\":true,\"extensions\":[\"raml\"]},\"application/raptorfec\":{\"source\":\"iana\"},\"application/rdap+json\":{\"source\":\"iana\",\"compressible\":true},\"application/rdf+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rdf\",\"owl\"]},\"application/reginfo+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rif\"]},\"application/relax-ng-compact-syntax\":{\"source\":\"iana\",\"extensions\":[\"rnc\"]},\"application/remote-printing\":{\"source\":\"iana\"},\"application/reputon+json\":{\"source\":\"iana\",\"compressible\":true},\"application/resource-lists+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rl\"]},\"application/resource-lists-diff+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rld\"]},\"application/rfc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/riscos\":{\"source\":\"iana\"},\"application/rlmi+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/rls-services+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rs\"]},\"application/route-apd+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rapd\"]},\"application/route-s-tsid+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sls\"]},\"application/route-usd+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rusd\"]},\"application/rpki-ghostbusters\":{\"source\":\"iana\",\"extensions\":[\"gbr\"]},\"application/rpki-manifest\":{\"source\":\"iana\",\"extensions\":[\"mft\"]},\"application/rpki-publication\":{\"source\":\"iana\"},\"application/rpki-roa\":{\"source\":\"iana\",\"extensions\":[\"roa\"]},\"application/rpki-updown\":{\"source\":\"iana\"},\"application/rsd+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"rsd\"]},\"application/rss+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"rss\"]},\"application/rtf\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rtf\"]},\"application/rtploopback\":{\"source\":\"iana\"},\"application/rtx\":{\"source\":\"iana\"},\"application/samlassertion+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/samlmetadata+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/sarif+json\":{\"source\":\"iana\",\"compressible\":true},\"application/sarif-external-properties+json\":{\"source\":\"iana\",\"compressible\":true},\"application/sbe\":{\"source\":\"iana\"},\"application/sbml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sbml\"]},\"application/scaip+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/scim+json\":{\"source\":\"iana\",\"compressible\":true},\"application/scvp-cv-request\":{\"source\":\"iana\",\"extensions\":[\"scq\"]},\"application/scvp-cv-response\":{\"source\":\"iana\",\"extensions\":[\"scs\"]},\"application/scvp-vp-request\":{\"source\":\"iana\",\"extensions\":[\"spq\"]},\"application/scvp-vp-response\":{\"source\":\"iana\",\"extensions\":[\"spp\"]},\"application/sdp\":{\"source\":\"iana\",\"extensions\":[\"sdp\"]},\"application/secevent+jwt\":{\"source\":\"iana\"},\"application/senml+cbor\":{\"source\":\"iana\"},\"application/senml+json\":{\"source\":\"iana\",\"compressible\":true},\"application/senml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"senmlx\"]},\"application/senml-etch+cbor\":{\"source\":\"iana\"},\"application/senml-etch+json\":{\"source\":\"iana\",\"compressible\":true},\"application/senml-exi\":{\"source\":\"iana\"},\"application/sensml+cbor\":{\"source\":\"iana\"},\"application/sensml+json\":{\"source\":\"iana\",\"compressible\":true},\"application/sensml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sensmlx\"]},\"application/sensml-exi\":{\"source\":\"iana\"},\"application/sep+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/sep-exi\":{\"source\":\"iana\"},\"application/session-info\":{\"source\":\"iana\"},\"application/set-payment\":{\"source\":\"iana\"},\"application/set-payment-initiation\":{\"source\":\"iana\",\"extensions\":[\"setpay\"]},\"application/set-registration\":{\"source\":\"iana\"},\"application/set-registration-initiation\":{\"source\":\"iana\",\"extensions\":[\"setreg\"]},\"application/sgml\":{\"source\":\"iana\"},\"application/sgml-open-catalog\":{\"source\":\"iana\"},\"application/shf+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"shf\"]},\"application/sieve\":{\"source\":\"iana\",\"extensions\":[\"siv\",\"sieve\"]},\"application/simple-filter+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/simple-message-summary\":{\"source\":\"iana\"},\"application/simplesymbolcontainer\":{\"source\":\"iana\"},\"application/sipc\":{\"source\":\"iana\"},\"application/slate\":{\"source\":\"iana\"},\"application/smil\":{\"source\":\"iana\"},\"application/smil+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"smi\",\"smil\"]},\"application/smpte336m\":{\"source\":\"iana\"},\"application/soap+fastinfoset\":{\"source\":\"iana\"},\"application/soap+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/sparql-query\":{\"source\":\"iana\",\"extensions\":[\"rq\"]},\"application/sparql-results+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"srx\"]},\"application/spdx+json\":{\"source\":\"iana\",\"compressible\":true},\"application/spirits-event+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/sql\":{\"source\":\"iana\"},\"application/srgs\":{\"source\":\"iana\",\"extensions\":[\"gram\"]},\"application/srgs+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"grxml\"]},\"application/sru+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sru\"]},\"application/ssdl+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"ssdl\"]},\"application/ssml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ssml\"]},\"application/stix+json\":{\"source\":\"iana\",\"compressible\":true},\"application/swid+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"swidtag\"]},\"application/tamp-apex-update\":{\"source\":\"iana\"},\"application/tamp-apex-update-confirm\":{\"source\":\"iana\"},\"application/tamp-community-update\":{\"source\":\"iana\"},\"application/tamp-community-update-confirm\":{\"source\":\"iana\"},\"application/tamp-error\":{\"source\":\"iana\"},\"application/tamp-sequence-adjust\":{\"source\":\"iana\"},\"application/tamp-sequence-adjust-confirm\":{\"source\":\"iana\"},\"application/tamp-status-query\":{\"source\":\"iana\"},\"application/tamp-status-response\":{\"source\":\"iana\"},\"application/tamp-update\":{\"source\":\"iana\"},\"application/tamp-update-confirm\":{\"source\":\"iana\"},\"application/tar\":{\"compressible\":true},\"application/taxii+json\":{\"source\":\"iana\",\"compressible\":true},\"application/td+json\":{\"source\":\"iana\",\"compressible\":true},\"application/tei+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"tei\",\"teicorpus\"]},\"application/tetra_isi\":{\"source\":\"iana\"},\"application/thraud+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"tfi\"]},\"application/timestamp-query\":{\"source\":\"iana\"},\"application/timestamp-reply\":{\"source\":\"iana\"},\"application/timestamped-data\":{\"source\":\"iana\",\"extensions\":[\"tsd\"]},\"application/tlsrpt+gzip\":{\"source\":\"iana\"},\"application/tlsrpt+json\":{\"source\":\"iana\",\"compressible\":true},\"application/tnauthlist\":{\"source\":\"iana\"},\"application/token-introspection+jwt\":{\"source\":\"iana\"},\"application/toml\":{\"compressible\":true,\"extensions\":[\"toml\"]},\"application/trickle-ice-sdpfrag\":{\"source\":\"iana\"},\"application/trig\":{\"source\":\"iana\",\"extensions\":[\"trig\"]},\"application/ttml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ttml\"]},\"application/tve-trigger\":{\"source\":\"iana\"},\"application/tzif\":{\"source\":\"iana\"},\"application/tzif-leap\":{\"source\":\"iana\"},\"application/ubjson\":{\"compressible\":false,\"extensions\":[\"ubj\"]},\"application/ulpfec\":{\"source\":\"iana\"},\"application/urc-grpsheet+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/urc-ressheet+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rsheet\"]},\"application/urc-targetdesc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"td\"]},\"application/urc-uisocketdesc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vcard+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vcard+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vemmi\":{\"source\":\"iana\"},\"application/vividence.scriptfile\":{\"source\":\"apache\"},\"application/vnd.1000minds.decision-model+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"1km\"]},\"application/vnd.3gpp-prose+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp-prose-pc3ch+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp-v2x-local-service-information\":{\"source\":\"iana\"},\"application/vnd.3gpp.5gnas\":{\"source\":\"iana\"},\"application/vnd.3gpp.access-transfer-events+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.bsf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.gmop+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.gtpc\":{\"source\":\"iana\"},\"application/vnd.3gpp.interworking-data\":{\"source\":\"iana\"},\"application/vnd.3gpp.lpp\":{\"source\":\"iana\"},\"application/vnd.3gpp.mc-signalling-ear\":{\"source\":\"iana\"},\"application/vnd.3gpp.mcdata-affiliation-command+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcdata-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcdata-payload\":{\"source\":\"iana\"},\"application/vnd.3gpp.mcdata-service-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcdata-signalling\":{\"source\":\"iana\"},\"application/vnd.3gpp.mcdata-ue-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcdata-user-profile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-affiliation-command+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-floor-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-location-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-mbms-usage-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-service-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-signed+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-ue-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-ue-init-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-user-profile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-affiliation-command+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-affiliation-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-location-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-mbms-usage-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-service-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-transmission-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-ue-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-user-profile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mid-call+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.ngap\":{\"source\":\"iana\"},\"application/vnd.3gpp.pfcp\":{\"source\":\"iana\"},\"application/vnd.3gpp.pic-bw-large\":{\"source\":\"iana\",\"extensions\":[\"plb\"]},\"application/vnd.3gpp.pic-bw-small\":{\"source\":\"iana\",\"extensions\":[\"psb\"]},\"application/vnd.3gpp.pic-bw-var\":{\"source\":\"iana\",\"extensions\":[\"pvb\"]},\"application/vnd.3gpp.s1ap\":{\"source\":\"iana\"},\"application/vnd.3gpp.sms\":{\"source\":\"iana\"},\"application/vnd.3gpp.sms+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.srvcc-ext+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.srvcc-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.state-and-event-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.ussd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp2.bcmcsinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp2.sms\":{\"source\":\"iana\"},\"application/vnd.3gpp2.tcap\":{\"source\":\"iana\",\"extensions\":[\"tcap\"]},\"application/vnd.3lightssoftware.imagescal\":{\"source\":\"iana\"},\"application/vnd.3m.post-it-notes\":{\"source\":\"iana\",\"extensions\":[\"pwn\"]},\"application/vnd.accpac.simply.aso\":{\"source\":\"iana\",\"extensions\":[\"aso\"]},\"application/vnd.accpac.simply.imp\":{\"source\":\"iana\",\"extensions\":[\"imp\"]},\"application/vnd.acucobol\":{\"source\":\"iana\",\"extensions\":[\"acu\"]},\"application/vnd.acucorp\":{\"source\":\"iana\",\"extensions\":[\"atc\",\"acutc\"]},\"application/vnd.adobe.air-application-installer-package+zip\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"air\"]},\"application/vnd.adobe.flash.movie\":{\"source\":\"iana\"},\"application/vnd.adobe.formscentral.fcdt\":{\"source\":\"iana\",\"extensions\":[\"fcdt\"]},\"application/vnd.adobe.fxp\":{\"source\":\"iana\",\"extensions\":[\"fxp\",\"fxpl\"]},\"application/vnd.adobe.partial-upload\":{\"source\":\"iana\"},\"application/vnd.adobe.xdp+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xdp\"]},\"application/vnd.adobe.xfdf\":{\"source\":\"iana\",\"extensions\":[\"xfdf\"]},\"application/vnd.aether.imp\":{\"source\":\"iana\"},\"application/vnd.afpc.afplinedata\":{\"source\":\"iana\"},\"application/vnd.afpc.afplinedata-pagedef\":{\"source\":\"iana\"},\"application/vnd.afpc.cmoca-cmresource\":{\"source\":\"iana\"},\"application/vnd.afpc.foca-charset\":{\"source\":\"iana\"},\"application/vnd.afpc.foca-codedfont\":{\"source\":\"iana\"},\"application/vnd.afpc.foca-codepage\":{\"source\":\"iana\"},\"application/vnd.afpc.modca\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-cmtable\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-formdef\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-mediummap\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-objectcontainer\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-overlay\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-pagesegment\":{\"source\":\"iana\"},\"application/vnd.age\":{\"source\":\"iana\",\"extensions\":[\"age\"]},\"application/vnd.ah-barcode\":{\"source\":\"iana\"},\"application/vnd.ahead.space\":{\"source\":\"iana\",\"extensions\":[\"ahead\"]},\"application/vnd.airzip.filesecure.azf\":{\"source\":\"iana\",\"extensions\":[\"azf\"]},\"application/vnd.airzip.filesecure.azs\":{\"source\":\"iana\",\"extensions\":[\"azs\"]},\"application/vnd.amadeus+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.amazon.ebook\":{\"source\":\"apache\",\"extensions\":[\"azw\"]},\"application/vnd.amazon.mobi8-ebook\":{\"source\":\"iana\"},\"application/vnd.americandynamics.acc\":{\"source\":\"iana\",\"extensions\":[\"acc\"]},\"application/vnd.amiga.ami\":{\"source\":\"iana\",\"extensions\":[\"ami\"]},\"application/vnd.amundsen.maze+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.android.ota\":{\"source\":\"iana\"},\"application/vnd.android.package-archive\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"apk\"]},\"application/vnd.anki\":{\"source\":\"iana\"},\"application/vnd.anser-web-certificate-issue-initiation\":{\"source\":\"iana\",\"extensions\":[\"cii\"]},\"application/vnd.anser-web-funds-transfer-initiation\":{\"source\":\"apache\",\"extensions\":[\"fti\"]},\"application/vnd.antix.game-component\":{\"source\":\"iana\",\"extensions\":[\"atx\"]},\"application/vnd.apache.arrow.file\":{\"source\":\"iana\"},\"application/vnd.apache.arrow.stream\":{\"source\":\"iana\"},\"application/vnd.apache.thrift.binary\":{\"source\":\"iana\"},\"application/vnd.apache.thrift.compact\":{\"source\":\"iana\"},\"application/vnd.apache.thrift.json\":{\"source\":\"iana\"},\"application/vnd.api+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.aplextor.warrp+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.apothekende.reservation+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.apple.installer+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mpkg\"]},\"application/vnd.apple.keynote\":{\"source\":\"iana\",\"extensions\":[\"key\"]},\"application/vnd.apple.mpegurl\":{\"source\":\"iana\",\"extensions\":[\"m3u8\"]},\"application/vnd.apple.numbers\":{\"source\":\"iana\",\"extensions\":[\"numbers\"]},\"application/vnd.apple.pages\":{\"source\":\"iana\",\"extensions\":[\"pages\"]},\"application/vnd.apple.pkpass\":{\"compressible\":false,\"extensions\":[\"pkpass\"]},\"application/vnd.arastra.swi\":{\"source\":\"iana\"},\"application/vnd.aristanetworks.swi\":{\"source\":\"iana\",\"extensions\":[\"swi\"]},\"application/vnd.artisan+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.artsquare\":{\"source\":\"iana\"},\"application/vnd.astraea-software.iota\":{\"source\":\"iana\",\"extensions\":[\"iota\"]},\"application/vnd.audiograph\":{\"source\":\"iana\",\"extensions\":[\"aep\"]},\"application/vnd.autopackage\":{\"source\":\"iana\"},\"application/vnd.avalon+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.avistar+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.balsamiq.bmml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"bmml\"]},\"application/vnd.balsamiq.bmpr\":{\"source\":\"iana\"},\"application/vnd.banana-accounting\":{\"source\":\"iana\"},\"application/vnd.bbf.usp.error\":{\"source\":\"iana\"},\"application/vnd.bbf.usp.msg\":{\"source\":\"iana\"},\"application/vnd.bbf.usp.msg+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.bekitzur-stech+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.bint.med-content\":{\"source\":\"iana\"},\"application/vnd.biopax.rdf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.blink-idb-value-wrapper\":{\"source\":\"iana\"},\"application/vnd.blueice.multipass\":{\"source\":\"iana\",\"extensions\":[\"mpm\"]},\"application/vnd.bluetooth.ep.oob\":{\"source\":\"iana\"},\"application/vnd.bluetooth.le.oob\":{\"source\":\"iana\"},\"application/vnd.bmi\":{\"source\":\"iana\",\"extensions\":[\"bmi\"]},\"application/vnd.bpf\":{\"source\":\"iana\"},\"application/vnd.bpf3\":{\"source\":\"iana\"},\"application/vnd.businessobjects\":{\"source\":\"iana\",\"extensions\":[\"rep\"]},\"application/vnd.byu.uapi+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cab-jscript\":{\"source\":\"iana\"},\"application/vnd.canon-cpdl\":{\"source\":\"iana\"},\"application/vnd.canon-lips\":{\"source\":\"iana\"},\"application/vnd.capasystems-pg+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cendio.thinlinc.clientconf\":{\"source\":\"iana\"},\"application/vnd.century-systems.tcp_stream\":{\"source\":\"iana\"},\"application/vnd.chemdraw+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"cdxml\"]},\"application/vnd.chess-pgn\":{\"source\":\"iana\"},\"application/vnd.chipnuts.karaoke-mmd\":{\"source\":\"iana\",\"extensions\":[\"mmd\"]},\"application/vnd.ciedi\":{\"source\":\"iana\"},\"application/vnd.cinderella\":{\"source\":\"iana\",\"extensions\":[\"cdy\"]},\"application/vnd.cirpack.isdn-ext\":{\"source\":\"iana\"},\"application/vnd.citationstyles.style+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"csl\"]},\"application/vnd.claymore\":{\"source\":\"iana\",\"extensions\":[\"cla\"]},\"application/vnd.cloanto.rp9\":{\"source\":\"iana\",\"extensions\":[\"rp9\"]},\"application/vnd.clonk.c4group\":{\"source\":\"iana\",\"extensions\":[\"c4g\",\"c4d\",\"c4f\",\"c4p\",\"c4u\"]},\"application/vnd.cluetrust.cartomobile-config\":{\"source\":\"iana\",\"extensions\":[\"c11amc\"]},\"application/vnd.cluetrust.cartomobile-config-pkg\":{\"source\":\"iana\",\"extensions\":[\"c11amz\"]},\"application/vnd.coffeescript\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.document\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.document-template\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.presentation\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.presentation-template\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.spreadsheet\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.spreadsheet-template\":{\"source\":\"iana\"},\"application/vnd.collection+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.collection.doc+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.collection.next+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.comicbook+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.comicbook-rar\":{\"source\":\"iana\"},\"application/vnd.commerce-battelle\":{\"source\":\"iana\"},\"application/vnd.commonspace\":{\"source\":\"iana\",\"extensions\":[\"csp\"]},\"application/vnd.contact.cmsg\":{\"source\":\"iana\",\"extensions\":[\"cdbcmsg\"]},\"application/vnd.coreos.ignition+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cosmocaller\":{\"source\":\"iana\",\"extensions\":[\"cmc\"]},\"application/vnd.crick.clicker\":{\"source\":\"iana\",\"extensions\":[\"clkx\"]},\"application/vnd.crick.clicker.keyboard\":{\"source\":\"iana\",\"extensions\":[\"clkk\"]},\"application/vnd.crick.clicker.palette\":{\"source\":\"iana\",\"extensions\":[\"clkp\"]},\"application/vnd.crick.clicker.template\":{\"source\":\"iana\",\"extensions\":[\"clkt\"]},\"application/vnd.crick.clicker.wordbank\":{\"source\":\"iana\",\"extensions\":[\"clkw\"]},\"application/vnd.criticaltools.wbs+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wbs\"]},\"application/vnd.cryptii.pipe+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.crypto-shade-file\":{\"source\":\"iana\"},\"application/vnd.cryptomator.encrypted\":{\"source\":\"iana\"},\"application/vnd.cryptomator.vault\":{\"source\":\"iana\"},\"application/vnd.ctc-posml\":{\"source\":\"iana\",\"extensions\":[\"pml\"]},\"application/vnd.ctct.ws+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cups-pdf\":{\"source\":\"iana\"},\"application/vnd.cups-postscript\":{\"source\":\"iana\"},\"application/vnd.cups-ppd\":{\"source\":\"iana\",\"extensions\":[\"ppd\"]},\"application/vnd.cups-raster\":{\"source\":\"iana\"},\"application/vnd.cups-raw\":{\"source\":\"iana\"},\"application/vnd.curl\":{\"source\":\"iana\"},\"application/vnd.curl.car\":{\"source\":\"apache\",\"extensions\":[\"car\"]},\"application/vnd.curl.pcurl\":{\"source\":\"apache\",\"extensions\":[\"pcurl\"]},\"application/vnd.cyan.dean.root+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cybank\":{\"source\":\"iana\"},\"application/vnd.cyclonedx+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cyclonedx+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.d2l.coursepackage1p0+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.d3m-dataset\":{\"source\":\"iana\"},\"application/vnd.d3m-problem\":{\"source\":\"iana\"},\"application/vnd.dart\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dart\"]},\"application/vnd.data-vision.rdz\":{\"source\":\"iana\",\"extensions\":[\"rdz\"]},\"application/vnd.datapackage+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dataresource+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dbf\":{\"source\":\"iana\",\"extensions\":[\"dbf\"]},\"application/vnd.debian.binary-package\":{\"source\":\"iana\"},\"application/vnd.dece.data\":{\"source\":\"iana\",\"extensions\":[\"uvf\",\"uvvf\",\"uvd\",\"uvvd\"]},\"application/vnd.dece.ttml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"uvt\",\"uvvt\"]},\"application/vnd.dece.unspecified\":{\"source\":\"iana\",\"extensions\":[\"uvx\",\"uvvx\"]},\"application/vnd.dece.zip\":{\"source\":\"iana\",\"extensions\":[\"uvz\",\"uvvz\"]},\"application/vnd.denovo.fcselayout-link\":{\"source\":\"iana\",\"extensions\":[\"fe_launch\"]},\"application/vnd.desmume.movie\":{\"source\":\"iana\"},\"application/vnd.dir-bi.plate-dl-nosuffix\":{\"source\":\"iana\"},\"application/vnd.dm.delegation+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dna\":{\"source\":\"iana\",\"extensions\":[\"dna\"]},\"application/vnd.document+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dolby.mlp\":{\"source\":\"apache\",\"extensions\":[\"mlp\"]},\"application/vnd.dolby.mobile.1\":{\"source\":\"iana\"},\"application/vnd.dolby.mobile.2\":{\"source\":\"iana\"},\"application/vnd.doremir.scorecloud-binary-document\":{\"source\":\"iana\"},\"application/vnd.dpgraph\":{\"source\":\"iana\",\"extensions\":[\"dpg\"]},\"application/vnd.dreamfactory\":{\"source\":\"iana\",\"extensions\":[\"dfac\"]},\"application/vnd.drive+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ds-keypoint\":{\"source\":\"apache\",\"extensions\":[\"kpxx\"]},\"application/vnd.dtg.local\":{\"source\":\"iana\"},\"application/vnd.dtg.local.flash\":{\"source\":\"iana\"},\"application/vnd.dtg.local.html\":{\"source\":\"iana\"},\"application/vnd.dvb.ait\":{\"source\":\"iana\",\"extensions\":[\"ait\"]},\"application/vnd.dvb.dvbisl+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.dvbj\":{\"source\":\"iana\"},\"application/vnd.dvb.esgcontainer\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcdftnotifaccess\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcesgaccess\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcesgaccess2\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcesgpdd\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcroaming\":{\"source\":\"iana\"},\"application/vnd.dvb.iptv.alfec-base\":{\"source\":\"iana\"},\"application/vnd.dvb.iptv.alfec-enhancement\":{\"source\":\"iana\"},\"application/vnd.dvb.notif-aggregate-root+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-container+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-generic+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-ia-msglist+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-ia-registration-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-ia-registration-response+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-init+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.pfr\":{\"source\":\"iana\"},\"application/vnd.dvb.service\":{\"source\":\"iana\",\"extensions\":[\"svc\"]},\"application/vnd.dxr\":{\"source\":\"iana\"},\"application/vnd.dynageo\":{\"source\":\"iana\",\"extensions\":[\"geo\"]},\"application/vnd.dzr\":{\"source\":\"iana\"},\"application/vnd.easykaraoke.cdgdownload\":{\"source\":\"iana\"},\"application/vnd.ecdis-update\":{\"source\":\"iana\"},\"application/vnd.ecip.rlp\":{\"source\":\"iana\"},\"application/vnd.ecowin.chart\":{\"source\":\"iana\",\"extensions\":[\"mag\"]},\"application/vnd.ecowin.filerequest\":{\"source\":\"iana\"},\"application/vnd.ecowin.fileupdate\":{\"source\":\"iana\"},\"application/vnd.ecowin.series\":{\"source\":\"iana\"},\"application/vnd.ecowin.seriesrequest\":{\"source\":\"iana\"},\"application/vnd.ecowin.seriesupdate\":{\"source\":\"iana\"},\"application/vnd.efi.img\":{\"source\":\"iana\"},\"application/vnd.efi.iso\":{\"source\":\"iana\"},\"application/vnd.emclient.accessrequest+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.enliven\":{\"source\":\"iana\",\"extensions\":[\"nml\"]},\"application/vnd.enphase.envoy\":{\"source\":\"iana\"},\"application/vnd.eprints.data+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.epson.esf\":{\"source\":\"iana\",\"extensions\":[\"esf\"]},\"application/vnd.epson.msf\":{\"source\":\"iana\",\"extensions\":[\"msf\"]},\"application/vnd.epson.quickanime\":{\"source\":\"iana\",\"extensions\":[\"qam\"]},\"application/vnd.epson.salt\":{\"source\":\"iana\",\"extensions\":[\"slt\"]},\"application/vnd.epson.ssf\":{\"source\":\"iana\",\"extensions\":[\"ssf\"]},\"application/vnd.ericsson.quickcall\":{\"source\":\"iana\"},\"application/vnd.espass-espass+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.eszigno3+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"es3\",\"et3\"]},\"application/vnd.etsi.aoc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.asic-e+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.etsi.asic-s+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.etsi.cug+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvcommand+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvdiscovery+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvprofile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvsad-bc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvsad-cod+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvsad-npvr+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvservice+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvsync+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvueprofile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.mcid+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.mheg5\":{\"source\":\"iana\"},\"application/vnd.etsi.overload-control-policy-dataset+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.pstn+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.sci+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.simservs+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.timestamp-token\":{\"source\":\"iana\"},\"application/vnd.etsi.tsl+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.tsl.der\":{\"source\":\"iana\"},\"application/vnd.eudora.data\":{\"source\":\"iana\"},\"application/vnd.evolv.ecig.profile\":{\"source\":\"iana\"},\"application/vnd.evolv.ecig.settings\":{\"source\":\"iana\"},\"application/vnd.evolv.ecig.theme\":{\"source\":\"iana\"},\"application/vnd.exstream-empower+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.exstream-package\":{\"source\":\"iana\"},\"application/vnd.ezpix-album\":{\"source\":\"iana\",\"extensions\":[\"ez2\"]},\"application/vnd.ezpix-package\":{\"source\":\"iana\",\"extensions\":[\"ez3\"]},\"application/vnd.f-secure.mobile\":{\"source\":\"iana\"},\"application/vnd.fastcopy-disk-image\":{\"source\":\"iana\"},\"application/vnd.fdf\":{\"source\":\"iana\",\"extensions\":[\"fdf\"]},\"application/vnd.fdsn.mseed\":{\"source\":\"iana\",\"extensions\":[\"mseed\"]},\"application/vnd.fdsn.seed\":{\"source\":\"iana\",\"extensions\":[\"seed\",\"dataless\"]},\"application/vnd.ffsns\":{\"source\":\"iana\"},\"application/vnd.ficlab.flb+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.filmit.zfc\":{\"source\":\"iana\"},\"application/vnd.fints\":{\"source\":\"iana\"},\"application/vnd.firemonkeys.cloudcell\":{\"source\":\"iana\"},\"application/vnd.flographit\":{\"source\":\"iana\",\"extensions\":[\"gph\"]},\"application/vnd.fluxtime.clip\":{\"source\":\"iana\",\"extensions\":[\"ftc\"]},\"application/vnd.font-fontforge-sfd\":{\"source\":\"iana\"},\"application/vnd.framemaker\":{\"source\":\"iana\",\"extensions\":[\"fm\",\"frame\",\"maker\",\"book\"]},\"application/vnd.frogans.fnc\":{\"source\":\"iana\",\"extensions\":[\"fnc\"]},\"application/vnd.frogans.ltf\":{\"source\":\"iana\",\"extensions\":[\"ltf\"]},\"application/vnd.fsc.weblaunch\":{\"source\":\"iana\",\"extensions\":[\"fsc\"]},\"application/vnd.fujifilm.fb.docuworks\":{\"source\":\"iana\"},\"application/vnd.fujifilm.fb.docuworks.binder\":{\"source\":\"iana\"},\"application/vnd.fujifilm.fb.docuworks.container\":{\"source\":\"iana\"},\"application/vnd.fujifilm.fb.jfi+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.fujitsu.oasys\":{\"source\":\"iana\",\"extensions\":[\"oas\"]},\"application/vnd.fujitsu.oasys2\":{\"source\":\"iana\",\"extensions\":[\"oa2\"]},\"application/vnd.fujitsu.oasys3\":{\"source\":\"iana\",\"extensions\":[\"oa3\"]},\"application/vnd.fujitsu.oasysgp\":{\"source\":\"iana\",\"extensions\":[\"fg5\"]},\"application/vnd.fujitsu.oasysprs\":{\"source\":\"iana\",\"extensions\":[\"bh2\"]},\"application/vnd.fujixerox.art-ex\":{\"source\":\"iana\"},\"application/vnd.fujixerox.art4\":{\"source\":\"iana\"},\"application/vnd.fujixerox.ddd\":{\"source\":\"iana\",\"extensions\":[\"ddd\"]},\"application/vnd.fujixerox.docuworks\":{\"source\":\"iana\",\"extensions\":[\"xdw\"]},\"application/vnd.fujixerox.docuworks.binder\":{\"source\":\"iana\",\"extensions\":[\"xbd\"]},\"application/vnd.fujixerox.docuworks.container\":{\"source\":\"iana\"},\"application/vnd.fujixerox.hbpl\":{\"source\":\"iana\"},\"application/vnd.fut-misnet\":{\"source\":\"iana\"},\"application/vnd.futoin+cbor\":{\"source\":\"iana\"},\"application/vnd.futoin+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.fuzzysheet\":{\"source\":\"iana\",\"extensions\":[\"fzs\"]},\"application/vnd.genomatix.tuxedo\":{\"source\":\"iana\",\"extensions\":[\"txd\"]},\"application/vnd.gentics.grd+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.geo+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.geocube+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.geogebra.file\":{\"source\":\"iana\",\"extensions\":[\"ggb\"]},\"application/vnd.geogebra.slides\":{\"source\":\"iana\"},\"application/vnd.geogebra.tool\":{\"source\":\"iana\",\"extensions\":[\"ggt\"]},\"application/vnd.geometry-explorer\":{\"source\":\"iana\",\"extensions\":[\"gex\",\"gre\"]},\"application/vnd.geonext\":{\"source\":\"iana\",\"extensions\":[\"gxt\"]},\"application/vnd.geoplan\":{\"source\":\"iana\",\"extensions\":[\"g2w\"]},\"application/vnd.geospace\":{\"source\":\"iana\",\"extensions\":[\"g3w\"]},\"application/vnd.gerber\":{\"source\":\"iana\"},\"application/vnd.globalplatform.card-content-mgt\":{\"source\":\"iana\"},\"application/vnd.globalplatform.card-content-mgt-response\":{\"source\":\"iana\"},\"application/vnd.gmx\":{\"source\":\"iana\",\"extensions\":[\"gmx\"]},\"application/vnd.google-apps.document\":{\"compressible\":false,\"extensions\":[\"gdoc\"]},\"application/vnd.google-apps.presentation\":{\"compressible\":false,\"extensions\":[\"gslides\"]},\"application/vnd.google-apps.spreadsheet\":{\"compressible\":false,\"extensions\":[\"gsheet\"]},\"application/vnd.google-earth.kml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"kml\"]},\"application/vnd.google-earth.kmz\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"kmz\"]},\"application/vnd.gov.sk.e-form+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.gov.sk.e-form+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.gov.sk.xmldatacontainer+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.grafeq\":{\"source\":\"iana\",\"extensions\":[\"gqf\",\"gqs\"]},\"application/vnd.gridmp\":{\"source\":\"iana\"},\"application/vnd.groove-account\":{\"source\":\"iana\",\"extensions\":[\"gac\"]},\"application/vnd.groove-help\":{\"source\":\"iana\",\"extensions\":[\"ghf\"]},\"application/vnd.groove-identity-message\":{\"source\":\"iana\",\"extensions\":[\"gim\"]},\"application/vnd.groove-injector\":{\"source\":\"iana\",\"extensions\":[\"grv\"]},\"application/vnd.groove-tool-message\":{\"source\":\"iana\",\"extensions\":[\"gtm\"]},\"application/vnd.groove-tool-template\":{\"source\":\"iana\",\"extensions\":[\"tpl\"]},\"application/vnd.groove-vcard\":{\"source\":\"iana\",\"extensions\":[\"vcg\"]},\"application/vnd.hal+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hal+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"hal\"]},\"application/vnd.handheld-entertainment+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"zmm\"]},\"application/vnd.hbci\":{\"source\":\"iana\",\"extensions\":[\"hbci\"]},\"application/vnd.hc+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hcl-bireports\":{\"source\":\"iana\"},\"application/vnd.hdt\":{\"source\":\"iana\"},\"application/vnd.heroku+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hhe.lesson-player\":{\"source\":\"iana\",\"extensions\":[\"les\"]},\"application/vnd.hp-hpgl\":{\"source\":\"iana\",\"extensions\":[\"hpgl\"]},\"application/vnd.hp-hpid\":{\"source\":\"iana\",\"extensions\":[\"hpid\"]},\"application/vnd.hp-hps\":{\"source\":\"iana\",\"extensions\":[\"hps\"]},\"application/vnd.hp-jlyt\":{\"source\":\"iana\",\"extensions\":[\"jlt\"]},\"application/vnd.hp-pcl\":{\"source\":\"iana\",\"extensions\":[\"pcl\"]},\"application/vnd.hp-pclxl\":{\"source\":\"iana\",\"extensions\":[\"pclxl\"]},\"application/vnd.httphone\":{\"source\":\"iana\"},\"application/vnd.hydrostatix.sof-data\":{\"source\":\"iana\",\"extensions\":[\"sfd-hdstx\"]},\"application/vnd.hyper+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hyper-item+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hyperdrive+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hzn-3d-crossword\":{\"source\":\"iana\"},\"application/vnd.ibm.afplinedata\":{\"source\":\"iana\"},\"application/vnd.ibm.electronic-media\":{\"source\":\"iana\"},\"application/vnd.ibm.minipay\":{\"source\":\"iana\",\"extensions\":[\"mpy\"]},\"application/vnd.ibm.modcap\":{\"source\":\"iana\",\"extensions\":[\"afp\",\"listafp\",\"list3820\"]},\"application/vnd.ibm.rights-management\":{\"source\":\"iana\",\"extensions\":[\"irm\"]},\"application/vnd.ibm.secure-container\":{\"source\":\"iana\",\"extensions\":[\"sc\"]},\"application/vnd.iccprofile\":{\"source\":\"iana\",\"extensions\":[\"icc\",\"icm\"]},\"application/vnd.ieee.1905\":{\"source\":\"iana\"},\"application/vnd.igloader\":{\"source\":\"iana\",\"extensions\":[\"igl\"]},\"application/vnd.imagemeter.folder+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.imagemeter.image+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.immervision-ivp\":{\"source\":\"iana\",\"extensions\":[\"ivp\"]},\"application/vnd.immervision-ivu\":{\"source\":\"iana\",\"extensions\":[\"ivu\"]},\"application/vnd.ims.imsccv1p1\":{\"source\":\"iana\"},\"application/vnd.ims.imsccv1p2\":{\"source\":\"iana\"},\"application/vnd.ims.imsccv1p3\":{\"source\":\"iana\"},\"application/vnd.ims.lis.v2.result+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolconsumerprofile+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolproxy+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolproxy.id+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolsettings+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolsettings.simple+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.informedcontrol.rms+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.informix-visionary\":{\"source\":\"iana\"},\"application/vnd.infotech.project\":{\"source\":\"iana\"},\"application/vnd.infotech.project+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.innopath.wamp.notification\":{\"source\":\"iana\"},\"application/vnd.insors.igm\":{\"source\":\"iana\",\"extensions\":[\"igm\"]},\"application/vnd.intercon.formnet\":{\"source\":\"iana\",\"extensions\":[\"xpw\",\"xpx\"]},\"application/vnd.intergeo\":{\"source\":\"iana\",\"extensions\":[\"i2g\"]},\"application/vnd.intertrust.digibox\":{\"source\":\"iana\"},\"application/vnd.intertrust.nncp\":{\"source\":\"iana\"},\"application/vnd.intu.qbo\":{\"source\":\"iana\",\"extensions\":[\"qbo\"]},\"application/vnd.intu.qfx\":{\"source\":\"iana\",\"extensions\":[\"qfx\"]},\"application/vnd.iptc.g2.catalogitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.conceptitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.knowledgeitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.newsitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.newsmessage+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.packageitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.planningitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ipunplugged.rcprofile\":{\"source\":\"iana\",\"extensions\":[\"rcprofile\"]},\"application/vnd.irepository.package+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"irp\"]},\"application/vnd.is-xpr\":{\"source\":\"iana\",\"extensions\":[\"xpr\"]},\"application/vnd.isac.fcs\":{\"source\":\"iana\",\"extensions\":[\"fcs\"]},\"application/vnd.iso11783-10+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.jam\":{\"source\":\"iana\",\"extensions\":[\"jam\"]},\"application/vnd.japannet-directory-service\":{\"source\":\"iana\"},\"application/vnd.japannet-jpnstore-wakeup\":{\"source\":\"iana\"},\"application/vnd.japannet-payment-wakeup\":{\"source\":\"iana\"},\"application/vnd.japannet-registration\":{\"source\":\"iana\"},\"application/vnd.japannet-registration-wakeup\":{\"source\":\"iana\"},\"application/vnd.japannet-setstore-wakeup\":{\"source\":\"iana\"},\"application/vnd.japannet-verification\":{\"source\":\"iana\"},\"application/vnd.japannet-verification-wakeup\":{\"source\":\"iana\"},\"application/vnd.jcp.javame.midlet-rms\":{\"source\":\"iana\",\"extensions\":[\"rms\"]},\"application/vnd.jisp\":{\"source\":\"iana\",\"extensions\":[\"jisp\"]},\"application/vnd.joost.joda-archive\":{\"source\":\"iana\",\"extensions\":[\"joda\"]},\"application/vnd.jsk.isdn-ngn\":{\"source\":\"iana\"},\"application/vnd.kahootz\":{\"source\":\"iana\",\"extensions\":[\"ktz\",\"ktr\"]},\"application/vnd.kde.karbon\":{\"source\":\"iana\",\"extensions\":[\"karbon\"]},\"application/vnd.kde.kchart\":{\"source\":\"iana\",\"extensions\":[\"chrt\"]},\"application/vnd.kde.kformula\":{\"source\":\"iana\",\"extensions\":[\"kfo\"]},\"application/vnd.kde.kivio\":{\"source\":\"iana\",\"extensions\":[\"flw\"]},\"application/vnd.kde.kontour\":{\"source\":\"iana\",\"extensions\":[\"kon\"]},\"application/vnd.kde.kpresenter\":{\"source\":\"iana\",\"extensions\":[\"kpr\",\"kpt\"]},\"application/vnd.kde.kspread\":{\"source\":\"iana\",\"extensions\":[\"ksp\"]},\"application/vnd.kde.kword\":{\"source\":\"iana\",\"extensions\":[\"kwd\",\"kwt\"]},\"application/vnd.kenameaapp\":{\"source\":\"iana\",\"extensions\":[\"htke\"]},\"application/vnd.kidspiration\":{\"source\":\"iana\",\"extensions\":[\"kia\"]},\"application/vnd.kinar\":{\"source\":\"iana\",\"extensions\":[\"kne\",\"knp\"]},\"application/vnd.koan\":{\"source\":\"iana\",\"extensions\":[\"skp\",\"skd\",\"skt\",\"skm\"]},\"application/vnd.kodak-descriptor\":{\"source\":\"iana\",\"extensions\":[\"sse\"]},\"application/vnd.las\":{\"source\":\"iana\"},\"application/vnd.las.las+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.las.las+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"lasxml\"]},\"application/vnd.laszip\":{\"source\":\"iana\"},\"application/vnd.leap+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.liberty-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.llamagraphics.life-balance.desktop\":{\"source\":\"iana\",\"extensions\":[\"lbd\"]},\"application/vnd.llamagraphics.life-balance.exchange+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"lbe\"]},\"application/vnd.logipipe.circuit+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.loom\":{\"source\":\"iana\"},\"application/vnd.lotus-1-2-3\":{\"source\":\"iana\",\"extensions\":[\"123\"]},\"application/vnd.lotus-approach\":{\"source\":\"iana\",\"extensions\":[\"apr\"]},\"application/vnd.lotus-freelance\":{\"source\":\"iana\",\"extensions\":[\"pre\"]},\"application/vnd.lotus-notes\":{\"source\":\"iana\",\"extensions\":[\"nsf\"]},\"application/vnd.lotus-organizer\":{\"source\":\"iana\",\"extensions\":[\"org\"]},\"application/vnd.lotus-screencam\":{\"source\":\"iana\",\"extensions\":[\"scm\"]},\"application/vnd.lotus-wordpro\":{\"source\":\"iana\",\"extensions\":[\"lwp\"]},\"application/vnd.macports.portpkg\":{\"source\":\"iana\",\"extensions\":[\"portpkg\"]},\"application/vnd.mapbox-vector-tile\":{\"source\":\"iana\",\"extensions\":[\"mvt\"]},\"application/vnd.marlin.drm.actiontoken+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.marlin.drm.conftoken+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.marlin.drm.license+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.marlin.drm.mdcf\":{\"source\":\"iana\"},\"application/vnd.mason+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.maxmind.maxmind-db\":{\"source\":\"iana\"},\"application/vnd.mcd\":{\"source\":\"iana\",\"extensions\":[\"mcd\"]},\"application/vnd.medcalcdata\":{\"source\":\"iana\",\"extensions\":[\"mc1\"]},\"application/vnd.mediastation.cdkey\":{\"source\":\"iana\",\"extensions\":[\"cdkey\"]},\"application/vnd.meridian-slingshot\":{\"source\":\"iana\"},\"application/vnd.mfer\":{\"source\":\"iana\",\"extensions\":[\"mwf\"]},\"application/vnd.mfmp\":{\"source\":\"iana\",\"extensions\":[\"mfm\"]},\"application/vnd.micro+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.micrografx.flo\":{\"source\":\"iana\",\"extensions\":[\"flo\"]},\"application/vnd.micrografx.igx\":{\"source\":\"iana\",\"extensions\":[\"igx\"]},\"application/vnd.microsoft.portable-executable\":{\"source\":\"iana\"},\"application/vnd.microsoft.windows.thumbnail-cache\":{\"source\":\"iana\"},\"application/vnd.miele+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.mif\":{\"source\":\"iana\",\"extensions\":[\"mif\"]},\"application/vnd.minisoft-hp3000-save\":{\"source\":\"iana\"},\"application/vnd.mitsubishi.misty-guard.trustweb\":{\"source\":\"iana\"},\"application/vnd.mobius.daf\":{\"source\":\"iana\",\"extensions\":[\"daf\"]},\"application/vnd.mobius.dis\":{\"source\":\"iana\",\"extensions\":[\"dis\"]},\"application/vnd.mobius.mbk\":{\"source\":\"iana\",\"extensions\":[\"mbk\"]},\"application/vnd.mobius.mqy\":{\"source\":\"iana\",\"extensions\":[\"mqy\"]},\"application/vnd.mobius.msl\":{\"source\":\"iana\",\"extensions\":[\"msl\"]},\"application/vnd.mobius.plc\":{\"source\":\"iana\",\"extensions\":[\"plc\"]},\"application/vnd.mobius.txf\":{\"source\":\"iana\",\"extensions\":[\"txf\"]},\"application/vnd.mophun.application\":{\"source\":\"iana\",\"extensions\":[\"mpn\"]},\"application/vnd.mophun.certificate\":{\"source\":\"iana\",\"extensions\":[\"mpc\"]},\"application/vnd.motorola.flexsuite\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.adsi\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.fis\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.gotap\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.kmr\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.ttc\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.wem\":{\"source\":\"iana\"},\"application/vnd.motorola.iprm\":{\"source\":\"iana\"},\"application/vnd.mozilla.xul+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xul\"]},\"application/vnd.ms-3mfdocument\":{\"source\":\"iana\"},\"application/vnd.ms-artgalry\":{\"source\":\"iana\",\"extensions\":[\"cil\"]},\"application/vnd.ms-asf\":{\"source\":\"iana\"},\"application/vnd.ms-cab-compressed\":{\"source\":\"iana\",\"extensions\":[\"cab\"]},\"application/vnd.ms-color.iccprofile\":{\"source\":\"apache\"},\"application/vnd.ms-excel\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"xls\",\"xlm\",\"xla\",\"xlc\",\"xlt\",\"xlw\"]},\"application/vnd.ms-excel.addin.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"xlam\"]},\"application/vnd.ms-excel.sheet.binary.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"xlsb\"]},\"application/vnd.ms-excel.sheet.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"xlsm\"]},\"application/vnd.ms-excel.template.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"xltm\"]},\"application/vnd.ms-fontobject\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"eot\"]},\"application/vnd.ms-htmlhelp\":{\"source\":\"iana\",\"extensions\":[\"chm\"]},\"application/vnd.ms-ims\":{\"source\":\"iana\",\"extensions\":[\"ims\"]},\"application/vnd.ms-lrm\":{\"source\":\"iana\",\"extensions\":[\"lrm\"]},\"application/vnd.ms-office.activex+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ms-officetheme\":{\"source\":\"iana\",\"extensions\":[\"thmx\"]},\"application/vnd.ms-opentype\":{\"source\":\"apache\",\"compressible\":true},\"application/vnd.ms-outlook\":{\"compressible\":false,\"extensions\":[\"msg\"]},\"application/vnd.ms-package.obfuscated-opentype\":{\"source\":\"apache\"},\"application/vnd.ms-pki.seccat\":{\"source\":\"apache\",\"extensions\":[\"cat\"]},\"application/vnd.ms-pki.stl\":{\"source\":\"apache\",\"extensions\":[\"stl\"]},\"application/vnd.ms-playready.initiator+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ms-powerpoint\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"ppt\",\"pps\",\"pot\"]},\"application/vnd.ms-powerpoint.addin.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"ppam\"]},\"application/vnd.ms-powerpoint.presentation.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"pptm\"]},\"application/vnd.ms-powerpoint.slide.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"sldm\"]},\"application/vnd.ms-powerpoint.slideshow.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"ppsm\"]},\"application/vnd.ms-powerpoint.template.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"potm\"]},\"application/vnd.ms-printdevicecapabilities+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ms-printing.printticket+xml\":{\"source\":\"apache\",\"compressible\":true},\"application/vnd.ms-printschematicket+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ms-project\":{\"source\":\"iana\",\"extensions\":[\"mpp\",\"mpt\"]},\"application/vnd.ms-tnef\":{\"source\":\"iana\"},\"application/vnd.ms-windows.devicepairing\":{\"source\":\"iana\"},\"application/vnd.ms-windows.nwprinting.oob\":{\"source\":\"iana\"},\"application/vnd.ms-windows.printerpairing\":{\"source\":\"iana\"},\"application/vnd.ms-windows.wsd.oob\":{\"source\":\"iana\"},\"application/vnd.ms-wmdrm.lic-chlg-req\":{\"source\":\"iana\"},\"application/vnd.ms-wmdrm.lic-resp\":{\"source\":\"iana\"},\"application/vnd.ms-wmdrm.meter-chlg-req\":{\"source\":\"iana\"},\"application/vnd.ms-wmdrm.meter-resp\":{\"source\":\"iana\"},\"application/vnd.ms-word.document.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"docm\"]},\"application/vnd.ms-word.template.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"dotm\"]},\"application/vnd.ms-works\":{\"source\":\"iana\",\"extensions\":[\"wps\",\"wks\",\"wcm\",\"wdb\"]},\"application/vnd.ms-wpl\":{\"source\":\"iana\",\"extensions\":[\"wpl\"]},\"application/vnd.ms-xpsdocument\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"xps\"]},\"application/vnd.msa-disk-image\":{\"source\":\"iana\"},\"application/vnd.mseq\":{\"source\":\"iana\",\"extensions\":[\"mseq\"]},\"application/vnd.msign\":{\"source\":\"iana\"},\"application/vnd.multiad.creator\":{\"source\":\"iana\"},\"application/vnd.multiad.creator.cif\":{\"source\":\"iana\"},\"application/vnd.music-niff\":{\"source\":\"iana\"},\"application/vnd.musician\":{\"source\":\"iana\",\"extensions\":[\"mus\"]},\"application/vnd.muvee.style\":{\"source\":\"iana\",\"extensions\":[\"msty\"]},\"application/vnd.mynfc\":{\"source\":\"iana\",\"extensions\":[\"taglet\"]},\"application/vnd.nacamar.ybrid+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ncd.control\":{\"source\":\"iana\"},\"application/vnd.ncd.reference\":{\"source\":\"iana\"},\"application/vnd.nearst.inv+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nebumind.line\":{\"source\":\"iana\"},\"application/vnd.nervana\":{\"source\":\"iana\"},\"application/vnd.netfpx\":{\"source\":\"iana\"},\"application/vnd.neurolanguage.nlu\":{\"source\":\"iana\",\"extensions\":[\"nlu\"]},\"application/vnd.nimn\":{\"source\":\"iana\"},\"application/vnd.nintendo.nitro.rom\":{\"source\":\"iana\"},\"application/vnd.nintendo.snes.rom\":{\"source\":\"iana\"},\"application/vnd.nitf\":{\"source\":\"iana\",\"extensions\":[\"ntf\",\"nitf\"]},\"application/vnd.noblenet-directory\":{\"source\":\"iana\",\"extensions\":[\"nnd\"]},\"application/vnd.noblenet-sealer\":{\"source\":\"iana\",\"extensions\":[\"nns\"]},\"application/vnd.noblenet-web\":{\"source\":\"iana\",\"extensions\":[\"nnw\"]},\"application/vnd.nokia.catalogs\":{\"source\":\"iana\"},\"application/vnd.nokia.conml+wbxml\":{\"source\":\"iana\"},\"application/vnd.nokia.conml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.iptv.config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.isds-radio-presets\":{\"source\":\"iana\"},\"application/vnd.nokia.landmark+wbxml\":{\"source\":\"iana\"},\"application/vnd.nokia.landmark+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.landmarkcollection+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.n-gage.ac+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ac\"]},\"application/vnd.nokia.n-gage.data\":{\"source\":\"iana\",\"extensions\":[\"ngdat\"]},\"application/vnd.nokia.n-gage.symbian.install\":{\"source\":\"iana\",\"extensions\":[\"n-gage\"]},\"application/vnd.nokia.ncd\":{\"source\":\"iana\"},\"application/vnd.nokia.pcd+wbxml\":{\"source\":\"iana\"},\"application/vnd.nokia.pcd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.radio-preset\":{\"source\":\"iana\",\"extensions\":[\"rpst\"]},\"application/vnd.nokia.radio-presets\":{\"source\":\"iana\",\"extensions\":[\"rpss\"]},\"application/vnd.novadigm.edm\":{\"source\":\"iana\",\"extensions\":[\"edm\"]},\"application/vnd.novadigm.edx\":{\"source\":\"iana\",\"extensions\":[\"edx\"]},\"application/vnd.novadigm.ext\":{\"source\":\"iana\",\"extensions\":[\"ext\"]},\"application/vnd.ntt-local.content-share\":{\"source\":\"iana\"},\"application/vnd.ntt-local.file-transfer\":{\"source\":\"iana\"},\"application/vnd.ntt-local.ogw_remote-access\":{\"source\":\"iana\"},\"application/vnd.ntt-local.sip-ta_remote\":{\"source\":\"iana\"},\"application/vnd.ntt-local.sip-ta_tcp_stream\":{\"source\":\"iana\"},\"application/vnd.oasis.opendocument.chart\":{\"source\":\"iana\",\"extensions\":[\"odc\"]},\"application/vnd.oasis.opendocument.chart-template\":{\"source\":\"iana\",\"extensions\":[\"otc\"]},\"application/vnd.oasis.opendocument.database\":{\"source\":\"iana\",\"extensions\":[\"odb\"]},\"application/vnd.oasis.opendocument.formula\":{\"source\":\"iana\",\"extensions\":[\"odf\"]},\"application/vnd.oasis.opendocument.formula-template\":{\"source\":\"iana\",\"extensions\":[\"odft\"]},\"application/vnd.oasis.opendocument.graphics\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"odg\"]},\"application/vnd.oasis.opendocument.graphics-template\":{\"source\":\"iana\",\"extensions\":[\"otg\"]},\"application/vnd.oasis.opendocument.image\":{\"source\":\"iana\",\"extensions\":[\"odi\"]},\"application/vnd.oasis.opendocument.image-template\":{\"source\":\"iana\",\"extensions\":[\"oti\"]},\"application/vnd.oasis.opendocument.presentation\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"odp\"]},\"application/vnd.oasis.opendocument.presentation-template\":{\"source\":\"iana\",\"extensions\":[\"otp\"]},\"application/vnd.oasis.opendocument.spreadsheet\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"ods\"]},\"application/vnd.oasis.opendocument.spreadsheet-template\":{\"source\":\"iana\",\"extensions\":[\"ots\"]},\"application/vnd.oasis.opendocument.text\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"odt\"]},\"application/vnd.oasis.opendocument.text-master\":{\"source\":\"iana\",\"extensions\":[\"odm\"]},\"application/vnd.oasis.opendocument.text-template\":{\"source\":\"iana\",\"extensions\":[\"ott\"]},\"application/vnd.oasis.opendocument.text-web\":{\"source\":\"iana\",\"extensions\":[\"oth\"]},\"application/vnd.obn\":{\"source\":\"iana\"},\"application/vnd.ocf+cbor\":{\"source\":\"iana\"},\"application/vnd.oci.image.manifest.v1+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oftn.l10n+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.contentaccessdownload+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.contentaccessstreaming+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.cspg-hexbinary\":{\"source\":\"iana\"},\"application/vnd.oipf.dae.svg+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.dae.xhtml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.mippvcontrolmessage+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.pae.gem\":{\"source\":\"iana\"},\"application/vnd.oipf.spdiscovery+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.spdlist+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.ueprofile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.userprofile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.olpc-sugar\":{\"source\":\"iana\",\"extensions\":[\"xo\"]},\"application/vnd.oma-scws-config\":{\"source\":\"iana\"},\"application/vnd.oma-scws-http-request\":{\"source\":\"iana\"},\"application/vnd.oma-scws-http-response\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.associated-procedure-parameter+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.drm-trigger+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.imd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.ltkm\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.notification+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.provisioningtrigger\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.sgboot\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.sgdd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.sgdu\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.simple-symbol-container\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.smartcard-trigger+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.sprov+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.stkm\":{\"source\":\"iana\"},\"application/vnd.oma.cab-address-book+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.cab-feature-handler+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.cab-pcc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.cab-subs-invite+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.cab-user-prefs+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.dcd\":{\"source\":\"iana\"},\"application/vnd.oma.dcdc\":{\"source\":\"iana\"},\"application/vnd.oma.dd2+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dd2\"]},\"application/vnd.oma.drm.risd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.group-usage-list+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.lwm2m+cbor\":{\"source\":\"iana\"},\"application/vnd.oma.lwm2m+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.lwm2m+tlv\":{\"source\":\"iana\"},\"application/vnd.oma.pal+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.detailed-progress-report+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.final-report+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.groups+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.invocation-descriptor+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.optimized-progress-report+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.push\":{\"source\":\"iana\"},\"application/vnd.oma.scidm.messages+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.xcap-directory+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.omads-email+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/vnd.omads-file+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/vnd.omads-folder+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/vnd.omaloc-supl-init\":{\"source\":\"iana\"},\"application/vnd.onepager\":{\"source\":\"iana\"},\"application/vnd.onepagertamp\":{\"source\":\"iana\"},\"application/vnd.onepagertamx\":{\"source\":\"iana\"},\"application/vnd.onepagertat\":{\"source\":\"iana\"},\"application/vnd.onepagertatp\":{\"source\":\"iana\"},\"application/vnd.onepagertatx\":{\"source\":\"iana\"},\"application/vnd.openblox.game+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"obgx\"]},\"application/vnd.openblox.game-binary\":{\"source\":\"iana\"},\"application/vnd.openeye.oeb\":{\"source\":\"iana\"},\"application/vnd.openofficeorg.extension\":{\"source\":\"apache\",\"extensions\":[\"oxt\"]},\"application/vnd.openstreetmap.data+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"osm\"]},\"application/vnd.opentimestamps.ots\":{\"source\":\"iana\"},\"application/vnd.openxmlformats-officedocument.custom-properties+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.customxmlproperties+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawing+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.extended-properties+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.comments+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.presentation\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"pptx\"]},\"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slide\":{\"source\":\"iana\",\"extensions\":[\"sldx\"]},\"application/vnd.openxmlformats-officedocument.presentationml.slide+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slideshow\":{\"source\":\"iana\",\"extensions\":[\"ppsx\"]},\"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.tags+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.template\":{\"source\":\"iana\",\"extensions\":[\"potx\"]},\"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"xlsx\"]},\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.template\":{\"source\":\"iana\",\"extensions\":[\"xltx\"]},\"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.theme+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.themeoverride+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.vmldrawing\":{\"source\":\"iana\"},\"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"docx\"]},\"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.template\":{\"source\":\"iana\",\"extensions\":[\"dotx\"]},\"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-package.core-properties+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-package.relationships+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oracle.resource+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.orange.indata\":{\"source\":\"iana\"},\"application/vnd.osa.netdeploy\":{\"source\":\"iana\"},\"application/vnd.osgeo.mapguide.package\":{\"source\":\"iana\",\"extensions\":[\"mgp\"]},\"application/vnd.osgi.bundle\":{\"source\":\"iana\"},\"application/vnd.osgi.dp\":{\"source\":\"iana\",\"extensions\":[\"dp\"]},\"application/vnd.osgi.subsystem\":{\"source\":\"iana\",\"extensions\":[\"esa\"]},\"application/vnd.otps.ct-kip+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oxli.countgraph\":{\"source\":\"iana\"},\"application/vnd.pagerduty+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.palm\":{\"source\":\"iana\",\"extensions\":[\"pdb\",\"pqa\",\"oprc\"]},\"application/vnd.panoply\":{\"source\":\"iana\"},\"application/vnd.paos.xml\":{\"source\":\"iana\"},\"application/vnd.patentdive\":{\"source\":\"iana\"},\"application/vnd.patientecommsdoc\":{\"source\":\"iana\"},\"application/vnd.pawaafile\":{\"source\":\"iana\",\"extensions\":[\"paw\"]},\"application/vnd.pcos\":{\"source\":\"iana\"},\"application/vnd.pg.format\":{\"source\":\"iana\",\"extensions\":[\"str\"]},\"application/vnd.pg.osasli\":{\"source\":\"iana\",\"extensions\":[\"ei6\"]},\"application/vnd.piaccess.application-licence\":{\"source\":\"iana\"},\"application/vnd.picsel\":{\"source\":\"iana\",\"extensions\":[\"efif\"]},\"application/vnd.pmi.widget\":{\"source\":\"iana\",\"extensions\":[\"wg\"]},\"application/vnd.poc.group-advertisement+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.pocketlearn\":{\"source\":\"iana\",\"extensions\":[\"plf\"]},\"application/vnd.powerbuilder6\":{\"source\":\"iana\",\"extensions\":[\"pbd\"]},\"application/vnd.powerbuilder6-s\":{\"source\":\"iana\"},\"application/vnd.powerbuilder7\":{\"source\":\"iana\"},\"application/vnd.powerbuilder7-s\":{\"source\":\"iana\"},\"application/vnd.powerbuilder75\":{\"source\":\"iana\"},\"application/vnd.powerbuilder75-s\":{\"source\":\"iana\"},\"application/vnd.preminet\":{\"source\":\"iana\"},\"application/vnd.previewsystems.box\":{\"source\":\"iana\",\"extensions\":[\"box\"]},\"application/vnd.proteus.magazine\":{\"source\":\"iana\",\"extensions\":[\"mgz\"]},\"application/vnd.psfs\":{\"source\":\"iana\"},\"application/vnd.publishare-delta-tree\":{\"source\":\"iana\",\"extensions\":[\"qps\"]},\"application/vnd.pvi.ptid1\":{\"source\":\"iana\",\"extensions\":[\"ptid\"]},\"application/vnd.pwg-multiplexed\":{\"source\":\"iana\"},\"application/vnd.pwg-xhtml-print+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.qualcomm.brew-app-res\":{\"source\":\"iana\"},\"application/vnd.quarantainenet\":{\"source\":\"iana\"},\"application/vnd.quark.quarkxpress\":{\"source\":\"iana\",\"extensions\":[\"qxd\",\"qxt\",\"qwd\",\"qwt\",\"qxl\",\"qxb\"]},\"application/vnd.quobject-quoxdocument\":{\"source\":\"iana\"},\"application/vnd.radisys.moml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit-conf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit-conn+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit-dialog+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit-stream+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-conf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-base+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-fax-detect+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-fax-sendrecv+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-group+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-speech+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-transform+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.rainstor.data\":{\"source\":\"iana\"},\"application/vnd.rapid\":{\"source\":\"iana\"},\"application/vnd.rar\":{\"source\":\"iana\",\"extensions\":[\"rar\"]},\"application/vnd.realvnc.bed\":{\"source\":\"iana\",\"extensions\":[\"bed\"]},\"application/vnd.recordare.musicxml\":{\"source\":\"iana\",\"extensions\":[\"mxl\"]},\"application/vnd.recordare.musicxml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"musicxml\"]},\"application/vnd.renlearn.rlprint\":{\"source\":\"iana\"},\"application/vnd.resilient.logic\":{\"source\":\"iana\"},\"application/vnd.restful+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.rig.cryptonote\":{\"source\":\"iana\",\"extensions\":[\"cryptonote\"]},\"application/vnd.rim.cod\":{\"source\":\"apache\",\"extensions\":[\"cod\"]},\"application/vnd.rn-realmedia\":{\"source\":\"apache\",\"extensions\":[\"rm\"]},\"application/vnd.rn-realmedia-vbr\":{\"source\":\"apache\",\"extensions\":[\"rmvb\"]},\"application/vnd.route66.link66+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"link66\"]},\"application/vnd.rs-274x\":{\"source\":\"iana\"},\"application/vnd.ruckus.download\":{\"source\":\"iana\"},\"application/vnd.s3sms\":{\"source\":\"iana\"},\"application/vnd.sailingtracker.track\":{\"source\":\"iana\",\"extensions\":[\"st\"]},\"application/vnd.sar\":{\"source\":\"iana\"},\"application/vnd.sbm.cid\":{\"source\":\"iana\"},\"application/vnd.sbm.mid2\":{\"source\":\"iana\"},\"application/vnd.scribus\":{\"source\":\"iana\"},\"application/vnd.sealed.3df\":{\"source\":\"iana\"},\"application/vnd.sealed.csf\":{\"source\":\"iana\"},\"application/vnd.sealed.doc\":{\"source\":\"iana\"},\"application/vnd.sealed.eml\":{\"source\":\"iana\"},\"application/vnd.sealed.mht\":{\"source\":\"iana\"},\"application/vnd.sealed.net\":{\"source\":\"iana\"},\"application/vnd.sealed.ppt\":{\"source\":\"iana\"},\"application/vnd.sealed.tiff\":{\"source\":\"iana\"},\"application/vnd.sealed.xls\":{\"source\":\"iana\"},\"application/vnd.sealedmedia.softseal.html\":{\"source\":\"iana\"},\"application/vnd.sealedmedia.softseal.pdf\":{\"source\":\"iana\"},\"application/vnd.seemail\":{\"source\":\"iana\",\"extensions\":[\"see\"]},\"application/vnd.seis+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.sema\":{\"source\":\"iana\",\"extensions\":[\"sema\"]},\"application/vnd.semd\":{\"source\":\"iana\",\"extensions\":[\"semd\"]},\"application/vnd.semf\":{\"source\":\"iana\",\"extensions\":[\"semf\"]},\"application/vnd.shade-save-file\":{\"source\":\"iana\"},\"application/vnd.shana.informed.formdata\":{\"source\":\"iana\",\"extensions\":[\"ifm\"]},\"application/vnd.shana.informed.formtemplate\":{\"source\":\"iana\",\"extensions\":[\"itp\"]},\"application/vnd.shana.informed.interchange\":{\"source\":\"iana\",\"extensions\":[\"iif\"]},\"application/vnd.shana.informed.package\":{\"source\":\"iana\",\"extensions\":[\"ipk\"]},\"application/vnd.shootproof+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.shopkick+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.shp\":{\"source\":\"iana\"},\"application/vnd.shx\":{\"source\":\"iana\"},\"application/vnd.sigrok.session\":{\"source\":\"iana\"},\"application/vnd.simtech-mindmapper\":{\"source\":\"iana\",\"extensions\":[\"twd\",\"twds\"]},\"application/vnd.siren+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.smaf\":{\"source\":\"iana\",\"extensions\":[\"mmf\"]},\"application/vnd.smart.notebook\":{\"source\":\"iana\"},\"application/vnd.smart.teacher\":{\"source\":\"iana\",\"extensions\":[\"teacher\"]},\"application/vnd.snesdev-page-table\":{\"source\":\"iana\"},\"application/vnd.software602.filler.form+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"fo\"]},\"application/vnd.software602.filler.form-xml-zip\":{\"source\":\"iana\"},\"application/vnd.solent.sdkm+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sdkm\",\"sdkd\"]},\"application/vnd.spotfire.dxp\":{\"source\":\"iana\",\"extensions\":[\"dxp\"]},\"application/vnd.spotfire.sfs\":{\"source\":\"iana\",\"extensions\":[\"sfs\"]},\"application/vnd.sqlite3\":{\"source\":\"iana\"},\"application/vnd.sss-cod\":{\"source\":\"iana\"},\"application/vnd.sss-dtf\":{\"source\":\"iana\"},\"application/vnd.sss-ntf\":{\"source\":\"iana\"},\"application/vnd.stardivision.calc\":{\"source\":\"apache\",\"extensions\":[\"sdc\"]},\"application/vnd.stardivision.draw\":{\"source\":\"apache\",\"extensions\":[\"sda\"]},\"application/vnd.stardivision.impress\":{\"source\":\"apache\",\"extensions\":[\"sdd\"]},\"application/vnd.stardivision.math\":{\"source\":\"apache\",\"extensions\":[\"smf\"]},\"application/vnd.stardivision.writer\":{\"source\":\"apache\",\"extensions\":[\"sdw\",\"vor\"]},\"application/vnd.stardivision.writer-global\":{\"source\":\"apache\",\"extensions\":[\"sgl\"]},\"application/vnd.stepmania.package\":{\"source\":\"iana\",\"extensions\":[\"smzip\"]},\"application/vnd.stepmania.stepchart\":{\"source\":\"iana\",\"extensions\":[\"sm\"]},\"application/vnd.street-stream\":{\"source\":\"iana\"},\"application/vnd.sun.wadl+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wadl\"]},\"application/vnd.sun.xml.calc\":{\"source\":\"apache\",\"extensions\":[\"sxc\"]},\"application/vnd.sun.xml.calc.template\":{\"source\":\"apache\",\"extensions\":[\"stc\"]},\"application/vnd.sun.xml.draw\":{\"source\":\"apache\",\"extensions\":[\"sxd\"]},\"application/vnd.sun.xml.draw.template\":{\"source\":\"apache\",\"extensions\":[\"std\"]},\"application/vnd.sun.xml.impress\":{\"source\":\"apache\",\"extensions\":[\"sxi\"]},\"application/vnd.sun.xml.impress.template\":{\"source\":\"apache\",\"extensions\":[\"sti\"]},\"application/vnd.sun.xml.math\":{\"source\":\"apache\",\"extensions\":[\"sxm\"]},\"application/vnd.sun.xml.writer\":{\"source\":\"apache\",\"extensions\":[\"sxw\"]},\"application/vnd.sun.xml.writer.global\":{\"source\":\"apache\",\"extensions\":[\"sxg\"]},\"application/vnd.sun.xml.writer.template\":{\"source\":\"apache\",\"extensions\":[\"stw\"]},\"application/vnd.sus-calendar\":{\"source\":\"iana\",\"extensions\":[\"sus\",\"susp\"]},\"application/vnd.svd\":{\"source\":\"iana\",\"extensions\":[\"svd\"]},\"application/vnd.swiftview-ics\":{\"source\":\"iana\"},\"application/vnd.sycle+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.symbian.install\":{\"source\":\"apache\",\"extensions\":[\"sis\",\"sisx\"]},\"application/vnd.syncml+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"xsm\"]},\"application/vnd.syncml.dm+wbxml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"extensions\":[\"bdm\"]},\"application/vnd.syncml.dm+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"xdm\"]},\"application/vnd.syncml.dm.notification\":{\"source\":\"iana\"},\"application/vnd.syncml.dmddf+wbxml\":{\"source\":\"iana\"},\"application/vnd.syncml.dmddf+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"ddf\"]},\"application/vnd.syncml.dmtnds+wbxml\":{\"source\":\"iana\"},\"application/vnd.syncml.dmtnds+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/vnd.syncml.ds.notification\":{\"source\":\"iana\"},\"application/vnd.tableschema+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.tao.intent-module-archive\":{\"source\":\"iana\",\"extensions\":[\"tao\"]},\"application/vnd.tcpdump.pcap\":{\"source\":\"iana\",\"extensions\":[\"pcap\",\"cap\",\"dmp\"]},\"application/vnd.think-cell.ppttc+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.tmd.mediaflex.api+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.tml\":{\"source\":\"iana\"},\"application/vnd.tmobile-livetv\":{\"source\":\"iana\",\"extensions\":[\"tmo\"]},\"application/vnd.tri.onesource\":{\"source\":\"iana\"},\"application/vnd.trid.tpt\":{\"source\":\"iana\",\"extensions\":[\"tpt\"]},\"application/vnd.triscape.mxs\":{\"source\":\"iana\",\"extensions\":[\"mxs\"]},\"application/vnd.trueapp\":{\"source\":\"iana\",\"extensions\":[\"tra\"]},\"application/vnd.truedoc\":{\"source\":\"iana\"},\"application/vnd.ubisoft.webplayer\":{\"source\":\"iana\"},\"application/vnd.ufdl\":{\"source\":\"iana\",\"extensions\":[\"ufd\",\"ufdl\"]},\"application/vnd.uiq.theme\":{\"source\":\"iana\",\"extensions\":[\"utz\"]},\"application/vnd.umajin\":{\"source\":\"iana\",\"extensions\":[\"umj\"]},\"application/vnd.unity\":{\"source\":\"iana\",\"extensions\":[\"unityweb\"]},\"application/vnd.uoml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"uoml\"]},\"application/vnd.uplanet.alert\":{\"source\":\"iana\"},\"application/vnd.uplanet.alert-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.bearer-choice\":{\"source\":\"iana\"},\"application/vnd.uplanet.bearer-choice-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.cacheop\":{\"source\":\"iana\"},\"application/vnd.uplanet.cacheop-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.channel\":{\"source\":\"iana\"},\"application/vnd.uplanet.channel-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.list\":{\"source\":\"iana\"},\"application/vnd.uplanet.list-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.listcmd\":{\"source\":\"iana\"},\"application/vnd.uplanet.listcmd-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.signal\":{\"source\":\"iana\"},\"application/vnd.uri-map\":{\"source\":\"iana\"},\"application/vnd.valve.source.material\":{\"source\":\"iana\"},\"application/vnd.vcx\":{\"source\":\"iana\",\"extensions\":[\"vcx\"]},\"application/vnd.vd-study\":{\"source\":\"iana\"},\"application/vnd.vectorworks\":{\"source\":\"iana\"},\"application/vnd.vel+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.verimatrix.vcas\":{\"source\":\"iana\"},\"application/vnd.veritone.aion+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.veryant.thin\":{\"source\":\"iana\"},\"application/vnd.ves.encrypted\":{\"source\":\"iana\"},\"application/vnd.vidsoft.vidconference\":{\"source\":\"iana\"},\"application/vnd.visio\":{\"source\":\"iana\",\"extensions\":[\"vsd\",\"vst\",\"vss\",\"vsw\"]},\"application/vnd.visionary\":{\"source\":\"iana\",\"extensions\":[\"vis\"]},\"application/vnd.vividence.scriptfile\":{\"source\":\"iana\"},\"application/vnd.vsf\":{\"source\":\"iana\",\"extensions\":[\"vsf\"]},\"application/vnd.wap.sic\":{\"source\":\"iana\"},\"application/vnd.wap.slc\":{\"source\":\"iana\"},\"application/vnd.wap.wbxml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"extensions\":[\"wbxml\"]},\"application/vnd.wap.wmlc\":{\"source\":\"iana\",\"extensions\":[\"wmlc\"]},\"application/vnd.wap.wmlscriptc\":{\"source\":\"iana\",\"extensions\":[\"wmlsc\"]},\"application/vnd.webturbo\":{\"source\":\"iana\",\"extensions\":[\"wtb\"]},\"application/vnd.wfa.dpp\":{\"source\":\"iana\"},\"application/vnd.wfa.p2p\":{\"source\":\"iana\"},\"application/vnd.wfa.wsc\":{\"source\":\"iana\"},\"application/vnd.windows.devicepairing\":{\"source\":\"iana\"},\"application/vnd.wmc\":{\"source\":\"iana\"},\"application/vnd.wmf.bootstrap\":{\"source\":\"iana\"},\"application/vnd.wolfram.mathematica\":{\"source\":\"iana\"},\"application/vnd.wolfram.mathematica.package\":{\"source\":\"iana\"},\"application/vnd.wolfram.player\":{\"source\":\"iana\",\"extensions\":[\"nbp\"]},\"application/vnd.wordperfect\":{\"source\":\"iana\",\"extensions\":[\"wpd\"]},\"application/vnd.wqd\":{\"source\":\"iana\",\"extensions\":[\"wqd\"]},\"application/vnd.wrq-hp3000-labelled\":{\"source\":\"iana\"},\"application/vnd.wt.stf\":{\"source\":\"iana\",\"extensions\":[\"stf\"]},\"application/vnd.wv.csp+wbxml\":{\"source\":\"iana\"},\"application/vnd.wv.csp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.wv.ssp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.xacml+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.xara\":{\"source\":\"iana\",\"extensions\":[\"xar\"]},\"application/vnd.xfdl\":{\"source\":\"iana\",\"extensions\":[\"xfdl\"]},\"application/vnd.xfdl.webform\":{\"source\":\"iana\"},\"application/vnd.xmi+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.xmpie.cpkg\":{\"source\":\"iana\"},\"application/vnd.xmpie.dpkg\":{\"source\":\"iana\"},\"application/vnd.xmpie.plan\":{\"source\":\"iana\"},\"application/vnd.xmpie.ppkg\":{\"source\":\"iana\"},\"application/vnd.xmpie.xlim\":{\"source\":\"iana\"},\"application/vnd.yamaha.hv-dic\":{\"source\":\"iana\",\"extensions\":[\"hvd\"]},\"application/vnd.yamaha.hv-script\":{\"source\":\"iana\",\"extensions\":[\"hvs\"]},\"application/vnd.yamaha.hv-voice\":{\"source\":\"iana\",\"extensions\":[\"hvp\"]},\"application/vnd.yamaha.openscoreformat\":{\"source\":\"iana\",\"extensions\":[\"osf\"]},\"application/vnd.yamaha.openscoreformat.osfpvg+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"osfpvg\"]},\"application/vnd.yamaha.remote-setup\":{\"source\":\"iana\"},\"application/vnd.yamaha.smaf-audio\":{\"source\":\"iana\",\"extensions\":[\"saf\"]},\"application/vnd.yamaha.smaf-phrase\":{\"source\":\"iana\",\"extensions\":[\"spf\"]},\"application/vnd.yamaha.through-ngn\":{\"source\":\"iana\"},\"application/vnd.yamaha.tunnel-udpencap\":{\"source\":\"iana\"},\"application/vnd.yaoweme\":{\"source\":\"iana\"},\"application/vnd.yellowriver-custom-menu\":{\"source\":\"iana\",\"extensions\":[\"cmp\"]},\"application/vnd.youtube.yt\":{\"source\":\"iana\"},\"application/vnd.zul\":{\"source\":\"iana\",\"extensions\":[\"zir\",\"zirz\"]},\"application/vnd.zzazz.deck+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"zaz\"]},\"application/voicexml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"vxml\"]},\"application/voucher-cms+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vq-rtcpxr\":{\"source\":\"iana\"},\"application/wasm\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wasm\"]},\"application/watcherinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/webpush-options+json\":{\"source\":\"iana\",\"compressible\":true},\"application/whoispp-query\":{\"source\":\"iana\"},\"application/whoispp-response\":{\"source\":\"iana\"},\"application/widget\":{\"source\":\"iana\",\"extensions\":[\"wgt\"]},\"application/winhlp\":{\"source\":\"apache\",\"extensions\":[\"hlp\"]},\"application/wita\":{\"source\":\"iana\"},\"application/wordperfect5.1\":{\"source\":\"iana\"},\"application/wsdl+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wsdl\"]},\"application/wspolicy+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wspolicy\"]},\"application/x-7z-compressed\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"7z\"]},\"application/x-abiword\":{\"source\":\"apache\",\"extensions\":[\"abw\"]},\"application/x-ace-compressed\":{\"source\":\"apache\",\"extensions\":[\"ace\"]},\"application/x-amf\":{\"source\":\"apache\"},\"application/x-apple-diskimage\":{\"source\":\"apache\",\"extensions\":[\"dmg\"]},\"application/x-arj\":{\"compressible\":false,\"extensions\":[\"arj\"]},\"application/x-authorware-bin\":{\"source\":\"apache\",\"extensions\":[\"aab\",\"x32\",\"u32\",\"vox\"]},\"application/x-authorware-map\":{\"source\":\"apache\",\"extensions\":[\"aam\"]},\"application/x-authorware-seg\":{\"source\":\"apache\",\"extensions\":[\"aas\"]},\"application/x-bcpio\":{\"source\":\"apache\",\"extensions\":[\"bcpio\"]},\"application/x-bdoc\":{\"compressible\":false,\"extensions\":[\"bdoc\"]},\"application/x-bittorrent\":{\"source\":\"apache\",\"extensions\":[\"torrent\"]},\"application/x-blorb\":{\"source\":\"apache\",\"extensions\":[\"blb\",\"blorb\"]},\"application/x-bzip\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"bz\"]},\"application/x-bzip2\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"bz2\",\"boz\"]},\"application/x-cbr\":{\"source\":\"apache\",\"extensions\":[\"cbr\",\"cba\",\"cbt\",\"cbz\",\"cb7\"]},\"application/x-cdlink\":{\"source\":\"apache\",\"extensions\":[\"vcd\"]},\"application/x-cfs-compressed\":{\"source\":\"apache\",\"extensions\":[\"cfs\"]},\"application/x-chat\":{\"source\":\"apache\",\"extensions\":[\"chat\"]},\"application/x-chess-pgn\":{\"source\":\"apache\",\"extensions\":[\"pgn\"]},\"application/x-chrome-extension\":{\"extensions\":[\"crx\"]},\"application/x-cocoa\":{\"source\":\"nginx\",\"extensions\":[\"cco\"]},\"application/x-compress\":{\"source\":\"apache\"},\"application/x-conference\":{\"source\":\"apache\",\"extensions\":[\"nsc\"]},\"application/x-cpio\":{\"source\":\"apache\",\"extensions\":[\"cpio\"]},\"application/x-csh\":{\"source\":\"apache\",\"extensions\":[\"csh\"]},\"application/x-deb\":{\"compressible\":false},\"application/x-debian-package\":{\"source\":\"apache\",\"extensions\":[\"deb\",\"udeb\"]},\"application/x-dgc-compressed\":{\"source\":\"apache\",\"extensions\":[\"dgc\"]},\"application/x-director\":{\"source\":\"apache\",\"extensions\":[\"dir\",\"dcr\",\"dxr\",\"cst\",\"cct\",\"cxt\",\"w3d\",\"fgd\",\"swa\"]},\"application/x-doom\":{\"source\":\"apache\",\"extensions\":[\"wad\"]},\"application/x-dtbncx+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"ncx\"]},\"application/x-dtbook+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"dtb\"]},\"application/x-dtbresource+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"res\"]},\"application/x-dvi\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"dvi\"]},\"application/x-envoy\":{\"source\":\"apache\",\"extensions\":[\"evy\"]},\"application/x-eva\":{\"source\":\"apache\",\"extensions\":[\"eva\"]},\"application/x-font-bdf\":{\"source\":\"apache\",\"extensions\":[\"bdf\"]},\"application/x-font-dos\":{\"source\":\"apache\"},\"application/x-font-framemaker\":{\"source\":\"apache\"},\"application/x-font-ghostscript\":{\"source\":\"apache\",\"extensions\":[\"gsf\"]},\"application/x-font-libgrx\":{\"source\":\"apache\"},\"application/x-font-linux-psf\":{\"source\":\"apache\",\"extensions\":[\"psf\"]},\"application/x-font-pcf\":{\"source\":\"apache\",\"extensions\":[\"pcf\"]},\"application/x-font-snf\":{\"source\":\"apache\",\"extensions\":[\"snf\"]},\"application/x-font-speedo\":{\"source\":\"apache\"},\"application/x-font-sunos-news\":{\"source\":\"apache\"},\"application/x-font-type1\":{\"source\":\"apache\",\"extensions\":[\"pfa\",\"pfb\",\"pfm\",\"afm\"]},\"application/x-font-vfont\":{\"source\":\"apache\"},\"application/x-freearc\":{\"source\":\"apache\",\"extensions\":[\"arc\"]},\"application/x-futuresplash\":{\"source\":\"apache\",\"extensions\":[\"spl\"]},\"application/x-gca-compressed\":{\"source\":\"apache\",\"extensions\":[\"gca\"]},\"application/x-glulx\":{\"source\":\"apache\",\"extensions\":[\"ulx\"]},\"application/x-gnumeric\":{\"source\":\"apache\",\"extensions\":[\"gnumeric\"]},\"application/x-gramps-xml\":{\"source\":\"apache\",\"extensions\":[\"gramps\"]},\"application/x-gtar\":{\"source\":\"apache\",\"extensions\":[\"gtar\"]},\"application/x-gzip\":{\"source\":\"apache\"},\"application/x-hdf\":{\"source\":\"apache\",\"extensions\":[\"hdf\"]},\"application/x-httpd-php\":{\"compressible\":true,\"extensions\":[\"php\"]},\"application/x-install-instructions\":{\"source\":\"apache\",\"extensions\":[\"install\"]},\"application/x-iso9660-image\":{\"source\":\"apache\",\"extensions\":[\"iso\"]},\"application/x-iwork-keynote-sffkey\":{\"extensions\":[\"key\"]},\"application/x-iwork-numbers-sffnumbers\":{\"extensions\":[\"numbers\"]},\"application/x-iwork-pages-sffpages\":{\"extensions\":[\"pages\"]},\"application/x-java-archive-diff\":{\"source\":\"nginx\",\"extensions\":[\"jardiff\"]},\"application/x-java-jnlp-file\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"jnlp\"]},\"application/x-javascript\":{\"compressible\":true},\"application/x-keepass2\":{\"extensions\":[\"kdbx\"]},\"application/x-latex\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"latex\"]},\"application/x-lua-bytecode\":{\"extensions\":[\"luac\"]},\"application/x-lzh-compressed\":{\"source\":\"apache\",\"extensions\":[\"lzh\",\"lha\"]},\"application/x-makeself\":{\"source\":\"nginx\",\"extensions\":[\"run\"]},\"application/x-mie\":{\"source\":\"apache\",\"extensions\":[\"mie\"]},\"application/x-mobipocket-ebook\":{\"source\":\"apache\",\"extensions\":[\"prc\",\"mobi\"]},\"application/x-mpegurl\":{\"compressible\":false},\"application/x-ms-application\":{\"source\":\"apache\",\"extensions\":[\"application\"]},\"application/x-ms-shortcut\":{\"source\":\"apache\",\"extensions\":[\"lnk\"]},\"application/x-ms-wmd\":{\"source\":\"apache\",\"extensions\":[\"wmd\"]},\"application/x-ms-wmz\":{\"source\":\"apache\",\"extensions\":[\"wmz\"]},\"application/x-ms-xbap\":{\"source\":\"apache\",\"extensions\":[\"xbap\"]},\"application/x-msaccess\":{\"source\":\"apache\",\"extensions\":[\"mdb\"]},\"application/x-msbinder\":{\"source\":\"apache\",\"extensions\":[\"obd\"]},\"application/x-mscardfile\":{\"source\":\"apache\",\"extensions\":[\"crd\"]},\"application/x-msclip\":{\"source\":\"apache\",\"extensions\":[\"clp\"]},\"application/x-msdos-program\":{\"extensions\":[\"exe\"]},\"application/x-msdownload\":{\"source\":\"apache\",\"extensions\":[\"exe\",\"dll\",\"com\",\"bat\",\"msi\"]},\"application/x-msmediaview\":{\"source\":\"apache\",\"extensions\":[\"mvb\",\"m13\",\"m14\"]},\"application/x-msmetafile\":{\"source\":\"apache\",\"extensions\":[\"wmf\",\"wmz\",\"emf\",\"emz\"]},\"application/x-msmoney\":{\"source\":\"apache\",\"extensions\":[\"mny\"]},\"application/x-mspublisher\":{\"source\":\"apache\",\"extensions\":[\"pub\"]},\"application/x-msschedule\":{\"source\":\"apache\",\"extensions\":[\"scd\"]},\"application/x-msterminal\":{\"source\":\"apache\",\"extensions\":[\"trm\"]},\"application/x-mswrite\":{\"source\":\"apache\",\"extensions\":[\"wri\"]},\"application/x-netcdf\":{\"source\":\"apache\",\"extensions\":[\"nc\",\"cdf\"]},\"application/x-ns-proxy-autoconfig\":{\"compressible\":true,\"extensions\":[\"pac\"]},\"application/x-nzb\":{\"source\":\"apache\",\"extensions\":[\"nzb\"]},\"application/x-perl\":{\"source\":\"nginx\",\"extensions\":[\"pl\",\"pm\"]},\"application/x-pilot\":{\"source\":\"nginx\",\"extensions\":[\"prc\",\"pdb\"]},\"application/x-pkcs12\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"p12\",\"pfx\"]},\"application/x-pkcs7-certificates\":{\"source\":\"apache\",\"extensions\":[\"p7b\",\"spc\"]},\"application/x-pkcs7-certreqresp\":{\"source\":\"apache\",\"extensions\":[\"p7r\"]},\"application/x-pki-message\":{\"source\":\"iana\"},\"application/x-rar-compressed\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"rar\"]},\"application/x-redhat-package-manager\":{\"source\":\"nginx\",\"extensions\":[\"rpm\"]},\"application/x-research-info-systems\":{\"source\":\"apache\",\"extensions\":[\"ris\"]},\"application/x-sea\":{\"source\":\"nginx\",\"extensions\":[\"sea\"]},\"application/x-sh\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"sh\"]},\"application/x-shar\":{\"source\":\"apache\",\"extensions\":[\"shar\"]},\"application/x-shockwave-flash\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"swf\"]},\"application/x-silverlight-app\":{\"source\":\"apache\",\"extensions\":[\"xap\"]},\"application/x-sql\":{\"source\":\"apache\",\"extensions\":[\"sql\"]},\"application/x-stuffit\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"sit\"]},\"application/x-stuffitx\":{\"source\":\"apache\",\"extensions\":[\"sitx\"]},\"application/x-subrip\":{\"source\":\"apache\",\"extensions\":[\"srt\"]},\"application/x-sv4cpio\":{\"source\":\"apache\",\"extensions\":[\"sv4cpio\"]},\"application/x-sv4crc\":{\"source\":\"apache\",\"extensions\":[\"sv4crc\"]},\"application/x-t3vm-image\":{\"source\":\"apache\",\"extensions\":[\"t3\"]},\"application/x-tads\":{\"source\":\"apache\",\"extensions\":[\"gam\"]},\"application/x-tar\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"tar\"]},\"application/x-tcl\":{\"source\":\"apache\",\"extensions\":[\"tcl\",\"tk\"]},\"application/x-tex\":{\"source\":\"apache\",\"extensions\":[\"tex\"]},\"application/x-tex-tfm\":{\"source\":\"apache\",\"extensions\":[\"tfm\"]},\"application/x-texinfo\":{\"source\":\"apache\",\"extensions\":[\"texinfo\",\"texi\"]},\"application/x-tgif\":{\"source\":\"apache\",\"extensions\":[\"obj\"]},\"application/x-ustar\":{\"source\":\"apache\",\"extensions\":[\"ustar\"]},\"application/x-virtualbox-hdd\":{\"compressible\":true,\"extensions\":[\"hdd\"]},\"application/x-virtualbox-ova\":{\"compressible\":true,\"extensions\":[\"ova\"]},\"application/x-virtualbox-ovf\":{\"compressible\":true,\"extensions\":[\"ovf\"]},\"application/x-virtualbox-vbox\":{\"compressible\":true,\"extensions\":[\"vbox\"]},\"application/x-virtualbox-vbox-extpack\":{\"compressible\":false,\"extensions\":[\"vbox-extpack\"]},\"application/x-virtualbox-vdi\":{\"compressible\":true,\"extensions\":[\"vdi\"]},\"application/x-virtualbox-vhd\":{\"compressible\":true,\"extensions\":[\"vhd\"]},\"application/x-virtualbox-vmdk\":{\"compressible\":true,\"extensions\":[\"vmdk\"]},\"application/x-wais-source\":{\"source\":\"apache\",\"extensions\":[\"src\"]},\"application/x-web-app-manifest+json\":{\"compressible\":true,\"extensions\":[\"webapp\"]},\"application/x-www-form-urlencoded\":{\"source\":\"iana\",\"compressible\":true},\"application/x-x509-ca-cert\":{\"source\":\"iana\",\"extensions\":[\"der\",\"crt\",\"pem\"]},\"application/x-x509-ca-ra-cert\":{\"source\":\"iana\"},\"application/x-x509-next-ca-cert\":{\"source\":\"iana\"},\"application/x-xfig\":{\"source\":\"apache\",\"extensions\":[\"fig\"]},\"application/x-xliff+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"xlf\"]},\"application/x-xpinstall\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"xpi\"]},\"application/x-xz\":{\"source\":\"apache\",\"extensions\":[\"xz\"]},\"application/x-zmachine\":{\"source\":\"apache\",\"extensions\":[\"z1\",\"z2\",\"z3\",\"z4\",\"z5\",\"z6\",\"z7\",\"z8\"]},\"application/x400-bp\":{\"source\":\"iana\"},\"application/xacml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xaml+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"xaml\"]},\"application/xcap-att+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xav\"]},\"application/xcap-caps+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xca\"]},\"application/xcap-diff+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xdf\"]},\"application/xcap-el+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xel\"]},\"application/xcap-error+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xcap-ns+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xns\"]},\"application/xcon-conference-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xcon-conference-info-diff+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xenc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xenc\"]},\"application/xhtml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xhtml\",\"xht\"]},\"application/xhtml-voice+xml\":{\"source\":\"apache\",\"compressible\":true},\"application/xliff+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xlf\"]},\"application/xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xml\",\"xsl\",\"xsd\",\"rng\"]},\"application/xml-dtd\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dtd\"]},\"application/xml-external-parsed-entity\":{\"source\":\"iana\"},\"application/xml-patch+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xmpp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xop+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xop\"]},\"application/xproc+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"xpl\"]},\"application/xslt+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xsl\",\"xslt\"]},\"application/xspf+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"xspf\"]},\"application/xv+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mxml\",\"xhvml\",\"xvml\",\"xvm\"]},\"application/yang\":{\"source\":\"iana\",\"extensions\":[\"yang\"]},\"application/yang-data+json\":{\"source\":\"iana\",\"compressible\":true},\"application/yang-data+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/yang-patch+json\":{\"source\":\"iana\",\"compressible\":true},\"application/yang-patch+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/yin+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"yin\"]},\"application/zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"zip\"]},\"application/zlib\":{\"source\":\"iana\"},\"application/zstd\":{\"source\":\"iana\"},\"audio/1d-interleaved-parityfec\":{\"source\":\"iana\"},\"audio/32kadpcm\":{\"source\":\"iana\"},\"audio/3gpp\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"3gpp\"]},\"audio/3gpp2\":{\"source\":\"iana\"},\"audio/aac\":{\"source\":\"iana\"},\"audio/ac3\":{\"source\":\"iana\"},\"audio/adpcm\":{\"source\":\"apache\",\"extensions\":[\"adp\"]},\"audio/amr\":{\"source\":\"iana\",\"extensions\":[\"amr\"]},\"audio/amr-wb\":{\"source\":\"iana\"},\"audio/amr-wb+\":{\"source\":\"iana\"},\"audio/aptx\":{\"source\":\"iana\"},\"audio/asc\":{\"source\":\"iana\"},\"audio/atrac-advanced-lossless\":{\"source\":\"iana\"},\"audio/atrac-x\":{\"source\":\"iana\"},\"audio/atrac3\":{\"source\":\"iana\"},\"audio/basic\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"au\",\"snd\"]},\"audio/bv16\":{\"source\":\"iana\"},\"audio/bv32\":{\"source\":\"iana\"},\"audio/clearmode\":{\"source\":\"iana\"},\"audio/cn\":{\"source\":\"iana\"},\"audio/dat12\":{\"source\":\"iana\"},\"audio/dls\":{\"source\":\"iana\"},\"audio/dsr-es201108\":{\"source\":\"iana\"},\"audio/dsr-es202050\":{\"source\":\"iana\"},\"audio/dsr-es202211\":{\"source\":\"iana\"},\"audio/dsr-es202212\":{\"source\":\"iana\"},\"audio/dv\":{\"source\":\"iana\"},\"audio/dvi4\":{\"source\":\"iana\"},\"audio/eac3\":{\"source\":\"iana\"},\"audio/encaprtp\":{\"source\":\"iana\"},\"audio/evrc\":{\"source\":\"iana\"},\"audio/evrc-qcp\":{\"source\":\"iana\"},\"audio/evrc0\":{\"source\":\"iana\"},\"audio/evrc1\":{\"source\":\"iana\"},\"audio/evrcb\":{\"source\":\"iana\"},\"audio/evrcb0\":{\"source\":\"iana\"},\"audio/evrcb1\":{\"source\":\"iana\"},\"audio/evrcnw\":{\"source\":\"iana\"},\"audio/evrcnw0\":{\"source\":\"iana\"},\"audio/evrcnw1\":{\"source\":\"iana\"},\"audio/evrcwb\":{\"source\":\"iana\"},\"audio/evrcwb0\":{\"source\":\"iana\"},\"audio/evrcwb1\":{\"source\":\"iana\"},\"audio/evs\":{\"source\":\"iana\"},\"audio/flexfec\":{\"source\":\"iana\"},\"audio/fwdred\":{\"source\":\"iana\"},\"audio/g711-0\":{\"source\":\"iana\"},\"audio/g719\":{\"source\":\"iana\"},\"audio/g722\":{\"source\":\"iana\"},\"audio/g7221\":{\"source\":\"iana\"},\"audio/g723\":{\"source\":\"iana\"},\"audio/g726-16\":{\"source\":\"iana\"},\"audio/g726-24\":{\"source\":\"iana\"},\"audio/g726-32\":{\"source\":\"iana\"},\"audio/g726-40\":{\"source\":\"iana\"},\"audio/g728\":{\"source\":\"iana\"},\"audio/g729\":{\"source\":\"iana\"},\"audio/g7291\":{\"source\":\"iana\"},\"audio/g729d\":{\"source\":\"iana\"},\"audio/g729e\":{\"source\":\"iana\"},\"audio/gsm\":{\"source\":\"iana\"},\"audio/gsm-efr\":{\"source\":\"iana\"},\"audio/gsm-hr-08\":{\"source\":\"iana\"},\"audio/ilbc\":{\"source\":\"iana\"},\"audio/ip-mr_v2.5\":{\"source\":\"iana\"},\"audio/isac\":{\"source\":\"apache\"},\"audio/l16\":{\"source\":\"iana\"},\"audio/l20\":{\"source\":\"iana\"},\"audio/l24\":{\"source\":\"iana\",\"compressible\":false},\"audio/l8\":{\"source\":\"iana\"},\"audio/lpc\":{\"source\":\"iana\"},\"audio/melp\":{\"source\":\"iana\"},\"audio/melp1200\":{\"source\":\"iana\"},\"audio/melp2400\":{\"source\":\"iana\"},\"audio/melp600\":{\"source\":\"iana\"},\"audio/mhas\":{\"source\":\"iana\"},\"audio/midi\":{\"source\":\"apache\",\"extensions\":[\"mid\",\"midi\",\"kar\",\"rmi\"]},\"audio/mobile-xmf\":{\"source\":\"iana\",\"extensions\":[\"mxmf\"]},\"audio/mp3\":{\"compressible\":false,\"extensions\":[\"mp3\"]},\"audio/mp4\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"m4a\",\"mp4a\"]},\"audio/mp4a-latm\":{\"source\":\"iana\"},\"audio/mpa\":{\"source\":\"iana\"},\"audio/mpa-robust\":{\"source\":\"iana\"},\"audio/mpeg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"mpga\",\"mp2\",\"mp2a\",\"mp3\",\"m2a\",\"m3a\"]},\"audio/mpeg4-generic\":{\"source\":\"iana\"},\"audio/musepack\":{\"source\":\"apache\"},\"audio/ogg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"oga\",\"ogg\",\"spx\",\"opus\"]},\"audio/opus\":{\"source\":\"iana\"},\"audio/parityfec\":{\"source\":\"iana\"},\"audio/pcma\":{\"source\":\"iana\"},\"audio/pcma-wb\":{\"source\":\"iana\"},\"audio/pcmu\":{\"source\":\"iana\"},\"audio/pcmu-wb\":{\"source\":\"iana\"},\"audio/prs.sid\":{\"source\":\"iana\"},\"audio/qcelp\":{\"source\":\"iana\"},\"audio/raptorfec\":{\"source\":\"iana\"},\"audio/red\":{\"source\":\"iana\"},\"audio/rtp-enc-aescm128\":{\"source\":\"iana\"},\"audio/rtp-midi\":{\"source\":\"iana\"},\"audio/rtploopback\":{\"source\":\"iana\"},\"audio/rtx\":{\"source\":\"iana\"},\"audio/s3m\":{\"source\":\"apache\",\"extensions\":[\"s3m\"]},\"audio/scip\":{\"source\":\"iana\"},\"audio/silk\":{\"source\":\"apache\",\"extensions\":[\"sil\"]},\"audio/smv\":{\"source\":\"iana\"},\"audio/smv-qcp\":{\"source\":\"iana\"},\"audio/smv0\":{\"source\":\"iana\"},\"audio/sofa\":{\"source\":\"iana\"},\"audio/sp-midi\":{\"source\":\"iana\"},\"audio/speex\":{\"source\":\"iana\"},\"audio/t140c\":{\"source\":\"iana\"},\"audio/t38\":{\"source\":\"iana\"},\"audio/telephone-event\":{\"source\":\"iana\"},\"audio/tetra_acelp\":{\"source\":\"iana\"},\"audio/tetra_acelp_bb\":{\"source\":\"iana\"},\"audio/tone\":{\"source\":\"iana\"},\"audio/tsvcis\":{\"source\":\"iana\"},\"audio/uemclip\":{\"source\":\"iana\"},\"audio/ulpfec\":{\"source\":\"iana\"},\"audio/usac\":{\"source\":\"iana\"},\"audio/vdvi\":{\"source\":\"iana\"},\"audio/vmr-wb\":{\"source\":\"iana\"},\"audio/vnd.3gpp.iufp\":{\"source\":\"iana\"},\"audio/vnd.4sb\":{\"source\":\"iana\"},\"audio/vnd.audiokoz\":{\"source\":\"iana\"},\"audio/vnd.celp\":{\"source\":\"iana\"},\"audio/vnd.cisco.nse\":{\"source\":\"iana\"},\"audio/vnd.cmles.radio-events\":{\"source\":\"iana\"},\"audio/vnd.cns.anp1\":{\"source\":\"iana\"},\"audio/vnd.cns.inf1\":{\"source\":\"iana\"},\"audio/vnd.dece.audio\":{\"source\":\"iana\",\"extensions\":[\"uva\",\"uvva\"]},\"audio/vnd.digital-winds\":{\"source\":\"iana\",\"extensions\":[\"eol\"]},\"audio/vnd.dlna.adts\":{\"source\":\"iana\"},\"audio/vnd.dolby.heaac.1\":{\"source\":\"iana\"},\"audio/vnd.dolby.heaac.2\":{\"source\":\"iana\"},\"audio/vnd.dolby.mlp\":{\"source\":\"iana\"},\"audio/vnd.dolby.mps\":{\"source\":\"iana\"},\"audio/vnd.dolby.pl2\":{\"source\":\"iana\"},\"audio/vnd.dolby.pl2x\":{\"source\":\"iana\"},\"audio/vnd.dolby.pl2z\":{\"source\":\"iana\"},\"audio/vnd.dolby.pulse.1\":{\"source\":\"iana\"},\"audio/vnd.dra\":{\"source\":\"iana\",\"extensions\":[\"dra\"]},\"audio/vnd.dts\":{\"source\":\"iana\",\"extensions\":[\"dts\"]},\"audio/vnd.dts.hd\":{\"source\":\"iana\",\"extensions\":[\"dtshd\"]},\"audio/vnd.dts.uhd\":{\"source\":\"iana\"},\"audio/vnd.dvb.file\":{\"source\":\"iana\"},\"audio/vnd.everad.plj\":{\"source\":\"iana\"},\"audio/vnd.hns.audio\":{\"source\":\"iana\"},\"audio/vnd.lucent.voice\":{\"source\":\"iana\",\"extensions\":[\"lvp\"]},\"audio/vnd.ms-playready.media.pya\":{\"source\":\"iana\",\"extensions\":[\"pya\"]},\"audio/vnd.nokia.mobile-xmf\":{\"source\":\"iana\"},\"audio/vnd.nortel.vbk\":{\"source\":\"iana\"},\"audio/vnd.nuera.ecelp4800\":{\"source\":\"iana\",\"extensions\":[\"ecelp4800\"]},\"audio/vnd.nuera.ecelp7470\":{\"source\":\"iana\",\"extensions\":[\"ecelp7470\"]},\"audio/vnd.nuera.ecelp9600\":{\"source\":\"iana\",\"extensions\":[\"ecelp9600\"]},\"audio/vnd.octel.sbc\":{\"source\":\"iana\"},\"audio/vnd.presonus.multitrack\":{\"source\":\"iana\"},\"audio/vnd.qcelp\":{\"source\":\"iana\"},\"audio/vnd.rhetorex.32kadpcm\":{\"source\":\"iana\"},\"audio/vnd.rip\":{\"source\":\"iana\",\"extensions\":[\"rip\"]},\"audio/vnd.rn-realaudio\":{\"compressible\":false},\"audio/vnd.sealedmedia.softseal.mpeg\":{\"source\":\"iana\"},\"audio/vnd.vmx.cvsd\":{\"source\":\"iana\"},\"audio/vnd.wave\":{\"compressible\":false},\"audio/vorbis\":{\"source\":\"iana\",\"compressible\":false},\"audio/vorbis-config\":{\"source\":\"iana\"},\"audio/wav\":{\"compressible\":false,\"extensions\":[\"wav\"]},\"audio/wave\":{\"compressible\":false,\"extensions\":[\"wav\"]},\"audio/webm\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"weba\"]},\"audio/x-aac\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"aac\"]},\"audio/x-aiff\":{\"source\":\"apache\",\"extensions\":[\"aif\",\"aiff\",\"aifc\"]},\"audio/x-caf\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"caf\"]},\"audio/x-flac\":{\"source\":\"apache\",\"extensions\":[\"flac\"]},\"audio/x-m4a\":{\"source\":\"nginx\",\"extensions\":[\"m4a\"]},\"audio/x-matroska\":{\"source\":\"apache\",\"extensions\":[\"mka\"]},\"audio/x-mpegurl\":{\"source\":\"apache\",\"extensions\":[\"m3u\"]},\"audio/x-ms-wax\":{\"source\":\"apache\",\"extensions\":[\"wax\"]},\"audio/x-ms-wma\":{\"source\":\"apache\",\"extensions\":[\"wma\"]},\"audio/x-pn-realaudio\":{\"source\":\"apache\",\"extensions\":[\"ram\",\"ra\"]},\"audio/x-pn-realaudio-plugin\":{\"source\":\"apache\",\"extensions\":[\"rmp\"]},\"audio/x-realaudio\":{\"source\":\"nginx\",\"extensions\":[\"ra\"]},\"audio/x-tta\":{\"source\":\"apache\"},\"audio/x-wav\":{\"source\":\"apache\",\"extensions\":[\"wav\"]},\"audio/xm\":{\"source\":\"apache\",\"extensions\":[\"xm\"]},\"chemical/x-cdx\":{\"source\":\"apache\",\"extensions\":[\"cdx\"]},\"chemical/x-cif\":{\"source\":\"apache\",\"extensions\":[\"cif\"]},\"chemical/x-cmdf\":{\"source\":\"apache\",\"extensions\":[\"cmdf\"]},\"chemical/x-cml\":{\"source\":\"apache\",\"extensions\":[\"cml\"]},\"chemical/x-csml\":{\"source\":\"apache\",\"extensions\":[\"csml\"]},\"chemical/x-pdb\":{\"source\":\"apache\"},\"chemical/x-xyz\":{\"source\":\"apache\",\"extensions\":[\"xyz\"]},\"font/collection\":{\"source\":\"iana\",\"extensions\":[\"ttc\"]},\"font/otf\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"otf\"]},\"font/sfnt\":{\"source\":\"iana\"},\"font/ttf\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ttf\"]},\"font/woff\":{\"source\":\"iana\",\"extensions\":[\"woff\"]},\"font/woff2\":{\"source\":\"iana\",\"extensions\":[\"woff2\"]},\"image/aces\":{\"source\":\"iana\",\"extensions\":[\"exr\"]},\"image/apng\":{\"compressible\":false,\"extensions\":[\"apng\"]},\"image/avci\":{\"source\":\"iana\"},\"image/avcs\":{\"source\":\"iana\"},\"image/avif\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"avif\"]},\"image/bmp\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"bmp\"]},\"image/cgm\":{\"source\":\"iana\",\"extensions\":[\"cgm\"]},\"image/dicom-rle\":{\"source\":\"iana\",\"extensions\":[\"drle\"]},\"image/emf\":{\"source\":\"iana\",\"extensions\":[\"emf\"]},\"image/fits\":{\"source\":\"iana\",\"extensions\":[\"fits\"]},\"image/g3fax\":{\"source\":\"iana\",\"extensions\":[\"g3\"]},\"image/gif\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"gif\"]},\"image/heic\":{\"source\":\"iana\",\"extensions\":[\"heic\"]},\"image/heic-sequence\":{\"source\":\"iana\",\"extensions\":[\"heics\"]},\"image/heif\":{\"source\":\"iana\",\"extensions\":[\"heif\"]},\"image/heif-sequence\":{\"source\":\"iana\",\"extensions\":[\"heifs\"]},\"image/hej2k\":{\"source\":\"iana\",\"extensions\":[\"hej2\"]},\"image/hsj2\":{\"source\":\"iana\",\"extensions\":[\"hsj2\"]},\"image/ief\":{\"source\":\"iana\",\"extensions\":[\"ief\"]},\"image/jls\":{\"source\":\"iana\",\"extensions\":[\"jls\"]},\"image/jp2\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"jp2\",\"jpg2\"]},\"image/jpeg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"jpeg\",\"jpg\",\"jpe\"]},\"image/jph\":{\"source\":\"iana\",\"extensions\":[\"jph\"]},\"image/jphc\":{\"source\":\"iana\",\"extensions\":[\"jhc\"]},\"image/jpm\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"jpm\"]},\"image/jpx\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"jpx\",\"jpf\"]},\"image/jxr\":{\"source\":\"iana\",\"extensions\":[\"jxr\"]},\"image/jxra\":{\"source\":\"iana\",\"extensions\":[\"jxra\"]},\"image/jxrs\":{\"source\":\"iana\",\"extensions\":[\"jxrs\"]},\"image/jxs\":{\"source\":\"iana\",\"extensions\":[\"jxs\"]},\"image/jxsc\":{\"source\":\"iana\",\"extensions\":[\"jxsc\"]},\"image/jxsi\":{\"source\":\"iana\",\"extensions\":[\"jxsi\"]},\"image/jxss\":{\"source\":\"iana\",\"extensions\":[\"jxss\"]},\"image/ktx\":{\"source\":\"iana\",\"extensions\":[\"ktx\"]},\"image/ktx2\":{\"source\":\"iana\",\"extensions\":[\"ktx2\"]},\"image/naplps\":{\"source\":\"iana\"},\"image/pjpeg\":{\"compressible\":false},\"image/png\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"png\"]},\"image/prs.btif\":{\"source\":\"iana\",\"extensions\":[\"btif\"]},\"image/prs.pti\":{\"source\":\"iana\",\"extensions\":[\"pti\"]},\"image/pwg-raster\":{\"source\":\"iana\"},\"image/sgi\":{\"source\":\"apache\",\"extensions\":[\"sgi\"]},\"image/svg+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"svg\",\"svgz\"]},\"image/t38\":{\"source\":\"iana\",\"extensions\":[\"t38\"]},\"image/tiff\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"tif\",\"tiff\"]},\"image/tiff-fx\":{\"source\":\"iana\",\"extensions\":[\"tfx\"]},\"image/vnd.adobe.photoshop\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"psd\"]},\"image/vnd.airzip.accelerator.azv\":{\"source\":\"iana\",\"extensions\":[\"azv\"]},\"image/vnd.cns.inf2\":{\"source\":\"iana\"},\"image/vnd.dece.graphic\":{\"source\":\"iana\",\"extensions\":[\"uvi\",\"uvvi\",\"uvg\",\"uvvg\"]},\"image/vnd.djvu\":{\"source\":\"iana\",\"extensions\":[\"djvu\",\"djv\"]},\"image/vnd.dvb.subtitle\":{\"source\":\"iana\",\"extensions\":[\"sub\"]},\"image/vnd.dwg\":{\"source\":\"iana\",\"extensions\":[\"dwg\"]},\"image/vnd.dxf\":{\"source\":\"iana\",\"extensions\":[\"dxf\"]},\"image/vnd.fastbidsheet\":{\"source\":\"iana\",\"extensions\":[\"fbs\"]},\"image/vnd.fpx\":{\"source\":\"iana\",\"extensions\":[\"fpx\"]},\"image/vnd.fst\":{\"source\":\"iana\",\"extensions\":[\"fst\"]},\"image/vnd.fujixerox.edmics-mmr\":{\"source\":\"iana\",\"extensions\":[\"mmr\"]},\"image/vnd.fujixerox.edmics-rlc\":{\"source\":\"iana\",\"extensions\":[\"rlc\"]},\"image/vnd.globalgraphics.pgb\":{\"source\":\"iana\"},\"image/vnd.microsoft.icon\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ico\"]},\"image/vnd.mix\":{\"source\":\"iana\"},\"image/vnd.mozilla.apng\":{\"source\":\"iana\"},\"image/vnd.ms-dds\":{\"compressible\":true,\"extensions\":[\"dds\"]},\"image/vnd.ms-modi\":{\"source\":\"iana\",\"extensions\":[\"mdi\"]},\"image/vnd.ms-photo\":{\"source\":\"apache\",\"extensions\":[\"wdp\"]},\"image/vnd.net-fpx\":{\"source\":\"iana\",\"extensions\":[\"npx\"]},\"image/vnd.pco.b16\":{\"source\":\"iana\",\"extensions\":[\"b16\"]},\"image/vnd.radiance\":{\"source\":\"iana\"},\"image/vnd.sealed.png\":{\"source\":\"iana\"},\"image/vnd.sealedmedia.softseal.gif\":{\"source\":\"iana\"},\"image/vnd.sealedmedia.softseal.jpg\":{\"source\":\"iana\"},\"image/vnd.svf\":{\"source\":\"iana\"},\"image/vnd.tencent.tap\":{\"source\":\"iana\",\"extensions\":[\"tap\"]},\"image/vnd.valve.source.texture\":{\"source\":\"iana\",\"extensions\":[\"vtf\"]},\"image/vnd.wap.wbmp\":{\"source\":\"iana\",\"extensions\":[\"wbmp\"]},\"image/vnd.xiff\":{\"source\":\"iana\",\"extensions\":[\"xif\"]},\"image/vnd.zbrush.pcx\":{\"source\":\"iana\",\"extensions\":[\"pcx\"]},\"image/webp\":{\"source\":\"apache\",\"extensions\":[\"webp\"]},\"image/wmf\":{\"source\":\"iana\",\"extensions\":[\"wmf\"]},\"image/x-3ds\":{\"source\":\"apache\",\"extensions\":[\"3ds\"]},\"image/x-cmu-raster\":{\"source\":\"apache\",\"extensions\":[\"ras\"]},\"image/x-cmx\":{\"source\":\"apache\",\"extensions\":[\"cmx\"]},\"image/x-freehand\":{\"source\":\"apache\",\"extensions\":[\"fh\",\"fhc\",\"fh4\",\"fh5\",\"fh7\"]},\"image/x-icon\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"ico\"]},\"image/x-jng\":{\"source\":\"nginx\",\"extensions\":[\"jng\"]},\"image/x-mrsid-image\":{\"source\":\"apache\",\"extensions\":[\"sid\"]},\"image/x-ms-bmp\":{\"source\":\"nginx\",\"compressible\":true,\"extensions\":[\"bmp\"]},\"image/x-pcx\":{\"source\":\"apache\",\"extensions\":[\"pcx\"]},\"image/x-pict\":{\"source\":\"apache\",\"extensions\":[\"pic\",\"pct\"]},\"image/x-portable-anymap\":{\"source\":\"apache\",\"extensions\":[\"pnm\"]},\"image/x-portable-bitmap\":{\"source\":\"apache\",\"extensions\":[\"pbm\"]},\"image/x-portable-graymap\":{\"source\":\"apache\",\"extensions\":[\"pgm\"]},\"image/x-portable-pixmap\":{\"source\":\"apache\",\"extensions\":[\"ppm\"]},\"image/x-rgb\":{\"source\":\"apache\",\"extensions\":[\"rgb\"]},\"image/x-tga\":{\"source\":\"apache\",\"extensions\":[\"tga\"]},\"image/x-xbitmap\":{\"source\":\"apache\",\"extensions\":[\"xbm\"]},\"image/x-xcf\":{\"compressible\":false},\"image/x-xpixmap\":{\"source\":\"apache\",\"extensions\":[\"xpm\"]},\"image/x-xwindowdump\":{\"source\":\"apache\",\"extensions\":[\"xwd\"]},\"message/cpim\":{\"source\":\"iana\"},\"message/delivery-status\":{\"source\":\"iana\"},\"message/disposition-notification\":{\"source\":\"iana\",\"extensions\":[\"disposition-notification\"]},\"message/external-body\":{\"source\":\"iana\"},\"message/feedback-report\":{\"source\":\"iana\"},\"message/global\":{\"source\":\"iana\",\"extensions\":[\"u8msg\"]},\"message/global-delivery-status\":{\"source\":\"iana\",\"extensions\":[\"u8dsn\"]},\"message/global-disposition-notification\":{\"source\":\"iana\",\"extensions\":[\"u8mdn\"]},\"message/global-headers\":{\"source\":\"iana\",\"extensions\":[\"u8hdr\"]},\"message/http\":{\"source\":\"iana\",\"compressible\":false},\"message/imdn+xml\":{\"source\":\"iana\",\"compressible\":true},\"message/news\":{\"source\":\"iana\"},\"message/partial\":{\"source\":\"iana\",\"compressible\":false},\"message/rfc822\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"eml\",\"mime\"]},\"message/s-http\":{\"source\":\"iana\"},\"message/sip\":{\"source\":\"iana\"},\"message/sipfrag\":{\"source\":\"iana\"},\"message/tracking-status\":{\"source\":\"iana\"},\"message/vnd.si.simp\":{\"source\":\"iana\"},\"message/vnd.wfa.wsc\":{\"source\":\"iana\",\"extensions\":[\"wsc\"]},\"model/3mf\":{\"source\":\"iana\",\"extensions\":[\"3mf\"]},\"model/e57\":{\"source\":\"iana\"},\"model/gltf+json\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"gltf\"]},\"model/gltf-binary\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"glb\"]},\"model/iges\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"igs\",\"iges\"]},\"model/mesh\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"msh\",\"mesh\",\"silo\"]},\"model/mtl\":{\"source\":\"iana\",\"extensions\":[\"mtl\"]},\"model/obj\":{\"source\":\"iana\",\"extensions\":[\"obj\"]},\"model/step\":{\"source\":\"iana\"},\"model/step+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"stpx\"]},\"model/step+zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"stpz\"]},\"model/step-xml+zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"stpxz\"]},\"model/stl\":{\"source\":\"iana\",\"extensions\":[\"stl\"]},\"model/vnd.collada+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dae\"]},\"model/vnd.dwf\":{\"source\":\"iana\",\"extensions\":[\"dwf\"]},\"model/vnd.flatland.3dml\":{\"source\":\"iana\"},\"model/vnd.gdl\":{\"source\":\"iana\",\"extensions\":[\"gdl\"]},\"model/vnd.gs-gdl\":{\"source\":\"apache\"},\"model/vnd.gs.gdl\":{\"source\":\"iana\"},\"model/vnd.gtw\":{\"source\":\"iana\",\"extensions\":[\"gtw\"]},\"model/vnd.moml+xml\":{\"source\":\"iana\",\"compressible\":true},\"model/vnd.mts\":{\"source\":\"iana\",\"extensions\":[\"mts\"]},\"model/vnd.opengex\":{\"source\":\"iana\",\"extensions\":[\"ogex\"]},\"model/vnd.parasolid.transmit.binary\":{\"source\":\"iana\",\"extensions\":[\"x_b\"]},\"model/vnd.parasolid.transmit.text\":{\"source\":\"iana\",\"extensions\":[\"x_t\"]},\"model/vnd.pytha.pyox\":{\"source\":\"iana\"},\"model/vnd.rosette.annotated-data-model\":{\"source\":\"iana\"},\"model/vnd.sap.vds\":{\"source\":\"iana\",\"extensions\":[\"vds\"]},\"model/vnd.usdz+zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"usdz\"]},\"model/vnd.valve.source.compiled-map\":{\"source\":\"iana\",\"extensions\":[\"bsp\"]},\"model/vnd.vtu\":{\"source\":\"iana\",\"extensions\":[\"vtu\"]},\"model/vrml\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"wrl\",\"vrml\"]},\"model/x3d+binary\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"x3db\",\"x3dbz\"]},\"model/x3d+fastinfoset\":{\"source\":\"iana\",\"extensions\":[\"x3db\"]},\"model/x3d+vrml\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"x3dv\",\"x3dvz\"]},\"model/x3d+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"x3d\",\"x3dz\"]},\"model/x3d-vrml\":{\"source\":\"iana\",\"extensions\":[\"x3dv\"]},\"multipart/alternative\":{\"source\":\"iana\",\"compressible\":false},\"multipart/appledouble\":{\"source\":\"iana\"},\"multipart/byteranges\":{\"source\":\"iana\"},\"multipart/digest\":{\"source\":\"iana\"},\"multipart/encrypted\":{\"source\":\"iana\",\"compressible\":false},\"multipart/form-data\":{\"source\":\"iana\",\"compressible\":false},\"multipart/header-set\":{\"source\":\"iana\"},\"multipart/mixed\":{\"source\":\"iana\"},\"multipart/multilingual\":{\"source\":\"iana\"},\"multipart/parallel\":{\"source\":\"iana\"},\"multipart/related\":{\"source\":\"iana\",\"compressible\":false},\"multipart/report\":{\"source\":\"iana\"},\"multipart/signed\":{\"source\":\"iana\",\"compressible\":false},\"multipart/vnd.bint.med-plus\":{\"source\":\"iana\"},\"multipart/voice-message\":{\"source\":\"iana\"},\"multipart/x-mixed-replace\":{\"source\":\"iana\"},\"text/1d-interleaved-parityfec\":{\"source\":\"iana\"},\"text/cache-manifest\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"appcache\",\"manifest\"]},\"text/calendar\":{\"source\":\"iana\",\"extensions\":[\"ics\",\"ifb\"]},\"text/calender\":{\"compressible\":true},\"text/cmd\":{\"compressible\":true},\"text/coffeescript\":{\"extensions\":[\"coffee\",\"litcoffee\"]},\"text/cql\":{\"source\":\"iana\"},\"text/cql-expression\":{\"source\":\"iana\"},\"text/cql-identifier\":{\"source\":\"iana\"},\"text/css\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"css\"]},\"text/csv\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"csv\"]},\"text/csv-schema\":{\"source\":\"iana\"},\"text/directory\":{\"source\":\"iana\"},\"text/dns\":{\"source\":\"iana\"},\"text/ecmascript\":{\"source\":\"iana\"},\"text/encaprtp\":{\"source\":\"iana\"},\"text/enriched\":{\"source\":\"iana\"},\"text/fhirpath\":{\"source\":\"iana\"},\"text/flexfec\":{\"source\":\"iana\"},\"text/fwdred\":{\"source\":\"iana\"},\"text/gff3\":{\"source\":\"iana\"},\"text/grammar-ref-list\":{\"source\":\"iana\"},\"text/html\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"html\",\"htm\",\"shtml\"]},\"text/jade\":{\"extensions\":[\"jade\"]},\"text/javascript\":{\"source\":\"iana\",\"compressible\":true},\"text/jcr-cnd\":{\"source\":\"iana\"},\"text/jsx\":{\"compressible\":true,\"extensions\":[\"jsx\"]},\"text/less\":{\"compressible\":true,\"extensions\":[\"less\"]},\"text/markdown\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"markdown\",\"md\"]},\"text/mathml\":{\"source\":\"nginx\",\"extensions\":[\"mml\"]},\"text/mdx\":{\"compressible\":true,\"extensions\":[\"mdx\"]},\"text/mizar\":{\"source\":\"iana\"},\"text/n3\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"n3\"]},\"text/parameters\":{\"source\":\"iana\",\"charset\":\"UTF-8\"},\"text/parityfec\":{\"source\":\"iana\"},\"text/plain\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"txt\",\"text\",\"conf\",\"def\",\"list\",\"log\",\"in\",\"ini\"]},\"text/provenance-notation\":{\"source\":\"iana\",\"charset\":\"UTF-8\"},\"text/prs.fallenstein.rst\":{\"source\":\"iana\"},\"text/prs.lines.tag\":{\"source\":\"iana\",\"extensions\":[\"dsc\"]},\"text/prs.prop.logic\":{\"source\":\"iana\"},\"text/raptorfec\":{\"source\":\"iana\"},\"text/red\":{\"source\":\"iana\"},\"text/rfc822-headers\":{\"source\":\"iana\"},\"text/richtext\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rtx\"]},\"text/rtf\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rtf\"]},\"text/rtp-enc-aescm128\":{\"source\":\"iana\"},\"text/rtploopback\":{\"source\":\"iana\"},\"text/rtx\":{\"source\":\"iana\"},\"text/sgml\":{\"source\":\"iana\",\"extensions\":[\"sgml\",\"sgm\"]},\"text/shaclc\":{\"source\":\"iana\"},\"text/shex\":{\"source\":\"iana\",\"extensions\":[\"shex\"]},\"text/slim\":{\"extensions\":[\"slim\",\"slm\"]},\"text/spdx\":{\"source\":\"iana\",\"extensions\":[\"spdx\"]},\"text/strings\":{\"source\":\"iana\"},\"text/stylus\":{\"extensions\":[\"stylus\",\"styl\"]},\"text/t140\":{\"source\":\"iana\"},\"text/tab-separated-values\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"tsv\"]},\"text/troff\":{\"source\":\"iana\",\"extensions\":[\"t\",\"tr\",\"roff\",\"man\",\"me\",\"ms\"]},\"text/turtle\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"extensions\":[\"ttl\"]},\"text/ulpfec\":{\"source\":\"iana\"},\"text/uri-list\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"uri\",\"uris\",\"urls\"]},\"text/vcard\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"vcard\"]},\"text/vnd.a\":{\"source\":\"iana\"},\"text/vnd.abc\":{\"source\":\"iana\"},\"text/vnd.ascii-art\":{\"source\":\"iana\"},\"text/vnd.curl\":{\"source\":\"iana\",\"extensions\":[\"curl\"]},\"text/vnd.curl.dcurl\":{\"source\":\"apache\",\"extensions\":[\"dcurl\"]},\"text/vnd.curl.mcurl\":{\"source\":\"apache\",\"extensions\":[\"mcurl\"]},\"text/vnd.curl.scurl\":{\"source\":\"apache\",\"extensions\":[\"scurl\"]},\"text/vnd.debian.copyright\":{\"source\":\"iana\",\"charset\":\"UTF-8\"},\"text/vnd.dmclientscript\":{\"source\":\"iana\"},\"text/vnd.dvb.subtitle\":{\"source\":\"iana\",\"extensions\":[\"sub\"]},\"text/vnd.esmertec.theme-descriptor\":{\"source\":\"iana\",\"charset\":\"UTF-8\"},\"text/vnd.familysearch.gedcom\":{\"source\":\"iana\",\"extensions\":[\"ged\"]},\"text/vnd.ficlab.flt\":{\"source\":\"iana\"},\"text/vnd.fly\":{\"source\":\"iana\",\"extensions\":[\"fly\"]},\"text/vnd.fmi.flexstor\":{\"source\":\"iana\",\"extensions\":[\"flx\"]},\"text/vnd.gml\":{\"source\":\"iana\"},\"text/vnd.graphviz\":{\"source\":\"iana\",\"extensions\":[\"gv\"]},\"text/vnd.hans\":{\"source\":\"iana\"},\"text/vnd.hgl\":{\"source\":\"iana\"},\"text/vnd.in3d.3dml\":{\"source\":\"iana\",\"extensions\":[\"3dml\"]},\"text/vnd.in3d.spot\":{\"source\":\"iana\",\"extensions\":[\"spot\"]},\"text/vnd.iptc.newsml\":{\"source\":\"iana\"},\"text/vnd.iptc.nitf\":{\"source\":\"iana\"},\"text/vnd.latex-z\":{\"source\":\"iana\"},\"text/vnd.motorola.reflex\":{\"source\":\"iana\"},\"text/vnd.ms-mediapackage\":{\"source\":\"iana\"},\"text/vnd.net2phone.commcenter.command\":{\"source\":\"iana\"},\"text/vnd.radisys.msml-basic-layout\":{\"source\":\"iana\"},\"text/vnd.senx.warpscript\":{\"source\":\"iana\"},\"text/vnd.si.uricatalogue\":{\"source\":\"iana\"},\"text/vnd.sosi\":{\"source\":\"iana\"},\"text/vnd.sun.j2me.app-descriptor\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"extensions\":[\"jad\"]},\"text/vnd.trolltech.linguist\":{\"source\":\"iana\",\"charset\":\"UTF-8\"},\"text/vnd.wap.si\":{\"source\":\"iana\"},\"text/vnd.wap.sl\":{\"source\":\"iana\"},\"text/vnd.wap.wml\":{\"source\":\"iana\",\"extensions\":[\"wml\"]},\"text/vnd.wap.wmlscript\":{\"source\":\"iana\",\"extensions\":[\"wmls\"]},\"text/vtt\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"vtt\"]},\"text/x-asm\":{\"source\":\"apache\",\"extensions\":[\"s\",\"asm\"]},\"text/x-c\":{\"source\":\"apache\",\"extensions\":[\"c\",\"cc\",\"cxx\",\"cpp\",\"h\",\"hh\",\"dic\"]},\"text/x-component\":{\"source\":\"nginx\",\"extensions\":[\"htc\"]},\"text/x-fortran\":{\"source\":\"apache\",\"extensions\":[\"f\",\"for\",\"f77\",\"f90\"]},\"text/x-gwt-rpc\":{\"compressible\":true},\"text/x-handlebars-template\":{\"extensions\":[\"hbs\"]},\"text/x-java-source\":{\"source\":\"apache\",\"extensions\":[\"java\"]},\"text/x-jquery-tmpl\":{\"compressible\":true},\"text/x-lua\":{\"extensions\":[\"lua\"]},\"text/x-markdown\":{\"compressible\":true,\"extensions\":[\"mkd\"]},\"text/x-nfo\":{\"source\":\"apache\",\"extensions\":[\"nfo\"]},\"text/x-opml\":{\"source\":\"apache\",\"extensions\":[\"opml\"]},\"text/x-org\":{\"compressible\":true,\"extensions\":[\"org\"]},\"text/x-pascal\":{\"source\":\"apache\",\"extensions\":[\"p\",\"pas\"]},\"text/x-processing\":{\"compressible\":true,\"extensions\":[\"pde\"]},\"text/x-sass\":{\"extensions\":[\"sass\"]},\"text/x-scss\":{\"extensions\":[\"scss\"]},\"text/x-setext\":{\"source\":\"apache\",\"extensions\":[\"etx\"]},\"text/x-sfv\":{\"source\":\"apache\",\"extensions\":[\"sfv\"]},\"text/x-suse-ymp\":{\"compressible\":true,\"extensions\":[\"ymp\"]},\"text/x-uuencode\":{\"source\":\"apache\",\"extensions\":[\"uu\"]},\"text/x-vcalendar\":{\"source\":\"apache\",\"extensions\":[\"vcs\"]},\"text/x-vcard\":{\"source\":\"apache\",\"extensions\":[\"vcf\"]},\"text/xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xml\"]},\"text/xml-external-parsed-entity\":{\"source\":\"iana\"},\"text/yaml\":{\"compressible\":true,\"extensions\":[\"yaml\",\"yml\"]},\"video/1d-interleaved-parityfec\":{\"source\":\"iana\"},\"video/3gpp\":{\"source\":\"iana\",\"extensions\":[\"3gp\",\"3gpp\"]},\"video/3gpp-tt\":{\"source\":\"iana\"},\"video/3gpp2\":{\"source\":\"iana\",\"extensions\":[\"3g2\"]},\"video/av1\":{\"source\":\"iana\"},\"video/bmpeg\":{\"source\":\"iana\"},\"video/bt656\":{\"source\":\"iana\"},\"video/celb\":{\"source\":\"iana\"},\"video/dv\":{\"source\":\"iana\"},\"video/encaprtp\":{\"source\":\"iana\"},\"video/ffv1\":{\"source\":\"iana\"},\"video/flexfec\":{\"source\":\"iana\"},\"video/h261\":{\"source\":\"iana\",\"extensions\":[\"h261\"]},\"video/h263\":{\"source\":\"iana\",\"extensions\":[\"h263\"]},\"video/h263-1998\":{\"source\":\"iana\"},\"video/h263-2000\":{\"source\":\"iana\"},\"video/h264\":{\"source\":\"iana\",\"extensions\":[\"h264\"]},\"video/h264-rcdo\":{\"source\":\"iana\"},\"video/h264-svc\":{\"source\":\"iana\"},\"video/h265\":{\"source\":\"iana\"},\"video/iso.segment\":{\"source\":\"iana\",\"extensions\":[\"m4s\"]},\"video/jpeg\":{\"source\":\"iana\",\"extensions\":[\"jpgv\"]},\"video/jpeg2000\":{\"source\":\"iana\"},\"video/jpm\":{\"source\":\"apache\",\"extensions\":[\"jpm\",\"jpgm\"]},\"video/jxsv\":{\"source\":\"iana\"},\"video/mj2\":{\"source\":\"iana\",\"extensions\":[\"mj2\",\"mjp2\"]},\"video/mp1s\":{\"source\":\"iana\"},\"video/mp2p\":{\"source\":\"iana\"},\"video/mp2t\":{\"source\":\"iana\",\"extensions\":[\"ts\"]},\"video/mp4\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"mp4\",\"mp4v\",\"mpg4\"]},\"video/mp4v-es\":{\"source\":\"iana\"},\"video/mpeg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"mpeg\",\"mpg\",\"mpe\",\"m1v\",\"m2v\"]},\"video/mpeg4-generic\":{\"source\":\"iana\"},\"video/mpv\":{\"source\":\"iana\"},\"video/nv\":{\"source\":\"iana\"},\"video/ogg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"ogv\"]},\"video/parityfec\":{\"source\":\"iana\"},\"video/pointer\":{\"source\":\"iana\"},\"video/quicktime\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"qt\",\"mov\"]},\"video/raptorfec\":{\"source\":\"iana\"},\"video/raw\":{\"source\":\"iana\"},\"video/rtp-enc-aescm128\":{\"source\":\"iana\"},\"video/rtploopback\":{\"source\":\"iana\"},\"video/rtx\":{\"source\":\"iana\"},\"video/scip\":{\"source\":\"iana\"},\"video/smpte291\":{\"source\":\"iana\"},\"video/smpte292m\":{\"source\":\"iana\"},\"video/ulpfec\":{\"source\":\"iana\"},\"video/vc1\":{\"source\":\"iana\"},\"video/vc2\":{\"source\":\"iana\"},\"video/vnd.cctv\":{\"source\":\"iana\"},\"video/vnd.dece.hd\":{\"source\":\"iana\",\"extensions\":[\"uvh\",\"uvvh\"]},\"video/vnd.dece.mobile\":{\"source\":\"iana\",\"extensions\":[\"uvm\",\"uvvm\"]},\"video/vnd.dece.mp4\":{\"source\":\"iana\"},\"video/vnd.dece.pd\":{\"source\":\"iana\",\"extensions\":[\"uvp\",\"uvvp\"]},\"video/vnd.dece.sd\":{\"source\":\"iana\",\"extensions\":[\"uvs\",\"uvvs\"]},\"video/vnd.dece.video\":{\"source\":\"iana\",\"extensions\":[\"uvv\",\"uvvv\"]},\"video/vnd.directv.mpeg\":{\"source\":\"iana\"},\"video/vnd.directv.mpeg-tts\":{\"source\":\"iana\"},\"video/vnd.dlna.mpeg-tts\":{\"source\":\"iana\"},\"video/vnd.dvb.file\":{\"source\":\"iana\",\"extensions\":[\"dvb\"]},\"video/vnd.fvt\":{\"source\":\"iana\",\"extensions\":[\"fvt\"]},\"video/vnd.hns.video\":{\"source\":\"iana\"},\"video/vnd.iptvforum.1dparityfec-1010\":{\"source\":\"iana\"},\"video/vnd.iptvforum.1dparityfec-2005\":{\"source\":\"iana\"},\"video/vnd.iptvforum.2dparityfec-1010\":{\"source\":\"iana\"},\"video/vnd.iptvforum.2dparityfec-2005\":{\"source\":\"iana\"},\"video/vnd.iptvforum.ttsavc\":{\"source\":\"iana\"},\"video/vnd.iptvforum.ttsmpeg2\":{\"source\":\"iana\"},\"video/vnd.motorola.video\":{\"source\":\"iana\"},\"video/vnd.motorola.videop\":{\"source\":\"iana\"},\"video/vnd.mpegurl\":{\"source\":\"iana\",\"extensions\":[\"mxu\",\"m4u\"]},\"video/vnd.ms-playready.media.pyv\":{\"source\":\"iana\",\"extensions\":[\"pyv\"]},\"video/vnd.nokia.interleaved-multimedia\":{\"source\":\"iana\"},\"video/vnd.nokia.mp4vr\":{\"source\":\"iana\"},\"video/vnd.nokia.videovoip\":{\"source\":\"iana\"},\"video/vnd.objectvideo\":{\"source\":\"iana\"},\"video/vnd.radgamettools.bink\":{\"source\":\"iana\"},\"video/vnd.radgamettools.smacker\":{\"source\":\"iana\"},\"video/vnd.sealed.mpeg1\":{\"source\":\"iana\"},\"video/vnd.sealed.mpeg4\":{\"source\":\"iana\"},\"video/vnd.sealed.swf\":{\"source\":\"iana\"},\"video/vnd.sealedmedia.softseal.mov\":{\"source\":\"iana\"},\"video/vnd.uvvu.mp4\":{\"source\":\"iana\",\"extensions\":[\"uvu\",\"uvvu\"]},\"video/vnd.vivo\":{\"source\":\"iana\",\"extensions\":[\"viv\"]},\"video/vnd.youtube.yt\":{\"source\":\"iana\"},\"video/vp8\":{\"source\":\"iana\"},\"video/vp9\":{\"source\":\"iana\"},\"video/webm\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"webm\"]},\"video/x-f4v\":{\"source\":\"apache\",\"extensions\":[\"f4v\"]},\"video/x-fli\":{\"source\":\"apache\",\"extensions\":[\"fli\"]},\"video/x-flv\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"flv\"]},\"video/x-m4v\":{\"source\":\"apache\",\"extensions\":[\"m4v\"]},\"video/x-matroska\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"mkv\",\"mk3d\",\"mks\"]},\"video/x-mng\":{\"source\":\"apache\",\"extensions\":[\"mng\"]},\"video/x-ms-asf\":{\"source\":\"apache\",\"extensions\":[\"asf\",\"asx\"]},\"video/x-ms-vob\":{\"source\":\"apache\",\"extensions\":[\"vob\"]},\"video/x-ms-wm\":{\"source\":\"apache\",\"extensions\":[\"wm\"]},\"video/x-ms-wmv\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"wmv\"]},\"video/x-ms-wmx\":{\"source\":\"apache\",\"extensions\":[\"wmx\"]},\"video/x-ms-wvx\":{\"source\":\"apache\",\"extensions\":[\"wvx\"]},\"video/x-msvideo\":{\"source\":\"apache\",\"extensions\":[\"avi\"]},\"video/x-sgi-movie\":{\"source\":\"apache\",\"extensions\":[\"movie\"]},\"video/x-smv\":{\"source\":\"apache\",\"extensions\":[\"smv\"]},\"x-conference/x-cooltalk\":{\"source\":\"apache\",\"extensions\":[\"ice\"]},\"x-shader/x-fragment\":{\"compressible\":true},\"x-shader/x-vertex\":{\"compressible\":true}}');\n            }\n        }, a = {};\n        function n(i) {\n            var o = a[i];\n            if (void 0 !== o) return o.exports;\n            var s = a[i] = {\n                exports: {}\n            };\n            return e[i](s, s.exports, n), s.exports;\n        }\n        n.n = (e)=>{\n            var a = e && e.__esModule ? ()=>e.default : ()=>e;\n            return n.d(a, {\n                a\n            }), a;\n        }, n.d = (e, a)=>{\n            for(var i in a)n.o(a, i) && !n.o(e, i) && Object.defineProperty(e, i, {\n                enumerable: !0,\n                get: a[i]\n            });\n        }, n.o = (e, a)=>Object.prototype.hasOwnProperty.call(e, a), n.r = (e)=>{\n            \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n                value: \"Module\"\n            }), Object.defineProperty(e, \"__esModule\", {\n                value: !0\n            });\n        };\n        var i = {};\n        return (()=>{\n            \"use strict\";\n            function e(e, a) {\n                return function() {\n                    return e.apply(a, arguments);\n                };\n            }\n            n.r(i), n.d(i, {\n                createClient: ()=>In,\n                createGlobalOptions: ()=>vn\n            });\n            const { toString: a } = Object.prototype, { getPrototypeOf: o } = Object, s = (t = Object.create(null), (e)=>{\n                const n = a.call(e);\n                return t[n] || (t[n] = n.slice(8, -1).toLowerCase());\n            });\n            var t;\n            const r = (e)=>(e = e.toLowerCase(), (a)=>s(a) === e), c = (e)=>(a)=>typeof a === e, { isArray: p } = Array, l = c(\"undefined\"), u = r(\"ArrayBuffer\"), d = c(\"string\"), m = c(\"function\"), f = c(\"number\"), x = (e)=>null !== e && \"object\" == typeof e, v = (e)=>{\n                if (\"object\" !== s(e)) return !1;\n                const a = o(e);\n                return !(null !== a && a !== Object.prototype && null !== Object.getPrototypeOf(a) || Symbol.toStringTag in e || Symbol.iterator in e);\n            }, h = r(\"Date\"), b = r(\"File\"), g = r(\"Blob\"), y = r(\"FileList\"), w = r(\"URLSearchParams\");\n            function k(e, a, { allOwnKeys: n = !1 } = {}) {\n                if (null == e) return;\n                let i, o;\n                if (\"object\" != typeof e && (e = [\n                    e\n                ]), p(e)) for(i = 0, o = e.length; i < o; i++)a.call(null, e[i], i, e);\n                else {\n                    const o = n ? Object.getOwnPropertyNames(e) : Object.keys(e), s = o.length;\n                    let t;\n                    for(i = 0; i < s; i++)t = o[i], a.call(null, e[t], t, e);\n                }\n            }\n            function j(e, a) {\n                a = a.toLowerCase();\n                const n = Object.keys(e);\n                let i, o = n.length;\n                for(; o-- > 0;)if (i = n[o], a === i.toLowerCase()) return i;\n                return null;\n            }\n            const _ = \"undefined\" != typeof globalThis ? globalThis : \"undefined\" != typeof self ? self :  false ? 0 : global, E = (e)=>!l(e) && e !== _, O = (R = \"undefined\" != typeof Uint8Array && o(Uint8Array), (e)=>R && e instanceof R);\n            var R;\n            const S = r(\"HTMLFormElement\"), C = (({ hasOwnProperty: e })=>(a, n)=>e.call(a, n))(Object.prototype), T = r(\"RegExp\"), L = (e, a)=>{\n                const n = Object.getOwnPropertyDescriptors(e), i = {};\n                k(n, (n, o)=>{\n                    !1 !== a(n, o, e) && (i[o] = n);\n                }), Object.defineProperties(e, i);\n            }, A = \"abcdefghijklmnopqrstuvwxyz\", z = \"0123456789\", F = {\n                DIGIT: z,\n                ALPHA: A,\n                ALPHA_DIGIT: A + A.toUpperCase() + z\n            }, U = r(\"AsyncFunction\"), P = {\n                isArray: p,\n                isArrayBuffer: u,\n                isBuffer: function(e) {\n                    return null !== e && !l(e) && null !== e.constructor && !l(e.constructor) && m(e.constructor.isBuffer) && e.constructor.isBuffer(e);\n                },\n                isFormData: (e)=>{\n                    let a;\n                    return e && (\"function\" == typeof FormData && e instanceof FormData || m(e.append) && (\"formdata\" === (a = s(e)) || \"object\" === a && m(e.toString) && \"[object FormData]\" === e.toString()));\n                },\n                isArrayBufferView: function(e) {\n                    let a;\n                    return a = \"undefined\" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(e) : e && e.buffer && u(e.buffer), a;\n                },\n                isString: d,\n                isNumber: f,\n                isBoolean: (e)=>!0 === e || !1 === e,\n                isObject: x,\n                isPlainObject: v,\n                isUndefined: l,\n                isDate: h,\n                isFile: b,\n                isBlob: g,\n                isRegExp: T,\n                isFunction: m,\n                isStream: (e)=>x(e) && m(e.pipe),\n                isURLSearchParams: w,\n                isTypedArray: O,\n                isFileList: y,\n                forEach: k,\n                merge: function e() {\n                    const { caseless: a } = E(this) && this || {}, n = {}, i = (i, o)=>{\n                        const s = a && j(n, o) || o;\n                        v(n[s]) && v(i) ? n[s] = e(n[s], i) : v(i) ? n[s] = e({}, i) : p(i) ? n[s] = i.slice() : n[s] = i;\n                    };\n                    for(let e = 0, a = arguments.length; e < a; e++)arguments[e] && k(arguments[e], i);\n                    return n;\n                },\n                extend: (a, n, i, { allOwnKeys: o } = {})=>(k(n, (n, o)=>{\n                        i && m(n) ? a[o] = e(n, i) : a[o] = n;\n                    }, {\n                        allOwnKeys: o\n                    }), a),\n                trim: (e)=>e.trim ? e.trim() : e.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, \"\"),\n                stripBOM: (e)=>(65279 === e.charCodeAt(0) && (e = e.slice(1)), e),\n                inherits: (e, a, n, i)=>{\n                    e.prototype = Object.create(a.prototype, i), e.prototype.constructor = e, Object.defineProperty(e, \"super\", {\n                        value: a.prototype\n                    }), n && Object.assign(e.prototype, n);\n                },\n                toFlatObject: (e, a, n, i)=>{\n                    let s, t, r;\n                    const c = {};\n                    if (a = a || {}, null == e) return a;\n                    do {\n                        for(s = Object.getOwnPropertyNames(e), t = s.length; t-- > 0;)r = s[t], i && !i(r, e, a) || c[r] || (a[r] = e[r], c[r] = !0);\n                        e = !1 !== n && o(e);\n                    }while (e && (!n || n(e, a)) && e !== Object.prototype);\n                    return a;\n                },\n                kindOf: s,\n                kindOfTest: r,\n                endsWith: (e, a, n)=>{\n                    e = String(e), (void 0 === n || n > e.length) && (n = e.length), n -= a.length;\n                    const i = e.indexOf(a, n);\n                    return -1 !== i && i === n;\n                },\n                toArray: (e)=>{\n                    if (!e) return null;\n                    if (p(e)) return e;\n                    let a = e.length;\n                    if (!f(a)) return null;\n                    const n = new Array(a);\n                    for(; a-- > 0;)n[a] = e[a];\n                    return n;\n                },\n                forEachEntry: (e, a)=>{\n                    const n = (e && e[Symbol.iterator]).call(e);\n                    let i;\n                    for(; (i = n.next()) && !i.done;){\n                        const n = i.value;\n                        a.call(e, n[0], n[1]);\n                    }\n                },\n                matchAll: (e, a)=>{\n                    let n;\n                    const i = [];\n                    for(; null !== (n = e.exec(a));)i.push(n);\n                    return i;\n                },\n                isHTMLForm: S,\n                hasOwnProperty: C,\n                hasOwnProp: C,\n                reduceDescriptors: L,\n                freezeMethods: (e)=>{\n                    L(e, (a, n)=>{\n                        if (m(e) && -1 !== [\n                            \"arguments\",\n                            \"caller\",\n                            \"callee\"\n                        ].indexOf(n)) return !1;\n                        const i = e[n];\n                        m(i) && (a.enumerable = !1, \"writable\" in a ? a.writable = !1 : a.set || (a.set = ()=>{\n                            throw Error(\"Can not rewrite read-only method '\" + n + \"'\");\n                        }));\n                    });\n                },\n                toObjectSet: (e, a)=>{\n                    const n = {}, i = (e)=>{\n                        e.forEach((e)=>{\n                            n[e] = !0;\n                        });\n                    };\n                    return p(e) ? i(e) : i(String(e).split(a)), n;\n                },\n                toCamelCase: (e)=>e.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g, function(e, a, n) {\n                        return a.toUpperCase() + n;\n                    }),\n                noop: ()=>{},\n                toFiniteNumber: (e, a)=>(e = +e, Number.isFinite(e) ? e : a),\n                findKey: j,\n                global: _,\n                isContextDefined: E,\n                ALPHABET: F,\n                generateString: (e = 16, a = F.ALPHA_DIGIT)=>{\n                    let n = \"\";\n                    const { length: i } = a;\n                    for(; e--;)n += a[Math.random() * i | 0];\n                    return n;\n                },\n                isSpecCompliantForm: function(e) {\n                    return !!(e && m(e.append) && \"FormData\" === e[Symbol.toStringTag] && e[Symbol.iterator]);\n                },\n                toJSONObject: (e)=>{\n                    const a = new Array(10), n = (e, i)=>{\n                        if (x(e)) {\n                            if (a.indexOf(e) >= 0) return;\n                            if (!(\"toJSON\" in e)) {\n                                a[i] = e;\n                                const o = p(e) ? [] : {};\n                                return k(e, (e, a)=>{\n                                    const s = n(e, i + 1);\n                                    !l(s) && (o[a] = s);\n                                }), a[i] = void 0, o;\n                            }\n                        }\n                        return e;\n                    };\n                    return n(e, 0);\n                },\n                isAsyncFn: U,\n                isThenable: (e)=>e && (x(e) || m(e)) && m(e.then) && m(e.catch)\n            };\n            function q(e, a, n, i, o) {\n                Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = (new Error).stack, this.message = e, this.name = \"AxiosError\", a && (this.code = a), n && (this.config = n), i && (this.request = i), o && (this.response = o);\n            }\n            P.inherits(q, Error, {\n                toJSON: function() {\n                    return {\n                        message: this.message,\n                        name: this.name,\n                        description: this.description,\n                        number: this.number,\n                        fileName: this.fileName,\n                        lineNumber: this.lineNumber,\n                        columnNumber: this.columnNumber,\n                        stack: this.stack,\n                        config: P.toJSONObject(this.config),\n                        code: this.code,\n                        status: this.response && this.response.status ? this.response.status : null\n                    };\n                }\n            });\n            const B = q.prototype, N = {};\n            [\n                \"ERR_BAD_OPTION_VALUE\",\n                \"ERR_BAD_OPTION\",\n                \"ECONNABORTED\",\n                \"ETIMEDOUT\",\n                \"ERR_NETWORK\",\n                \"ERR_FR_TOO_MANY_REDIRECTS\",\n                \"ERR_DEPRECATED\",\n                \"ERR_BAD_RESPONSE\",\n                \"ERR_BAD_REQUEST\",\n                \"ERR_CANCELED\",\n                \"ERR_NOT_SUPPORT\",\n                \"ERR_INVALID_URL\"\n            ].forEach((e)=>{\n                N[e] = {\n                    value: e\n                };\n            }), Object.defineProperties(q, N), Object.defineProperty(B, \"isAxiosError\", {\n                value: !0\n            }), q.from = (e, a, n, i, o, s)=>{\n                const t = Object.create(B);\n                return P.toFlatObject(e, t, function(e) {\n                    return e !== Error.prototype;\n                }, (e)=>\"isAxiosError\" !== e), q.call(t, e.message, a, n, i, o), t.cause = e, t.name = e.name, s && Object.assign(t, s), t;\n            };\n            const D = q, I = n(970);\n            function M(e) {\n                return P.isPlainObject(e) || P.isArray(e);\n            }\n            function H(e) {\n                return P.endsWith(e, \"[]\") ? e.slice(0, -2) : e;\n            }\n            function $(e, a, n) {\n                return e ? e.concat(a).map(function(e, a) {\n                    return e = H(e), !n && a ? \"[\" + e + \"]\" : e;\n                }).join(n ? \".\" : \"\") : a;\n            }\n            const W = P.toFlatObject(P, {}, null, function(e) {\n                return /^is[A-Z]/.test(e);\n            }), K = function(e, a, n) {\n                if (!P.isObject(e)) throw new TypeError(\"target must be an object\");\n                a = a || new (I || FormData);\n                const i = (n = P.toFlatObject(n, {\n                    metaTokens: !0,\n                    dots: !1,\n                    indexes: !1\n                }, !1, function(e, a) {\n                    return !P.isUndefined(a[e]);\n                })).metaTokens, o = n.visitor || p, s = n.dots, t = n.indexes, r = (n.Blob || \"undefined\" != typeof Blob && Blob) && P.isSpecCompliantForm(a);\n                if (!P.isFunction(o)) throw new TypeError(\"visitor must be a function\");\n                function c(e) {\n                    if (null === e) return \"\";\n                    if (P.isDate(e)) return e.toISOString();\n                    if (!r && P.isBlob(e)) throw new D(\"Blob is not supported. Use a Buffer instead.\");\n                    return P.isArrayBuffer(e) || P.isTypedArray(e) ? r && \"function\" == typeof Blob ? new Blob([\n                        e\n                    ]) : Buffer.from(e) : e;\n                }\n                function p(e, n, o) {\n                    let r = e;\n                    if (e && !o && \"object\" == typeof e) {\n                        if (P.endsWith(n, \"{}\")) n = i ? n : n.slice(0, -2), e = JSON.stringify(e);\n                        else if (P.isArray(e) && function(e) {\n                            return P.isArray(e) && !e.some(M);\n                        }(e) || (P.isFileList(e) || P.endsWith(n, \"[]\")) && (r = P.toArray(e))) return n = H(n), r.forEach(function(e, i) {\n                            !P.isUndefined(e) && null !== e && a.append(!0 === t ? $([\n                                n\n                            ], i, s) : null === t ? n : n + \"[]\", c(e));\n                        }), !1;\n                    }\n                    return !!M(e) || (a.append($(o, n, s), c(e)), !1);\n                }\n                const l = [], u = Object.assign(W, {\n                    defaultVisitor: p,\n                    convertValue: c,\n                    isVisitable: M\n                });\n                if (!P.isObject(e)) throw new TypeError(\"data must be an object\");\n                return function e(n, i) {\n                    if (!P.isUndefined(n)) {\n                        if (-1 !== l.indexOf(n)) throw Error(\"Circular reference detected in \" + i.join(\".\"));\n                        l.push(n), P.forEach(n, function(n, s) {\n                            !0 === (!(P.isUndefined(n) || null === n) && o.call(a, n, P.isString(s) ? s.trim() : s, i, u)) && e(n, i ? i.concat(s) : [\n                                s\n                            ]);\n                        }), l.pop();\n                    }\n                }(e), a;\n            };\n            function G(e) {\n                const a = {\n                    \"!\": \"%21\",\n                    \"'\": \"%27\",\n                    \"(\": \"%28\",\n                    \")\": \"%29\",\n                    \"~\": \"%7E\",\n                    \"%20\": \"+\",\n                    \"%00\": \"\\x00\"\n                };\n                return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g, function(e) {\n                    return a[e];\n                });\n            }\n            function V(e, a) {\n                this._pairs = [], e && K(e, this, a);\n            }\n            const J = V.prototype;\n            J.append = function(e, a) {\n                this._pairs.push([\n                    e,\n                    a\n                ]);\n            }, J.toString = function(e) {\n                const a = e ? function(a) {\n                    return e.call(this, a, G);\n                } : G;\n                return this._pairs.map(function(e) {\n                    return a(e[0]) + \"=\" + a(e[1]);\n                }, \"\").join(\"&\");\n            };\n            const Y = V;\n            function Q(e) {\n                return encodeURIComponent(e).replace(/%3A/gi, \":\").replace(/%24/g, \"$\").replace(/%2C/gi, \",\").replace(/%20/g, \"+\").replace(/%5B/gi, \"[\").replace(/%5D/gi, \"]\");\n            }\n            function X(e, a, n) {\n                if (!a) return e;\n                const i = n && n.encode || Q, o = n && n.serialize;\n                let s;\n                if (s = o ? o(a, n) : P.isURLSearchParams(a) ? a.toString() : new Y(a, n).toString(i), s) {\n                    const a = e.indexOf(\"#\");\n                    -1 !== a && (e = e.slice(0, a)), e += (-1 === e.indexOf(\"?\") ? \"?\" : \"&\") + s;\n                }\n                return e;\n            }\n            const Z = class {\n                constructor(){\n                    this.handlers = [];\n                }\n                use(e, a, n) {\n                    return this.handlers.push({\n                        fulfilled: e,\n                        rejected: a,\n                        synchronous: !!n && n.synchronous,\n                        runWhen: n ? n.runWhen : null\n                    }), this.handlers.length - 1;\n                }\n                eject(e) {\n                    this.handlers[e] && (this.handlers[e] = null);\n                }\n                clear() {\n                    this.handlers && (this.handlers = []);\n                }\n                forEach(e) {\n                    P.forEach(this.handlers, function(a) {\n                        null !== a && e(a);\n                    });\n                }\n            }, ee = {\n                silentJSONParsing: !0,\n                forcedJSONParsing: !0,\n                clarifyTimeoutError: !1\n            }, ae = {\n                isNode: !0,\n                classes: {\n                    URLSearchParams: n(310).URLSearchParams,\n                    FormData: I,\n                    Blob: \"undefined\" != typeof Blob && Blob || null\n                },\n                protocols: [\n                    \"http\",\n                    \"https\",\n                    \"file\",\n                    \"data\"\n                ]\n            }, ne = function(e) {\n                function a(e, n, i, o) {\n                    let s = e[o++];\n                    const t = Number.isFinite(+s), r = o >= e.length;\n                    return s = !s && P.isArray(i) ? i.length : s, r ? (P.hasOwnProp(i, s) ? i[s] = [\n                        i[s],\n                        n\n                    ] : i[s] = n, !t) : (i[s] && P.isObject(i[s]) || (i[s] = []), a(e, n, i[s], o) && P.isArray(i[s]) && (i[s] = function(e) {\n                        const a = {}, n = Object.keys(e);\n                        let i;\n                        const o = n.length;\n                        let s;\n                        for(i = 0; i < o; i++)s = n[i], a[s] = e[s];\n                        return a;\n                    }(i[s])), !t);\n                }\n                if (P.isFormData(e) && P.isFunction(e.entries)) {\n                    const n = {};\n                    return P.forEachEntry(e, (e, i)=>{\n                        a(function(e) {\n                            return P.matchAll(/\\w+|\\[(\\w*)]/g, e).map((e)=>\"[]\" === e[0] ? \"\" : e[1] || e[0]);\n                        }(e), i, n, 0);\n                    }), n;\n                }\n                return null;\n            }, ie = {\n                \"Content-Type\": void 0\n            }, oe = {\n                transitional: ee,\n                adapter: [\n                    \"xhr\",\n                    \"http\"\n                ],\n                transformRequest: [\n                    function(e, a) {\n                        const n = a.getContentType() || \"\", i = n.indexOf(\"application/json\") > -1, o = P.isObject(e);\n                        if (o && P.isHTMLForm(e) && (e = new FormData(e)), P.isFormData(e)) return i && i ? JSON.stringify(ne(e)) : e;\n                        if (P.isArrayBuffer(e) || P.isBuffer(e) || P.isStream(e) || P.isFile(e) || P.isBlob(e)) return e;\n                        if (P.isArrayBufferView(e)) return e.buffer;\n                        if (P.isURLSearchParams(e)) return a.setContentType(\"application/x-www-form-urlencoded;charset=utf-8\", !1), e.toString();\n                        let s;\n                        if (o) {\n                            if (n.indexOf(\"application/x-www-form-urlencoded\") > -1) return (function(e, a) {\n                                return K(e, new ae.classes.URLSearchParams, Object.assign({\n                                    visitor: function(e, a, n, i) {\n                                        return ae.isNode && P.isBuffer(e) ? (this.append(a, e.toString(\"base64\")), !1) : i.defaultVisitor.apply(this, arguments);\n                                    }\n                                }, a));\n                            })(e, this.formSerializer).toString();\n                            if ((s = P.isFileList(e)) || n.indexOf(\"multipart/form-data\") > -1) {\n                                const a = this.env && this.env.FormData;\n                                return K(s ? {\n                                    \"files[]\": e\n                                } : e, a && new a, this.formSerializer);\n                            }\n                        }\n                        return o || i ? (a.setContentType(\"application/json\", !1), function(e, a, n) {\n                            if (P.isString(e)) try {\n                                return (0, JSON.parse)(e), P.trim(e);\n                            } catch (e) {\n                                if (\"SyntaxError\" !== e.name) throw e;\n                            }\n                            return (0, JSON.stringify)(e);\n                        }(e)) : e;\n                    }\n                ],\n                transformResponse: [\n                    function(e) {\n                        const a = this.transitional || oe.transitional, n = a && a.forcedJSONParsing, i = \"json\" === this.responseType;\n                        if (e && P.isString(e) && (n && !this.responseType || i)) {\n                            const n = !(a && a.silentJSONParsing) && i;\n                            try {\n                                return JSON.parse(e);\n                            } catch (e) {\n                                if (n) {\n                                    if (\"SyntaxError\" === e.name) throw D.from(e, D.ERR_BAD_RESPONSE, this, null, this.response);\n                                    throw e;\n                                }\n                            }\n                        }\n                        return e;\n                    }\n                ],\n                timeout: 0,\n                xsrfCookieName: \"XSRF-TOKEN\",\n                xsrfHeaderName: \"X-XSRF-TOKEN\",\n                maxContentLength: -1,\n                maxBodyLength: -1,\n                env: {\n                    FormData: ae.classes.FormData,\n                    Blob: ae.classes.Blob\n                },\n                validateStatus: function(e) {\n                    return e >= 200 && e < 300;\n                },\n                headers: {\n                    common: {\n                        Accept: \"application/json, text/plain, */*\"\n                    }\n                }\n            };\n            P.forEach([\n                \"delete\",\n                \"get\",\n                \"head\"\n            ], function(e) {\n                oe.headers[e] = {};\n            }), P.forEach([\n                \"post\",\n                \"put\",\n                \"patch\"\n            ], function(e) {\n                oe.headers[e] = P.merge(ie);\n            });\n            const se = oe, te = P.toObjectSet([\n                \"age\",\n                \"authorization\",\n                \"content-length\",\n                \"content-type\",\n                \"etag\",\n                \"expires\",\n                \"from\",\n                \"host\",\n                \"if-modified-since\",\n                \"if-unmodified-since\",\n                \"last-modified\",\n                \"location\",\n                \"max-forwards\",\n                \"proxy-authorization\",\n                \"referer\",\n                \"retry-after\",\n                \"user-agent\"\n            ]), re = Symbol(\"internals\");\n            function ce(e) {\n                return e && String(e).trim().toLowerCase();\n            }\n            function pe(e) {\n                return !1 === e || null == e ? e : P.isArray(e) ? e.map(pe) : String(e);\n            }\n            function le(e, a, n, i, o) {\n                return P.isFunction(i) ? i.call(this, a, n) : (o && (a = n), P.isString(a) ? P.isString(i) ? -1 !== a.indexOf(i) : P.isRegExp(i) ? i.test(a) : void 0 : void 0);\n            }\n            class ue {\n                constructor(e){\n                    e && this.set(e);\n                }\n                set(e, a, n) {\n                    const i = this;\n                    function o(e, a, n) {\n                        const o = ce(a);\n                        if (!o) throw new Error(\"header name must be a non-empty string\");\n                        const s = P.findKey(i, o);\n                        (!s || void 0 === i[s] || !0 === n || void 0 === n && !1 !== i[s]) && (i[s || a] = pe(e));\n                    }\n                    const s = (e, a)=>P.forEach(e, (e, n)=>o(e, n, a));\n                    return P.isPlainObject(e) || e instanceof this.constructor ? s(e, a) : P.isString(e) && (e = e.trim()) && !/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim()) ? s(((e)=>{\n                        const a = {};\n                        let n, i, o;\n                        return e && e.split(\"\\n\").forEach(function(e) {\n                            o = e.indexOf(\":\"), n = e.substring(0, o).trim().toLowerCase(), i = e.substring(o + 1).trim(), !n || a[n] && te[n] || (\"set-cookie\" === n ? a[n] ? a[n].push(i) : a[n] = [\n                                i\n                            ] : a[n] = a[n] ? a[n] + \", \" + i : i);\n                        }), a;\n                    })(e), a) : null != e && o(a, e, n), this;\n                }\n                get(e, a) {\n                    if (e = ce(e)) {\n                        const n = P.findKey(this, e);\n                        if (n) {\n                            const e = this[n];\n                            if (!a) return e;\n                            if (!0 === a) return function(e) {\n                                const a = Object.create(null), n = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n                                let i;\n                                for(; i = n.exec(e);)a[i[1]] = i[2];\n                                return a;\n                            }(e);\n                            if (P.isFunction(a)) return a.call(this, e, n);\n                            if (P.isRegExp(a)) return a.exec(e);\n                            throw new TypeError(\"parser must be boolean|regexp|function\");\n                        }\n                    }\n                }\n                has(e, a) {\n                    if (e = ce(e)) {\n                        const n = P.findKey(this, e);\n                        return !(!n || void 0 === this[n] || a && !le(0, this[n], n, a));\n                    }\n                    return !1;\n                }\n                delete(e, a) {\n                    const n = this;\n                    let i = !1;\n                    function o(e) {\n                        if (e = ce(e)) {\n                            const o = P.findKey(n, e);\n                            !o || a && !le(0, n[o], o, a) || (delete n[o], i = !0);\n                        }\n                    }\n                    return P.isArray(e) ? e.forEach(o) : o(e), i;\n                }\n                clear(e) {\n                    const a = Object.keys(this);\n                    let n = a.length, i = !1;\n                    for(; n--;){\n                        const o = a[n];\n                        e && !le(0, this[o], o, e, !0) || (delete this[o], i = !0);\n                    }\n                    return i;\n                }\n                normalize(e) {\n                    const a = this, n = {};\n                    return P.forEach(this, (i, o)=>{\n                        const s = P.findKey(n, o);\n                        if (s) return a[s] = pe(i), void delete a[o];\n                        const t = e ? function(e) {\n                            return e.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g, (e, a, n)=>a.toUpperCase() + n);\n                        }(o) : String(o).trim();\n                        t !== o && delete a[o], a[t] = pe(i), n[t] = !0;\n                    }), this;\n                }\n                concat(...e) {\n                    return this.constructor.concat(this, ...e);\n                }\n                toJSON(e) {\n                    const a = Object.create(null);\n                    return P.forEach(this, (n, i)=>{\n                        null != n && !1 !== n && (a[i] = e && P.isArray(n) ? n.join(\", \") : n);\n                    }), a;\n                }\n                [Symbol.iterator]() {\n                    return Object.entries(this.toJSON())[Symbol.iterator]();\n                }\n                toString() {\n                    return Object.entries(this.toJSON()).map(([e, a])=>e + \": \" + a).join(\"\\n\");\n                }\n                get [Symbol.toStringTag]() {\n                    return \"AxiosHeaders\";\n                }\n                static from(e) {\n                    return e instanceof this ? e : new this(e);\n                }\n                static concat(e, ...a) {\n                    const n = new this(e);\n                    return a.forEach((e)=>n.set(e)), n;\n                }\n                static accessor(e) {\n                    const a = (this[re] = this[re] = {\n                        accessors: {}\n                    }).accessors, n = this.prototype;\n                    function i(e) {\n                        const i = ce(e);\n                        a[i] || (function(e, a) {\n                            const n = P.toCamelCase(\" \" + a);\n                            [\n                                \"get\",\n                                \"set\",\n                                \"has\"\n                            ].forEach((i)=>{\n                                Object.defineProperty(e, i + n, {\n                                    value: function(e, n, o) {\n                                        return this[i].call(this, a, e, n, o);\n                                    },\n                                    configurable: !0\n                                });\n                            });\n                        }(n, e), a[i] = !0);\n                    }\n                    return P.isArray(e) ? e.forEach(i) : i(e), this;\n                }\n            }\n            ue.accessor([\n                \"Content-Type\",\n                \"Content-Length\",\n                \"Accept\",\n                \"Accept-Encoding\",\n                \"User-Agent\",\n                \"Authorization\"\n            ]), P.freezeMethods(ue.prototype), P.freezeMethods(ue);\n            const de = ue;\n            function me(e, a) {\n                const n = this || se, i = a || n, o = de.from(i.headers);\n                let s = i.data;\n                return P.forEach(e, function(e) {\n                    s = e.call(n, s, o.normalize(), a ? a.status : void 0);\n                }), o.normalize(), s;\n            }\n            function fe(e) {\n                return !(!e || !e.__CANCEL__);\n            }\n            function xe(e, a, n) {\n                D.call(this, null == e ? \"canceled\" : e, D.ERR_CANCELED, a, n), this.name = \"CanceledError\";\n            }\n            P.inherits(xe, D, {\n                __CANCEL__: !0\n            });\n            const ve = xe;\n            function he(e, a, n) {\n                const i = n.config.validateStatus;\n                n.status && i && !i(n.status) ? a(new D(\"Request failed with status code \" + n.status, [\n                    D.ERR_BAD_REQUEST,\n                    D.ERR_BAD_RESPONSE\n                ][Math.floor(n.status / 100) - 4], n.config, n.request, n)) : e(n);\n            }\n            function be(e, a) {\n                return e && !/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(a) ? function(e, a) {\n                    return a ? e.replace(/\\/+$/, \"\") + \"/\" + a.replace(/^\\/+/, \"\") : e;\n                }(e, a) : a;\n            }\n            var ge = n(104), ye = n(685), we = n(687), ke = n(837), je = n(95);\n            const _e = __webpack_require__(/*! zlib */ \"zlib\"), Ee = \"1.4.0\";\n            function Oe(e) {\n                const a = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(e);\n                return a && a[1] || \"\";\n            }\n            const Re = /^(?:([^;]+);)?(?:[^;]+;)?(base64|),([\\s\\S]*)$/;\n            var Se = n(781);\n            const Ce = function(e, a) {\n                e = e || 10;\n                const n = new Array(e), i = new Array(e);\n                let o, s = 0, t = 0;\n                return a = void 0 !== a ? a : 1e3, function(r) {\n                    const c = Date.now(), p = i[t];\n                    o || (o = c), n[s] = r, i[s] = c;\n                    let l = t, u = 0;\n                    for(; l !== s;)u += n[l++], l %= e;\n                    if (s = (s + 1) % e, s === t && (t = (t + 1) % e), c - o < a) return;\n                    const d = p && c - p;\n                    return d ? Math.round(1e3 * u / d) : void 0;\n                };\n            }, Te = Symbol(\"internals\");\n            class Le extends Se.Transform {\n                constructor(e){\n                    super({\n                        readableHighWaterMark: (e = P.toFlatObject(e, {\n                            maxRate: 0,\n                            chunkSize: 65536,\n                            minChunkSize: 100,\n                            timeWindow: 500,\n                            ticksRate: 2,\n                            samplesCount: 15\n                        }, null, (e, a)=>!P.isUndefined(a[e]))).chunkSize\n                    });\n                    const a = this, n = this[Te] = {\n                        length: e.length,\n                        timeWindow: e.timeWindow,\n                        ticksRate: e.ticksRate,\n                        chunkSize: e.chunkSize,\n                        maxRate: e.maxRate,\n                        minChunkSize: e.minChunkSize,\n                        bytesSeen: 0,\n                        isCaptured: !1,\n                        notifiedBytesLoaded: 0,\n                        ts: Date.now(),\n                        bytes: 0,\n                        onReadCallback: null\n                    }, i = Ce(n.ticksRate * e.samplesCount, n.timeWindow);\n                    this.on(\"newListener\", (e)=>{\n                        \"progress\" === e && (n.isCaptured || (n.isCaptured = !0));\n                    });\n                    let o = 0;\n                    n.updateProgress = function(e, a) {\n                        let n = 0;\n                        const i = 1e3 / a;\n                        let o = null;\n                        return function(a, s) {\n                            const t = Date.now();\n                            if (a || t - n > i) return o && (clearTimeout(o), o = null), n = t, e.apply(null, s);\n                            o || (o = setTimeout(()=>(o = null, n = Date.now(), e.apply(null, s)), i - (t - n)));\n                        };\n                    }(function() {\n                        const e = n.length, s = n.bytesSeen, t = s - o;\n                        if (!t || a.destroyed) return;\n                        const r = i(t);\n                        o = s, process.nextTick(()=>{\n                            a.emit(\"progress\", {\n                                loaded: s,\n                                total: e,\n                                progress: e ? s / e : void 0,\n                                bytes: t,\n                                rate: r || void 0,\n                                estimated: r && e && s <= e ? (e - s) / r : void 0\n                            });\n                        });\n                    }, n.ticksRate);\n                    const s = ()=>{\n                        n.updateProgress(!0);\n                    };\n                    this.once(\"end\", s), this.once(\"error\", s);\n                }\n                _read(e) {\n                    const a = this[Te];\n                    return a.onReadCallback && a.onReadCallback(), super._read(e);\n                }\n                _transform(e, a, n) {\n                    const i = this, o = this[Te], s = o.maxRate, t = this.readableHighWaterMark, r = o.timeWindow, c = s / (1e3 / r), p = !1 !== o.minChunkSize ? Math.max(o.minChunkSize, .01 * c) : 0, l = (e, a)=>{\n                        const n = Buffer.byteLength(e);\n                        let l, u = null, d = t, m = 0;\n                        if (s) {\n                            const e = Date.now();\n                            (!o.ts || (m = e - o.ts) >= r) && (o.ts = e, l = c - o.bytes, o.bytes = l < 0 ? -l : 0, m = 0), l = c - o.bytes;\n                        }\n                        if (s) {\n                            if (l <= 0) return setTimeout(()=>{\n                                a(null, e);\n                            }, r - m);\n                            l < d && (d = l);\n                        }\n                        d && n > d && n - d > p && (u = e.subarray(d), e = e.subarray(0, d)), function(e, a) {\n                            const n = Buffer.byteLength(e);\n                            o.bytesSeen += n, o.bytes += n, o.isCaptured && o.updateProgress(), i.push(e) ? process.nextTick(a) : o.onReadCallback = ()=>{\n                                o.onReadCallback = null, process.nextTick(a);\n                            };\n                        }(e, u ? ()=>{\n                            process.nextTick(a, null, u);\n                        } : a);\n                    };\n                    l(e, function e(a, i) {\n                        if (a) return n(a);\n                        i ? l(i, e) : n(null);\n                    });\n                }\n                setLength(e) {\n                    return this[Te].length = +e, this;\n                }\n            }\n            const Ae = Le, ze = __webpack_require__(/*! events */ \"events\"), { asyncIterator: Fe } = Symbol, Ue = async function*(e) {\n                e.stream ? yield* e.stream() : e.arrayBuffer ? yield await e.arrayBuffer() : e[Fe] ? yield* e[Fe]() : yield e;\n            }, Pe = P.ALPHABET.ALPHA_DIGIT + \"-_\", qe = new ke.TextEncoder, Be = \"\\r\\n\", Ne = qe.encode(Be);\n            class De {\n                constructor(e, a){\n                    const { escapeName: n } = this.constructor, i = P.isString(a);\n                    let o = `Content-Disposition: form-data; name=\"${n(e)}\"${!i && a.name ? `; filename=\"${n(a.name)}\"` : \"\"}${Be}`;\n                    i ? a = qe.encode(String(a).replace(/\\r?\\n|\\r\\n?/g, Be)) : o += `Content-Type: ${a.type || \"application/octet-stream\"}${Be}`, this.headers = qe.encode(o + Be), this.contentLength = i ? a.byteLength : a.size, this.size = this.headers.byteLength + this.contentLength + 2, this.name = e, this.value = a;\n                }\n                async *encode() {\n                    yield this.headers;\n                    const { value: e } = this;\n                    P.isTypedArray(e) ? yield e : yield* Ue(e), yield Ne;\n                }\n                static escapeName(e) {\n                    return String(e).replace(/[\\r\\n\"]/g, (e)=>({\n                            \"\\r\": \"%0D\",\n                            \"\\n\": \"%0A\",\n                            '\"': \"%22\"\n                        })[e]);\n                }\n            }\n            class Ie extends Se.Transform {\n                __transform(e, a, n) {\n                    this.push(e), n();\n                }\n                _transform(e, a, n) {\n                    if (0 !== e.length && (this._transform = this.__transform, 120 !== e[0])) {\n                        const e = Buffer.alloc(2);\n                        e[0] = 120, e[1] = 156, this.push(e, a);\n                    }\n                    this.__transform(e, a, n);\n                }\n            }\n            const Me = Ie, He = (e, a)=>P.isAsyncFn(e) ? function(...n) {\n                    const i = n.pop();\n                    e.apply(this, n).then((e)=>{\n                        try {\n                            a ? i(null, ...a(e)) : i(null, e);\n                        } catch (e) {\n                            i(e);\n                        }\n                    }, i);\n                } : e, $e = {\n                flush: _e.constants.Z_SYNC_FLUSH,\n                finishFlush: _e.constants.Z_SYNC_FLUSH\n            }, We = {\n                flush: _e.constants.BROTLI_OPERATION_FLUSH,\n                finishFlush: _e.constants.BROTLI_OPERATION_FLUSH\n            }, Ke = P.isFunction(_e.createBrotliDecompress), { http: Ge, https: Ve } = je, Je = /https:?/, Ye = ae.protocols.map((e)=>e + \":\");\n            function Qe(e) {\n                e.beforeRedirects.proxy && e.beforeRedirects.proxy(e), e.beforeRedirects.config && e.beforeRedirects.config(e);\n            }\n            function Xe(e, a, n) {\n                let i = a;\n                if (!i && !1 !== i) {\n                    const e = (0, ge.j)(n);\n                    e && (i = new URL(e));\n                }\n                if (i) {\n                    if (i.username && (i.auth = (i.username || \"\") + \":\" + (i.password || \"\")), i.auth) {\n                        (i.auth.username || i.auth.password) && (i.auth = (i.auth.username || \"\") + \":\" + (i.auth.password || \"\"));\n                        const a = Buffer.from(i.auth, \"utf8\").toString(\"base64\");\n                        e.headers[\"Proxy-Authorization\"] = \"Basic \" + a;\n                    }\n                    e.headers.host = e.hostname + (e.port ? \":\" + e.port : \"\");\n                    const a = i.hostname || i.host;\n                    e.hostname = a, e.host = a, e.port = i.port, e.path = n, i.protocol && (e.protocol = i.protocol.includes(\":\") ? i.protocol : `${i.protocol}:`);\n                }\n                e.beforeRedirects.proxy = function(e) {\n                    Xe(e, a, e.href);\n                };\n            }\n            const Ze = \"undefined\" != typeof process && \"process\" === P.kindOf(process) && function(e) {\n                return a = async function(a, n, i) {\n                    let { data: o, lookup: s, family: t } = e;\n                    const { responseType: r, responseEncoding: c } = e, p = e.method.toUpperCase();\n                    let l, u, d = !1;\n                    s && P.isAsyncFn(s) && (s = He(s, (e)=>{\n                        if (P.isString(e)) e = [\n                            e,\n                            e.indexOf(\".\") < 0 ? 6 : 4\n                        ];\n                        else if (!P.isArray(e)) throw new TypeError(\"lookup async function must return an array [ip: string, family: number]]\");\n                        return e;\n                    }));\n                    const m = new ze, f = ()=>{\n                        e.cancelToken && e.cancelToken.unsubscribe(x), e.signal && e.signal.removeEventListener(\"abort\", x), m.removeAllListeners();\n                    };\n                    function x(a) {\n                        m.emit(\"abort\", !a || a.type ? new ve(null, e, u) : a);\n                    }\n                    i((e, a)=>{\n                        l = !0, a && (d = !0, f());\n                    }), m.once(\"abort\", n), (e.cancelToken || e.signal) && (e.cancelToken && e.cancelToken.subscribe(x), e.signal && (e.signal.aborted ? x() : e.signal.addEventListener(\"abort\", x)));\n                    const v = be(e.baseURL, e.url), h = new URL(v, \"http://localhost\"), b = h.protocol || Ye[0];\n                    if (\"data:\" === b) {\n                        let i;\n                        if (\"GET\" !== p) return he(a, n, {\n                            status: 405,\n                            statusText: \"method not allowed\",\n                            headers: {},\n                            config: e\n                        });\n                        try {\n                            i = function(e, a, n) {\n                                const i = n && n.Blob || ae.classes.Blob, o = Oe(e);\n                                if (void 0 === a && i && (a = !0), \"data\" === o) {\n                                    e = o.length ? e.slice(o.length + 1) : e;\n                                    const n = Re.exec(e);\n                                    if (!n) throw new D(\"Invalid URL\", D.ERR_INVALID_URL);\n                                    const s = n[1], t = n[2], r = n[3], c = Buffer.from(decodeURIComponent(r), t ? \"base64\" : \"utf8\");\n                                    if (a) {\n                                        if (!i) throw new D(\"Blob is not supported\", D.ERR_NOT_SUPPORT);\n                                        return new i([\n                                            c\n                                        ], {\n                                            type: s\n                                        });\n                                    }\n                                    return c;\n                                }\n                                throw new D(\"Unsupported protocol \" + o, D.ERR_NOT_SUPPORT);\n                            }(e.url, \"blob\" === r, {\n                                Blob: e.env && e.env.Blob\n                            });\n                        } catch (a) {\n                            throw D.from(a, D.ERR_BAD_REQUEST, e);\n                        }\n                        return \"text\" === r ? (i = i.toString(c), c && \"utf8\" !== c || (i = P.stripBOM(i))) : \"stream\" === r && (i = Se.Readable.from(i)), he(a, n, {\n                            data: i,\n                            status: 200,\n                            statusText: \"OK\",\n                            headers: new de,\n                            config: e\n                        });\n                    }\n                    if (-1 === Ye.indexOf(b)) return n(new D(\"Unsupported protocol \" + b, D.ERR_BAD_REQUEST, e));\n                    const g = de.from(e.headers).normalize();\n                    g.set(\"User-Agent\", \"axios/\" + Ee, !1);\n                    const y = e.onDownloadProgress, w = e.onUploadProgress, k = e.maxRate;\n                    let j, _;\n                    if (P.isSpecCompliantForm(o)) {\n                        const e = g.getContentType(/boundary=([-_\\w\\d]{10,70})/i);\n                        o = ((e, a, n)=>{\n                            const { tag: i = \"form-data-boundary\", size: o = 25, boundary: s = i + \"-\" + P.generateString(o, Pe) } = n || {};\n                            if (!P.isFormData(e)) throw TypeError(\"FormData instance required\");\n                            if (s.length < 1 || s.length > 70) throw Error(\"boundary must be 10-70 characters long\");\n                            const t = qe.encode(\"--\" + s + Be), r = qe.encode(\"--\" + s + \"--\" + Be + Be);\n                            let c = r.byteLength;\n                            const p = Array.from(e.entries()).map(([e, a])=>{\n                                const n = new De(e, a);\n                                return c += n.size, n;\n                            });\n                            c += t.byteLength * p.length, c = P.toFiniteNumber(c);\n                            const l = {\n                                \"Content-Type\": `multipart/form-data; boundary=${s}`\n                            };\n                            return Number.isFinite(c) && (l[\"Content-Length\"] = c), a && a(l), Se.Readable.from(async function*() {\n                                for (const e of p)yield t, yield* e.encode();\n                                yield r;\n                            }());\n                        })(o, (e)=>{\n                            g.set(e);\n                        }, {\n                            tag: `axios-${Ee}-boundary`,\n                            boundary: e && e[1] || void 0\n                        });\n                    } else if (P.isFormData(o) && P.isFunction(o.getHeaders)) {\n                        if (g.set(o.getHeaders()), !g.hasContentLength()) try {\n                            const e = await ke.promisify(o.getLength).call(o);\n                            Number.isFinite(e) && e >= 0 && g.setContentLength(e);\n                        } catch (e) {}\n                    } else if (P.isBlob(o)) o.size && g.setContentType(o.type || \"application/octet-stream\"), g.setContentLength(o.size || 0), o = Se.Readable.from(Ue(o));\n                    else if (o && !P.isStream(o)) {\n                        if (Buffer.isBuffer(o)) ;\n                        else if (P.isArrayBuffer(o)) o = Buffer.from(new Uint8Array(o));\n                        else {\n                            if (!P.isString(o)) return n(new D(\"Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream\", D.ERR_BAD_REQUEST, e));\n                            o = Buffer.from(o, \"utf-8\");\n                        }\n                        if (g.setContentLength(o.length, !1), e.maxBodyLength > -1 && o.length > e.maxBodyLength) return n(new D(\"Request body larger than maxBodyLength limit\", D.ERR_BAD_REQUEST, e));\n                    }\n                    const E = P.toFiniteNumber(g.getContentLength());\n                    let O, R;\n                    P.isArray(k) ? (j = k[0], _ = k[1]) : j = _ = k, o && (w || j) && (P.isStream(o) || (o = Se.Readable.from(o, {\n                        objectMode: !1\n                    })), o = Se.pipeline([\n                        o,\n                        new Ae({\n                            length: E,\n                            maxRate: P.toFiniteNumber(j)\n                        })\n                    ], P.noop), w && o.on(\"progress\", (e)=>{\n                        w(Object.assign(e, {\n                            upload: !0\n                        }));\n                    })), e.auth && (O = (e.auth.username || \"\") + \":\" + (e.auth.password || \"\")), !O && h.username && (O = h.username + \":\" + h.password), O && g.delete(\"authorization\");\n                    try {\n                        R = X(h.pathname + h.search, e.params, e.paramsSerializer).replace(/^\\?/, \"\");\n                    } catch (a) {\n                        const i = new Error(a.message);\n                        return i.config = e, i.url = e.url, i.exists = !0, n(i);\n                    }\n                    g.set(\"Accept-Encoding\", \"gzip, compress, deflate\" + (Ke ? \", br\" : \"\"), !1);\n                    const S = {\n                        path: R,\n                        method: p,\n                        headers: g.toJSON(),\n                        agents: {\n                            http: e.httpAgent,\n                            https: e.httpsAgent\n                        },\n                        auth: O,\n                        protocol: b,\n                        family: t,\n                        lookup: s,\n                        beforeRedirect: Qe,\n                        beforeRedirects: {}\n                    };\n                    let C;\n                    e.socketPath ? S.socketPath = e.socketPath : (S.hostname = h.hostname, S.port = h.port, Xe(S, e.proxy, b + \"//\" + h.hostname + (h.port ? \":\" + h.port : \"\") + S.path));\n                    const T = Je.test(S.protocol);\n                    if (S.agent = T ? e.httpsAgent : e.httpAgent, e.transport ? C = e.transport : 0 === e.maxRedirects ? C = T ? we : ye : (e.maxRedirects && (S.maxRedirects = e.maxRedirects), e.beforeRedirect && (S.beforeRedirects.config = e.beforeRedirect), C = T ? Ve : Ge), e.maxBodyLength > -1 ? S.maxBodyLength = e.maxBodyLength : S.maxBodyLength = 1 / 0, e.insecureHTTPParser && (S.insecureHTTPParser = e.insecureHTTPParser), u = C.request(S, function(i) {\n                        if (u.destroyed) return;\n                        const o = [\n                            i\n                        ], s = +i.headers[\"content-length\"];\n                        if (y) {\n                            const e = new Ae({\n                                length: P.toFiniteNumber(s),\n                                maxRate: P.toFiniteNumber(_)\n                            });\n                            y && e.on(\"progress\", (e)=>{\n                                y(Object.assign(e, {\n                                    download: !0\n                                }));\n                            }), o.push(e);\n                        }\n                        let t = i;\n                        const l = i.req || u;\n                        if (!1 !== e.decompress && i.headers[\"content-encoding\"]) switch(\"HEAD\" !== p && 204 !== i.statusCode || delete i.headers[\"content-encoding\"], i.headers[\"content-encoding\"]){\n                            case \"gzip\":\n                            case \"x-gzip\":\n                            case \"compress\":\n                            case \"x-compress\":\n                                o.push(_e.createUnzip($e)), delete i.headers[\"content-encoding\"];\n                                break;\n                            case \"deflate\":\n                                o.push(new Me), o.push(_e.createUnzip($e)), delete i.headers[\"content-encoding\"];\n                                break;\n                            case \"br\":\n                                Ke && (o.push(_e.createBrotliDecompress(We)), delete i.headers[\"content-encoding\"]);\n                        }\n                        t = o.length > 1 ? Se.pipeline(o, P.noop) : o[0];\n                        const x = Se.finished(t, ()=>{\n                            x(), f();\n                        }), v = {\n                            status: i.statusCode,\n                            statusText: i.statusMessage,\n                            headers: new de(i.headers),\n                            config: e,\n                            request: l\n                        };\n                        if (\"stream\" === r) v.data = t, he(a, n, v);\n                        else {\n                            const i = [];\n                            let o = 0;\n                            t.on(\"data\", function(a) {\n                                i.push(a), o += a.length, e.maxContentLength > -1 && o > e.maxContentLength && (d = !0, t.destroy(), n(new D(\"maxContentLength size of \" + e.maxContentLength + \" exceeded\", D.ERR_BAD_RESPONSE, e, l)));\n                            }), t.on(\"aborted\", function() {\n                                if (d) return;\n                                const a = new D(\"maxContentLength size of \" + e.maxContentLength + \" exceeded\", D.ERR_BAD_RESPONSE, e, l);\n                                t.destroy(a), n(a);\n                            }), t.on(\"error\", function(a) {\n                                u.destroyed || n(D.from(a, null, e, l));\n                            }), t.on(\"end\", function() {\n                                try {\n                                    let e = 1 === i.length ? i[0] : Buffer.concat(i);\n                                    \"arraybuffer\" !== r && (e = e.toString(c), c && \"utf8\" !== c || (e = P.stripBOM(e))), v.data = e;\n                                } catch (a) {\n                                    n(D.from(a, null, e, v.request, v));\n                                }\n                                he(a, n, v);\n                            });\n                        }\n                        m.once(\"abort\", (e)=>{\n                            t.destroyed || (t.emit(\"error\", e), t.destroy());\n                        });\n                    }), m.once(\"abort\", (e)=>{\n                        n(e), u.destroy(e);\n                    }), u.on(\"error\", function(a) {\n                        n(D.from(a, null, e, u));\n                    }), u.on(\"socket\", function(e) {\n                        e.setKeepAlive(!0, 6e4);\n                    }), e.timeout) {\n                        const a = parseInt(e.timeout, 10);\n                        if (isNaN(a)) return void n(new D(\"error trying to parse `config.timeout` to int\", D.ERR_BAD_OPTION_VALUE, e, u));\n                        u.setTimeout(a, function() {\n                            if (l) return;\n                            let a = e.timeout ? \"timeout of \" + e.timeout + \"ms exceeded\" : \"timeout exceeded\";\n                            const i = e.transitional || ee;\n                            e.timeoutErrorMessage && (a = e.timeoutErrorMessage), n(new D(a, i.clarifyTimeoutError ? D.ETIMEDOUT : D.ECONNABORTED, e, u)), x();\n                        });\n                    }\n                    if (P.isStream(o)) {\n                        let a = !1, n = !1;\n                        o.on(\"end\", ()=>{\n                            a = !0;\n                        }), o.once(\"error\", (e)=>{\n                            n = !0, u.destroy(e);\n                        }), o.on(\"close\", ()=>{\n                            a || n || x(new ve(\"Request stream has been aborted\", e, u));\n                        }), o.pipe(u);\n                    } else u.end(o);\n                }, new Promise((e, n)=>{\n                    let i, o;\n                    const s = (e, a)=>{\n                        o || (o = !0, i && i(e, a));\n                    }, t = (e)=>{\n                        s(e, !0), n(e);\n                    };\n                    a((a)=>{\n                        s(a), e(a);\n                    }, t, (e)=>i = e).catch(t);\n                });\n                var a;\n            }, ea = ae.isStandardBrowserEnv ? {\n                write: function(e, a, n, i, o, s) {\n                    const t = [];\n                    t.push(e + \"=\" + encodeURIComponent(a)), P.isNumber(n) && t.push(\"expires=\" + new Date(n).toGMTString()), P.isString(i) && t.push(\"path=\" + i), P.isString(o) && t.push(\"domain=\" + o), !0 === s && t.push(\"secure\"), document.cookie = t.join(\"; \");\n                },\n                read: function(e) {\n                    const a = document.cookie.match(new RegExp(\"(^|;\\\\s*)(\" + e + \")=([^;]*)\"));\n                    return a ? decodeURIComponent(a[3]) : null;\n                },\n                remove: function(e) {\n                    this.write(e, \"\", Date.now() - 864e5);\n                }\n            } : {\n                write: function() {},\n                read: function() {\n                    return null;\n                },\n                remove: function() {}\n            }, aa = ae.isStandardBrowserEnv ? function() {\n                const e = /(msie|trident)/i.test(navigator.userAgent), a = document.createElement(\"a\");\n                let n;\n                function i(n) {\n                    let i = n;\n                    return e && (a.setAttribute(\"href\", i), i = a.href), a.setAttribute(\"href\", i), {\n                        href: a.href,\n                        protocol: a.protocol ? a.protocol.replace(/:$/, \"\") : \"\",\n                        host: a.host,\n                        search: a.search ? a.search.replace(/^\\?/, \"\") : \"\",\n                        hash: a.hash ? a.hash.replace(/^#/, \"\") : \"\",\n                        hostname: a.hostname,\n                        port: a.port,\n                        pathname: \"/\" === a.pathname.charAt(0) ? a.pathname : \"/\" + a.pathname\n                    };\n                }\n                return n = i(window.location.href), function(e) {\n                    const a = P.isString(e) ? i(e) : e;\n                    return a.protocol === n.protocol && a.host === n.host;\n                };\n            }() : function() {\n                return !0;\n            };\n            function na(e, a) {\n                let n = 0;\n                const i = Ce(50, 250);\n                return (o)=>{\n                    const s = o.loaded, t = o.lengthComputable ? o.total : void 0, r = s - n, c = i(r);\n                    n = s;\n                    const p = {\n                        loaded: s,\n                        total: t,\n                        progress: t ? s / t : void 0,\n                        bytes: r,\n                        rate: c || void 0,\n                        estimated: c && t && s <= t ? (t - s) / c : void 0,\n                        event: o\n                    };\n                    p[a ? \"download\" : \"upload\"] = !0, e(p);\n                };\n            }\n            const ia = {\n                http: Ze,\n                xhr: \"undefined\" != typeof XMLHttpRequest && function(e) {\n                    return new Promise(function(a, n) {\n                        let i = e.data;\n                        const o = de.from(e.headers).normalize(), s = e.responseType;\n                        let t;\n                        function r() {\n                            e.cancelToken && e.cancelToken.unsubscribe(t), e.signal && e.signal.removeEventListener(\"abort\", t);\n                        }\n                        P.isFormData(i) && (ae.isStandardBrowserEnv || ae.isStandardBrowserWebWorkerEnv ? o.setContentType(!1) : o.setContentType(\"multipart/form-data;\", !1));\n                        let c = new XMLHttpRequest;\n                        if (e.auth) {\n                            const a = e.auth.username || \"\", n = e.auth.password ? unescape(encodeURIComponent(e.auth.password)) : \"\";\n                            o.set(\"Authorization\", \"Basic \" + btoa(a + \":\" + n));\n                        }\n                        const p = be(e.baseURL, e.url);\n                        function l() {\n                            if (!c) return;\n                            const i = de.from(\"getAllResponseHeaders\" in c && c.getAllResponseHeaders());\n                            he(function(e) {\n                                a(e), r();\n                            }, function(e) {\n                                n(e), r();\n                            }, {\n                                data: s && \"text\" !== s && \"json\" !== s ? c.response : c.responseText,\n                                status: c.status,\n                                statusText: c.statusText,\n                                headers: i,\n                                config: e,\n                                request: c\n                            }), c = null;\n                        }\n                        if (c.open(e.method.toUpperCase(), X(p, e.params, e.paramsSerializer), !0), c.timeout = e.timeout, \"onloadend\" in c ? c.onloadend = l : c.onreadystatechange = function() {\n                            c && 4 === c.readyState && (0 !== c.status || c.responseURL && 0 === c.responseURL.indexOf(\"file:\")) && setTimeout(l);\n                        }, c.onabort = function() {\n                            c && (n(new D(\"Request aborted\", D.ECONNABORTED, e, c)), c = null);\n                        }, c.onerror = function() {\n                            n(new D(\"Network Error\", D.ERR_NETWORK, e, c)), c = null;\n                        }, c.ontimeout = function() {\n                            let a = e.timeout ? \"timeout of \" + e.timeout + \"ms exceeded\" : \"timeout exceeded\";\n                            const i = e.transitional || ee;\n                            e.timeoutErrorMessage && (a = e.timeoutErrorMessage), n(new D(a, i.clarifyTimeoutError ? D.ETIMEDOUT : D.ECONNABORTED, e, c)), c = null;\n                        }, ae.isStandardBrowserEnv) {\n                            const a = (e.withCredentials || aa(p)) && e.xsrfCookieName && ea.read(e.xsrfCookieName);\n                            a && o.set(e.xsrfHeaderName, a);\n                        }\n                        void 0 === i && o.setContentType(null), \"setRequestHeader\" in c && P.forEach(o.toJSON(), function(e, a) {\n                            c.setRequestHeader(a, e);\n                        }), P.isUndefined(e.withCredentials) || (c.withCredentials = !!e.withCredentials), s && \"json\" !== s && (c.responseType = e.responseType), \"function\" == typeof e.onDownloadProgress && c.addEventListener(\"progress\", na(e.onDownloadProgress, !0)), \"function\" == typeof e.onUploadProgress && c.upload && c.upload.addEventListener(\"progress\", na(e.onUploadProgress)), (e.cancelToken || e.signal) && (t = (a)=>{\n                            c && (n(!a || a.type ? new ve(null, e, c) : a), c.abort(), c = null);\n                        }, e.cancelToken && e.cancelToken.subscribe(t), e.signal && (e.signal.aborted ? t() : e.signal.addEventListener(\"abort\", t)));\n                        const u = Oe(p);\n                        u && -1 === ae.protocols.indexOf(u) ? n(new D(\"Unsupported protocol \" + u + \":\", D.ERR_BAD_REQUEST, e)) : c.send(i || null);\n                    });\n                }\n            };\n            P.forEach(ia, (e, a)=>{\n                if (e) {\n                    try {\n                        Object.defineProperty(e, \"name\", {\n                            value: a\n                        });\n                    } catch (e) {}\n                    Object.defineProperty(e, \"adapterName\", {\n                        value: a\n                    });\n                }\n            });\n            function oa(e) {\n                if (e.cancelToken && e.cancelToken.throwIfRequested(), e.signal && e.signal.aborted) throw new ve(null, e);\n            }\n            function sa(e) {\n                return oa(e), e.headers = de.from(e.headers), e.data = me.call(e, e.transformRequest), -1 !== [\n                    \"post\",\n                    \"put\",\n                    \"patch\"\n                ].indexOf(e.method) && e.headers.setContentType(\"application/x-www-form-urlencoded\", !1), ((e)=>{\n                    e = P.isArray(e) ? e : [\n                        e\n                    ];\n                    const { length: a } = e;\n                    let n, i;\n                    for(let o = 0; o < a && (n = e[o], !(i = P.isString(n) ? ia[n.toLowerCase()] : n)); o++);\n                    if (!i) {\n                        if (!1 === i) throw new D(`Adapter ${n} is not supported by the environment`, \"ERR_NOT_SUPPORT\");\n                        throw new Error(P.hasOwnProp(ia, n) ? `Adapter '${n}' is not available in the build` : `Unknown adapter '${n}'`);\n                    }\n                    if (!P.isFunction(i)) throw new TypeError(\"adapter is not a function\");\n                    return i;\n                })(e.adapter || se.adapter)(e).then(function(a) {\n                    return oa(e), a.data = me.call(e, e.transformResponse, a), a.headers = de.from(a.headers), a;\n                }, function(a) {\n                    return fe(a) || (oa(e), a && a.response && (a.response.data = me.call(e, e.transformResponse, a.response), a.response.headers = de.from(a.response.headers))), Promise.reject(a);\n                });\n            }\n            const ta = (e)=>e instanceof de ? e.toJSON() : e;\n            function ra(e, a) {\n                a = a || {};\n                const n = {};\n                function i(e, a, n) {\n                    return P.isPlainObject(e) && P.isPlainObject(a) ? P.merge.call({\n                        caseless: n\n                    }, e, a) : P.isPlainObject(a) ? P.merge({}, a) : P.isArray(a) ? a.slice() : a;\n                }\n                function o(e, a, n) {\n                    return P.isUndefined(a) ? P.isUndefined(e) ? void 0 : i(void 0, e, n) : i(e, a, n);\n                }\n                function s(e, a) {\n                    if (!P.isUndefined(a)) return i(void 0, a);\n                }\n                function t(e, a) {\n                    return P.isUndefined(a) ? P.isUndefined(e) ? void 0 : i(void 0, e) : i(void 0, a);\n                }\n                function r(n, o, s) {\n                    return s in a ? i(n, o) : s in e ? i(void 0, n) : void 0;\n                }\n                const c = {\n                    url: s,\n                    method: s,\n                    data: s,\n                    baseURL: t,\n                    transformRequest: t,\n                    transformResponse: t,\n                    paramsSerializer: t,\n                    timeout: t,\n                    timeoutMessage: t,\n                    withCredentials: t,\n                    adapter: t,\n                    responseType: t,\n                    xsrfCookieName: t,\n                    xsrfHeaderName: t,\n                    onUploadProgress: t,\n                    onDownloadProgress: t,\n                    decompress: t,\n                    maxContentLength: t,\n                    maxBodyLength: t,\n                    beforeRedirect: t,\n                    transport: t,\n                    httpAgent: t,\n                    httpsAgent: t,\n                    cancelToken: t,\n                    socketPath: t,\n                    responseEncoding: t,\n                    validateStatus: r,\n                    headers: (e, a)=>o(ta(e), ta(a), !0)\n                };\n                return P.forEach(Object.keys(Object.assign({}, e, a)), function(i) {\n                    const s = c[i] || o, t = s(e[i], a[i], i);\n                    P.isUndefined(t) && s !== r || (n[i] = t);\n                }), n;\n            }\n            const ca = {};\n            [\n                \"object\",\n                \"boolean\",\n                \"number\",\n                \"function\",\n                \"string\",\n                \"symbol\"\n            ].forEach((e, a)=>{\n                ca[e] = function(n) {\n                    return typeof n === e || \"a\" + (a < 1 ? \"n \" : \" \") + e;\n                };\n            });\n            const pa = {};\n            ca.transitional = function(e, a, n) {\n                function i(e, a) {\n                    return \"[Axios v1.4.0] Transitional option '\" + e + \"'\" + a + (n ? \". \" + n : \"\");\n                }\n                return (n, o, s)=>{\n                    if (!1 === e) throw new D(i(o, \" has been removed\" + (a ? \" in \" + a : \"\")), D.ERR_DEPRECATED);\n                    return a && !pa[o] && (pa[o] = !0, console.warn(i(o, \" has been deprecated since v\" + a + \" and will be removed in the near future\"))), !e || e(n, o, s);\n                };\n            };\n            const la = {\n                assertOptions: function(e, a, n) {\n                    if (\"object\" != typeof e) throw new D(\"options must be an object\", D.ERR_BAD_OPTION_VALUE);\n                    const i = Object.keys(e);\n                    let o = i.length;\n                    for(; o-- > 0;){\n                        const s = i[o], t = a[s];\n                        if (t) {\n                            const a = e[s], n = void 0 === a || t(a, s, e);\n                            if (!0 !== n) throw new D(\"option \" + s + \" must be \" + n, D.ERR_BAD_OPTION_VALUE);\n                        } else if (!0 !== n) throw new D(\"Unknown option \" + s, D.ERR_BAD_OPTION);\n                    }\n                },\n                validators: ca\n            }, ua = la.validators;\n            class da {\n                constructor(e){\n                    this.defaults = e, this.interceptors = {\n                        request: new Z,\n                        response: new Z\n                    };\n                }\n                request(e, a) {\n                    \"string\" == typeof e ? (a = a || {}).url = e : a = e || {}, a = ra(this.defaults, a);\n                    const { transitional: n, paramsSerializer: i, headers: o } = a;\n                    let s;\n                    void 0 !== n && la.assertOptions(n, {\n                        silentJSONParsing: ua.transitional(ua.boolean),\n                        forcedJSONParsing: ua.transitional(ua.boolean),\n                        clarifyTimeoutError: ua.transitional(ua.boolean)\n                    }, !1), null != i && (P.isFunction(i) ? a.paramsSerializer = {\n                        serialize: i\n                    } : la.assertOptions(i, {\n                        encode: ua.function,\n                        serialize: ua.function\n                    }, !0)), a.method = (a.method || this.defaults.method || \"get\").toLowerCase(), s = o && P.merge(o.common, o[a.method]), s && P.forEach([\n                        \"delete\",\n                        \"get\",\n                        \"head\",\n                        \"post\",\n                        \"put\",\n                        \"patch\",\n                        \"common\"\n                    ], (e)=>{\n                        delete o[e];\n                    }), a.headers = de.concat(s, o);\n                    const t = [];\n                    let r = !0;\n                    this.interceptors.request.forEach(function(e) {\n                        \"function\" == typeof e.runWhen && !1 === e.runWhen(a) || (r = r && e.synchronous, t.unshift(e.fulfilled, e.rejected));\n                    });\n                    const c = [];\n                    let p;\n                    this.interceptors.response.forEach(function(e) {\n                        c.push(e.fulfilled, e.rejected);\n                    });\n                    let l, u = 0;\n                    if (!r) {\n                        const e = [\n                            sa.bind(this),\n                            void 0\n                        ];\n                        for(e.unshift.apply(e, t), e.push.apply(e, c), l = e.length, p = Promise.resolve(a); u < l;)p = p.then(e[u++], e[u++]);\n                        return p;\n                    }\n                    l = t.length;\n                    let d = a;\n                    for(u = 0; u < l;){\n                        const e = t[u++], a = t[u++];\n                        try {\n                            d = e(d);\n                        } catch (e) {\n                            a.call(this, e);\n                            break;\n                        }\n                    }\n                    try {\n                        p = sa.call(this, d);\n                    } catch (e) {\n                        return Promise.reject(e);\n                    }\n                    for(u = 0, l = c.length; u < l;)p = p.then(c[u++], c[u++]);\n                    return p;\n                }\n                getUri(e) {\n                    return X(be((e = ra(this.defaults, e)).baseURL, e.url), e.params, e.paramsSerializer);\n                }\n            }\n            P.forEach([\n                \"delete\",\n                \"get\",\n                \"head\",\n                \"options\"\n            ], function(e) {\n                da.prototype[e] = function(a, n) {\n                    return this.request(ra(n || {}, {\n                        method: e,\n                        url: a,\n                        data: (n || {}).data\n                    }));\n                };\n            }), P.forEach([\n                \"post\",\n                \"put\",\n                \"patch\"\n            ], function(e) {\n                function a(a) {\n                    return function(n, i, o) {\n                        return this.request(ra(o || {}, {\n                            method: e,\n                            headers: a ? {\n                                \"Content-Type\": \"multipart/form-data\"\n                            } : {},\n                            url: n,\n                            data: i\n                        }));\n                    };\n                }\n                da.prototype[e] = a(), da.prototype[e + \"Form\"] = a(!0);\n            });\n            const ma = da;\n            class fa {\n                constructor(e){\n                    if (\"function\" != typeof e) throw new TypeError(\"executor must be a function.\");\n                    let a;\n                    this.promise = new Promise(function(e) {\n                        a = e;\n                    });\n                    const n = this;\n                    this.promise.then((e)=>{\n                        if (!n._listeners) return;\n                        let a = n._listeners.length;\n                        for(; a-- > 0;)n._listeners[a](e);\n                        n._listeners = null;\n                    }), this.promise.then = (e)=>{\n                        let a;\n                        const i = new Promise((e)=>{\n                            n.subscribe(e), a = e;\n                        }).then(e);\n                        return i.cancel = function() {\n                            n.unsubscribe(a);\n                        }, i;\n                    }, e(function(e, i, o) {\n                        n.reason || (n.reason = new ve(e, i, o), a(n.reason));\n                    });\n                }\n                throwIfRequested() {\n                    if (this.reason) throw this.reason;\n                }\n                subscribe(e) {\n                    this.reason ? e(this.reason) : this._listeners ? this._listeners.push(e) : this._listeners = [\n                        e\n                    ];\n                }\n                unsubscribe(e) {\n                    if (!this._listeners) return;\n                    const a = this._listeners.indexOf(e);\n                    -1 !== a && this._listeners.splice(a, 1);\n                }\n                static source() {\n                    let e;\n                    return {\n                        token: new fa(function(a) {\n                            e = a;\n                        }),\n                        cancel: e\n                    };\n                }\n            }\n            const xa = fa, va = {\n                Continue: 100,\n                SwitchingProtocols: 101,\n                Processing: 102,\n                EarlyHints: 103,\n                Ok: 200,\n                Created: 201,\n                Accepted: 202,\n                NonAuthoritativeInformation: 203,\n                NoContent: 204,\n                ResetContent: 205,\n                PartialContent: 206,\n                MultiStatus: 207,\n                AlreadyReported: 208,\n                ImUsed: 226,\n                MultipleChoices: 300,\n                MovedPermanently: 301,\n                Found: 302,\n                SeeOther: 303,\n                NotModified: 304,\n                UseProxy: 305,\n                Unused: 306,\n                TemporaryRedirect: 307,\n                PermanentRedirect: 308,\n                BadRequest: 400,\n                Unauthorized: 401,\n                PaymentRequired: 402,\n                Forbidden: 403,\n                NotFound: 404,\n                MethodNotAllowed: 405,\n                NotAcceptable: 406,\n                ProxyAuthenticationRequired: 407,\n                RequestTimeout: 408,\n                Conflict: 409,\n                Gone: 410,\n                LengthRequired: 411,\n                PreconditionFailed: 412,\n                PayloadTooLarge: 413,\n                UriTooLong: 414,\n                UnsupportedMediaType: 415,\n                RangeNotSatisfiable: 416,\n                ExpectationFailed: 417,\n                ImATeapot: 418,\n                MisdirectedRequest: 421,\n                UnprocessableEntity: 422,\n                Locked: 423,\n                FailedDependency: 424,\n                TooEarly: 425,\n                UpgradeRequired: 426,\n                PreconditionRequired: 428,\n                TooManyRequests: 429,\n                RequestHeaderFieldsTooLarge: 431,\n                UnavailableForLegalReasons: 451,\n                InternalServerError: 500,\n                NotImplemented: 501,\n                BadGateway: 502,\n                ServiceUnavailable: 503,\n                GatewayTimeout: 504,\n                HttpVersionNotSupported: 505,\n                VariantAlsoNegotiates: 506,\n                InsufficientStorage: 507,\n                LoopDetected: 508,\n                NotExtended: 510,\n                NetworkAuthenticationRequired: 511\n            };\n            Object.entries(va).forEach(([e, a])=>{\n                va[a] = e;\n            });\n            const ha = va, ba = function a(n) {\n                const i = new ma(n), o = e(ma.prototype.request, i);\n                return P.extend(o, ma.prototype, i, {\n                    allOwnKeys: !0\n                }), P.extend(o, i, null, {\n                    allOwnKeys: !0\n                }), o.create = function(e) {\n                    return a(ra(n, e));\n                }, o;\n            }(se);\n            ba.Axios = ma, ba.CanceledError = ve, ba.CancelToken = xa, ba.isCancel = fe, ba.VERSION = Ee, ba.toFormData = K, ba.AxiosError = D, ba.Cancel = ba.CanceledError, ba.all = function(e) {\n                return Promise.all(e);\n            }, ba.spread = function(e) {\n                return function(a) {\n                    return e.apply(null, a);\n                };\n            }, ba.isAxiosError = function(e) {\n                return P.isObject(e) && !0 === e.isAxiosError;\n            }, ba.mergeConfig = ra, ba.AxiosHeaders = de, ba.formToJSON = (e)=>ne(P.isHTMLForm(e) ? new FormData(e) : e), ba.HttpStatusCode = ha, ba.default = ba;\n            const ga = ba;\n            var ya = Function.prototype.toString, wa = Object.create, ka = Object.defineProperty, ja = Object.getOwnPropertyDescriptor, _a = Object.getOwnPropertyNames, Ea = Object.getOwnPropertySymbols, Oa = Object.getPrototypeOf, Ra = Object.prototype, Sa = Ra.hasOwnProperty, Ca = Ra.propertyIsEnumerable, Ta = \"function\" == typeof Ea, La = \"function\" == typeof WeakMap, Aa = function() {\n                if (La) return function() {\n                    return new WeakMap;\n                };\n                var e = function() {\n                    function e() {\n                        this._keys = [], this._values = [];\n                    }\n                    return e.prototype.has = function(e) {\n                        return !!~this._keys.indexOf(e);\n                    }, e.prototype.get = function(e) {\n                        return this._values[this._keys.indexOf(e)];\n                    }, e.prototype.set = function(e, a) {\n                        this._keys.push(e), this._values.push(a);\n                    }, e;\n                }();\n                return function() {\n                    return new e;\n                };\n            }(), za = function(e, a) {\n                var n = e.__proto__ || Oa(e);\n                if (!n) return wa(null);\n                var i = n.constructor;\n                if (i === a.Object) return n === a.Object.prototype ? {} : wa(n);\n                if (~ya.call(i).indexOf(\"[native code]\")) try {\n                    return new i;\n                } catch (e) {}\n                return wa(n);\n            }, Fa = function(e, a, n, i) {\n                var o = za(e, a);\n                for(var s in i.set(e, o), e)Sa.call(e, s) && (o[s] = n(e[s], i));\n                if (Ta) for(var t = Ea(e), r = 0, c = t.length, p = void 0; r < c; ++r)p = t[r], Ca.call(e, p) && (o[p] = n(e[p], i));\n                return o;\n            }, Ua = function(e, a, n, i) {\n                var o = za(e, a);\n                i.set(e, o);\n                for(var s = Ta ? _a(e).concat(Ea(e)) : _a(e), t = 0, r = s.length, c = void 0, p = void 0; t < r; ++t)if (\"callee\" !== (c = s[t]) && \"caller\" !== c) if (p = ja(e, c)) {\n                    p.get || p.set || (p.value = n(e[c], i));\n                    try {\n                        ka(o, c, p);\n                    } catch (e) {\n                        o[c] = p.value;\n                    }\n                } else o[c] = n(e[c], i);\n                return o;\n            }, Pa = function(e) {\n                var a = \"\";\n                return e.global && (a += \"g\"), e.ignoreCase && (a += \"i\"), e.multiline && (a += \"m\"), e.unicode && (a += \"u\"), e.sticky && (a += \"y\"), a;\n            }, qa = Array.isArray, Ba = Object.getPrototypeOf, Na = function() {\n                return \"undefined\" != typeof globalThis ? globalThis : \"undefined\" != typeof self ? self :  false ? 0 : \"undefined\" != typeof global ? global : (console && console.error && console.error('Unable to locate global object, returning \"this\".'), this);\n            }();\n            function Da(e, a) {\n                var n = !(!a || !a.isStrict), i = a && a.realm || Na, o = n ? Ua : Fa, s = function(e, a) {\n                    if (!e || \"object\" != typeof e) return e;\n                    if (a.has(e)) return a.get(e);\n                    var t, r = e.__proto__ || Ba(e), c = r && r.constructor;\n                    if (!c || c === i.Object) return o(e, i, s, a);\n                    if (qa(e)) {\n                        if (n) return Ua(e, i, s, a);\n                        t = new c, a.set(e, t);\n                        for(var p = 0, l = e.length; p < l; ++p)t[p] = s(e[p], a);\n                        return t;\n                    }\n                    if (e instanceof i.Date) return new c(e.getTime());\n                    if (e instanceof i.RegExp) return (t = new c(e.source, e.flags || Pa(e))).lastIndex = e.lastIndex, t;\n                    if (i.Map && e instanceof i.Map) return t = new c, a.set(e, t), e.forEach(function(e, n) {\n                        t.set(n, s(e, a));\n                    }), t;\n                    if (i.Set && e instanceof i.Set) return t = new c, a.set(e, t), e.forEach(function(e) {\n                        t.add(s(e, a));\n                    }), t;\n                    if (i.Blob && e instanceof i.Blob) return e.slice(0, e.size, e.type);\n                    if (i.Buffer && i.Buffer.isBuffer(e)) return t = i.Buffer.allocUnsafe ? i.Buffer.allocUnsafe(e.length) : new c(e.length), a.set(e, t), e.copy(t), t;\n                    if (i.ArrayBuffer) {\n                        if (i.ArrayBuffer.isView(e)) return t = new c(e.buffer.slice(0)), a.set(e, t), t;\n                        if (e instanceof i.ArrayBuffer) return t = e.slice(0), a.set(e, t), t;\n                    }\n                    return \"function\" == typeof e.then || e instanceof Error || i.WeakMap && e instanceof i.WeakMap || i.WeakSet && e instanceof i.WeakSet ? e : o(e, i, s, a);\n                };\n                return s(e, Aa());\n            }\n            Da.default = Da, Da.strict = function(e, a) {\n                return Da(e, {\n                    isStrict: !0,\n                    realm: a ? a.realm : void 0\n                });\n            };\n            var Ia = n(451), Ma = n.n(Ia), Ha = n(930), $a = n.n(Ha), Wa = n(261), Ka = n.n(Wa);\n            function Ga(e, a) {\n                var n = Object.keys(e);\n                if (Object.getOwnPropertySymbols) {\n                    var i = Object.getOwnPropertySymbols(e);\n                    a && (i = i.filter(function(a) {\n                        return Object.getOwnPropertyDescriptor(e, a).enumerable;\n                    })), n.push.apply(n, i);\n                }\n                return n;\n            }\n            function Va(e) {\n                for(var a = 1; a < arguments.length; a++){\n                    var n = null != arguments[a] ? arguments[a] : {};\n                    a % 2 ? Ga(Object(n), !0).forEach(function(a) {\n                        Qa(e, a, n[a]);\n                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Ga(Object(n)).forEach(function(a) {\n                        Object.defineProperty(e, a, Object.getOwnPropertyDescriptor(n, a));\n                    });\n                }\n                return e;\n            }\n            function Ja(e) {\n                return Ja = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(e) {\n                    return typeof e;\n                } : function(e) {\n                    return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n                }, Ja(e);\n            }\n            function Ya() {\n                Ya = function(e, a) {\n                    return new n(e, void 0, a);\n                };\n                var e = RegExp.prototype, a = new WeakMap;\n                function n(e, i, o) {\n                    var s = new RegExp(e, i);\n                    return a.set(s, o || a.get(e)), Xa(s, n.prototype);\n                }\n                function i(e, n) {\n                    var i = a.get(n);\n                    return Object.keys(i).reduce(function(a, n) {\n                        var o = i[n];\n                        if (\"number\" == typeof o) a[n] = e[o];\n                        else {\n                            for(var s = 0; void 0 === e[o[s]] && s + 1 < o.length;)s++;\n                            a[n] = e[o[s]];\n                        }\n                        return a;\n                    }, Object.create(null));\n                }\n                return function(e, a) {\n                    if (\"function\" != typeof a && null !== a) throw new TypeError(\"Super expression must either be null or a function\");\n                    e.prototype = Object.create(a && a.prototype, {\n                        constructor: {\n                            value: e,\n                            writable: !0,\n                            configurable: !0\n                        }\n                    }), Object.defineProperty(e, \"prototype\", {\n                        writable: !1\n                    }), a && Xa(e, a);\n                }(n, RegExp), n.prototype.exec = function(a) {\n                    var n = e.exec.call(this, a);\n                    if (n) {\n                        n.groups = i(n, this);\n                        var o = n.indices;\n                        o && (o.groups = i(o, this));\n                    }\n                    return n;\n                }, n.prototype[Symbol.replace] = function(n, o) {\n                    if (\"string\" == typeof o) {\n                        var s = a.get(this);\n                        return e[Symbol.replace].call(this, n, o.replace(/\\$<([^>]+)>/g, function(e, a) {\n                            var n = s[a];\n                            return \"$\" + (Array.isArray(n) ? n.join(\"$\") : n);\n                        }));\n                    }\n                    if (\"function\" == typeof o) {\n                        var t = this;\n                        return e[Symbol.replace].call(this, n, function() {\n                            var e = arguments;\n                            return \"object\" != typeof e[e.length - 1] && (e = [].slice.call(e)).push(i(e, t)), o.apply(this, e);\n                        });\n                    }\n                    return e[Symbol.replace].call(this, n, o);\n                }, Ya.apply(this, arguments);\n            }\n            function Qa(e, a, n) {\n                return (a = function(e) {\n                    var a = function(e, a) {\n                        if (\"object\" != typeof e || null === e) return e;\n                        var n = e[Symbol.toPrimitive];\n                        if (void 0 !== n) {\n                            var i = n.call(e, \"string\");\n                            if (\"object\" != typeof i) return i;\n                            throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n                        }\n                        return String(e);\n                    }(e);\n                    return \"symbol\" == typeof a ? a : String(a);\n                }(a)) in e ? Object.defineProperty(e, a, {\n                    value: n,\n                    enumerable: !0,\n                    configurable: !0,\n                    writable: !0\n                }) : e[a] = n, e;\n            }\n            function Xa(e, a) {\n                return Xa = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, a) {\n                    return e.__proto__ = a, e;\n                }, Xa(e, a);\n            }\n            function Za(e, a) {\n                if (e) {\n                    if (\"string\" == typeof e) return en(e, a);\n                    var n = Object.prototype.toString.call(e).slice(8, -1);\n                    return \"Object\" === n && e.constructor && (n = e.constructor.name), \"Map\" === n || \"Set\" === n ? Array.from(e) : \"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? en(e, a) : void 0;\n                }\n            }\n            function en(e, a) {\n                (null == a || a > e.length) && (a = e.length);\n                for(var n = 0, i = new Array(a); n < a; n++)i[n] = e[n];\n                return i;\n            }\n            function an() {}\n            var nn = function(e) {\n                return new Promise(function(a) {\n                    setTimeout(a, e);\n                });\n            }, on = function(e) {\n                return Math.pow(Math.SQRT2, e);\n            }, sn = Ya(/(\\d+)(%)/, {\n                value: 1\n            });\n            function tn(e) {\n                var a = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 7, n = a;\n                if (sn.test(e)) {\n                    var i, o = null === (i = e.match(sn)) || void 0 === i ? void 0 : i.groups;\n                    if (o && o.value) {\n                        var s = parseInt(o.value) / 100;\n                        n = Math.round(a * s);\n                    }\n                }\n                return Math.min(30, Math.max(1, n));\n            }\n            function rn(e, a) {\n                return a(\"info\", \"Throttle request to \".concat(e, \"/s\")), $a()({\n                    limit: e,\n                    interval: 1e3,\n                    strict: !1\n                });\n            }\n            var cn = function(e) {\n                var a = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"auto\", n = e.defaults.logHandler, i = void 0 === n ? an : n, o = Ma()(a) ? tn(a) : tn(\"auto\", a), s = rn(o, i), t = !1, r = e.interceptors.request.use(function(e) {\n                    return s(function() {\n                        return e;\n                    })();\n                }, function(e) {\n                    return Promise.reject(e);\n                }), c = e.interceptors.response.use(function(n) {\n                    if (!t && Ma()(a) && (\"auto\" === a || sn.test(a)) && n.headers && n.headers[\"x-contentful-ratelimit-second-limit\"]) {\n                        var c = parseInt(n.headers[\"x-contentful-ratelimit-second-limit\"]), p = tn(a, c);\n                        p !== o && (r && e.interceptors.request.eject(r), o = p, s = rn(p, i), r = e.interceptors.request.use(function(e) {\n                            return s(function() {\n                                return e;\n                            })();\n                        }, function(e) {\n                            return Promise.reject(e);\n                        })), t = !0;\n                    }\n                    return n;\n                }, function(e) {\n                    return Promise.reject(e);\n                });\n                return function() {\n                    e.interceptors.request.eject(r), e.interceptors.response.eject(c);\n                };\n            }, pn = /^(?!\\w+:\\/\\/)([^\\s:]+\\.?[^\\s:]+)(?::(\\d+))?(?!:)$/;\n            function ln(e, a) {\n                var n = Va(Va({}, {\n                    insecure: !1,\n                    retryOnError: !0,\n                    logHandler: function(e, a) {\n                        if (\"error\" === e && a) {\n                            var n = [\n                                a.name,\n                                a.message\n                            ].filter(function(e) {\n                                return e;\n                            }).join(\" - \");\n                            return console.error(\"[error] \".concat(n)), void console.error(a);\n                        }\n                        console.log(\"[\".concat(e, \"] \").concat(a));\n                    },\n                    headers: {},\n                    httpAgent: !1,\n                    httpsAgent: !1,\n                    timeout: 3e4,\n                    throttle: 0,\n                    basePath: \"\",\n                    adapter: void 0,\n                    maxContentLength: 1073741824,\n                    maxBodyLength: 1073741824\n                }), a);\n                if (!n.accessToken) {\n                    var i = new TypeError(\"Expected parameter accessToken\");\n                    throw n.logHandler(\"error\", i), i;\n                }\n                var o, s, t = n.insecure ? \"http\" : \"https\", r = n.space ? \"\".concat(n.space, \"/\") : \"\", c = n.defaultHostname, p = n.insecure ? 80 : 443;\n                if (n.host && pn.test(n.host)) {\n                    var l = n.host.split(\":\");\n                    if (2 === l.length) {\n                        var u = (s = 2, function(e) {\n                            if (Array.isArray(e)) return e;\n                        }(o = l) || function(e, a) {\n                            var n = null == e ? null : \"undefined\" != typeof Symbol && e[Symbol.iterator] || e[\"@@iterator\"];\n                            if (null != n) {\n                                var i, o, s, t, r = [], c = !0, p = !1;\n                                try {\n                                    if (s = (n = n.call(e)).next, 0 === a) {\n                                        if (Object(n) !== n) return;\n                                        c = !1;\n                                    } else for(; !(c = (i = s.call(n)).done) && (r.push(i.value), r.length !== a); c = !0);\n                                } catch (e) {\n                                    p = !0, o = e;\n                                } finally{\n                                    try {\n                                        if (!c && null != n.return && (t = n.return(), Object(t) !== t)) return;\n                                    } finally{\n                                        if (p) throw o;\n                                    }\n                                }\n                                return r;\n                            }\n                        }(o, s) || Za(o, s) || function() {\n                            throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n                        }());\n                        c = u[0], p = u[1];\n                    } else c = l[0];\n                }\n                n.basePath && (n.basePath = \"/\".concat(n.basePath.split(\"/\").filter(Boolean).join(\"/\")));\n                var d = a.baseURL || \"\".concat(t, \"://\").concat(c, \":\").concat(p).concat(n.basePath, \"/spaces/\").concat(r);\n                n.headers.Authorization || \"function\" == typeof n.accessToken || (n.headers.Authorization = \"Bearer \" + n.accessToken);\n                var m = {\n                    baseURL: d,\n                    headers: n.headers,\n                    httpAgent: n.httpAgent,\n                    httpsAgent: n.httpsAgent,\n                    proxy: n.proxy,\n                    timeout: n.timeout,\n                    adapter: n.adapter,\n                    maxContentLength: n.maxContentLength,\n                    maxBodyLength: n.maxBodyLength,\n                    logHandler: n.logHandler,\n                    responseLogger: n.responseLogger,\n                    requestLogger: n.requestLogger,\n                    retryOnError: n.retryOnError\n                }, f = e.create(m);\n                return f.httpClientParams = a, f.cloneWithNewParams = function(n) {\n                    return ln(e, Va(Va({}, Da(a)), n));\n                }, n.onBeforeRequest && f.interceptors.request.use(n.onBeforeRequest), \"function\" == typeof n.accessToken && function(e, a) {\n                    e.interceptors.request.use(function(e) {\n                        return a().then(function(a) {\n                            return e.headers.set(\"Authorization\", \"Bearer \".concat(a)), e;\n                        });\n                    });\n                }(f, n.accessToken), n.throttle && cn(f, n.throttle), function(e) {\n                    var a = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 5, n = e.defaults, i = n.responseLogger, o = void 0 === i ? an : i, s = n.requestLogger, t = void 0 === s ? an : s;\n                    e.interceptors.request.use(function(e) {\n                        return t(e), e;\n                    }, function(e) {\n                        return t(e), Promise.reject(e);\n                    }), e.interceptors.response.use(function(e) {\n                        return o(e), e;\n                    }, function(n) {\n                        var i = n.response, s = n.config;\n                        if (o(n), !s || !e.defaults.retryOnError) return Promise.reject(n);\n                        var t = s.attempts || 1;\n                        if (t > a) return n.attempts = s.attempts, Promise.reject(n);\n                        var r = null, c = on(t);\n                        return i ? i.status >= 500 && i.status < 600 ? r = \"Server \".concat(i.status) : 429 === i.status && (r = \"Rate limit\", i.headers && n.response.headers[\"x-contentful-ratelimit-reset\"] && (c = i.headers[\"x-contentful-ratelimit-reset\"])) : r = \"Connection\", r ? (c = Math.floor(1e3 * c + 200 * Math.random() + 500), e.defaults.logHandler(\"warning\", \"\".concat(r, \" error occurred. Waiting for \").concat(c, \" ms before retrying...\")), s.attempts = t + 1, delete s.httpAgent, delete s.httpsAgent, nn(c).then(function() {\n                            return e(s);\n                        })) : Promise.reject(n);\n                    });\n                }(f, n.retryLimit), n.onError && f.interceptors.response.use(function(e) {\n                    return e;\n                }, n.onError), f;\n            }\n            function un(e) {\n                var a = e.query, n = {};\n                return delete a.resolveLinks, n.params = Da(a), n;\n            }\n            function dn(e) {\n                var a, n = function(e, a) {\n                    var n = \"undefined\" != typeof Symbol && e[Symbol.iterator] || e[\"@@iterator\"];\n                    if (!n) {\n                        if (Array.isArray(e) || (n = Za(e))) {\n                            n && (e = n);\n                            var i = 0, o = function() {};\n                            return {\n                                s: o,\n                                n: function() {\n                                    return i >= e.length ? {\n                                        done: !0\n                                    } : {\n                                        done: !1,\n                                        value: e[i++]\n                                    };\n                                },\n                                e: function(e) {\n                                    throw e;\n                                },\n                                f: o\n                            };\n                        }\n                        throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n                    }\n                    var s, t = !0, r = !1;\n                    return {\n                        s: function() {\n                            n = n.call(e);\n                        },\n                        n: function() {\n                            var e = n.next();\n                            return t = e.done, e;\n                        },\n                        e: function(e) {\n                            r = !0, s = e;\n                        },\n                        f: function() {\n                            try {\n                                t || null == n.return || n.return();\n                            } finally{\n                                if (r) throw s;\n                            }\n                        }\n                    };\n                }(Object.getOwnPropertyNames(e));\n                try {\n                    for(n.s(); !(a = n.n()).done;){\n                        var i = e[a.value];\n                        i && \"object\" === Ja(i) && dn(i);\n                    }\n                } catch (e) {\n                    n.e(e);\n                } finally{\n                    n.f();\n                }\n                return Object.freeze(e);\n            }\n            function mn() {\n                var e = window;\n                if (!e) return null;\n                var a = e.navigator.userAgent, n = e.navigator.platform;\n                return -1 !== [\n                    \"Macintosh\",\n                    \"MacIntel\",\n                    \"MacPPC\",\n                    \"Mac68K\"\n                ].indexOf(n) ? \"macOS\" : -1 !== [\n                    \"iPhone\",\n                    \"iPad\",\n                    \"iPod\"\n                ].indexOf(n) ? \"iOS\" : -1 !== [\n                    \"Win32\",\n                    \"Win64\",\n                    \"Windows\",\n                    \"WinCE\"\n                ].indexOf(n) ? \"Windows\" : /Android/.test(a) ? \"Android\" : /Linux/.test(n) ? \"Linux\" : null;\n            }\n            function fn(e) {\n                return Object.defineProperty(e, \"toPlainObject\", {\n                    enumerable: !1,\n                    configurable: !1,\n                    writable: !1,\n                    value: function() {\n                        return Da(this);\n                    }\n                });\n            }\n            function xn(e) {\n                var a, n = e.config, i = e.response;\n                if (n && n.headers && n.headers.Authorization) {\n                    var o = \"...\".concat(n.headers.Authorization.toString().substr(-5));\n                    n.headers.Authorization = \"Bearer \".concat(o);\n                }\n                if (!Ka()(i) || !Ka()(n)) throw e;\n                var s, t = null == i ? void 0 : i.data, r = {\n                    status: null == i ? void 0 : i.status,\n                    statusText: null == i ? void 0 : i.statusText,\n                    message: \"\",\n                    details: {}\n                };\n                n && Ka()(n) && (r.request = {\n                    url: n.url,\n                    headers: n.headers,\n                    method: n.method,\n                    payloadData: n.data\n                }), t && \"object\" === Ja(t) && (\"requestId\" in t && (r.requestId = t.requestId || \"UNKNOWN\"), \"message\" in t && (r.message = t.message || \"\"), \"details\" in t && (r.details = t.details || {}), a = null === (s = t.sys) || void 0 === s ? void 0 : s.id);\n                var c = new Error;\n                c.name = a && \"Unknown\" !== a ? a : \"\".concat(null == i ? void 0 : i.status, \" \").concat(null == i ? void 0 : i.statusText);\n                try {\n                    c.message = JSON.stringify(r, null, \"  \");\n                } catch (e) {\n                    var p;\n                    c.message = null !== (p = null == r ? void 0 : r.message) && void 0 !== p ? p : \"\";\n                }\n                throw c;\n            }\n            function vn(e) {\n                return function(a) {\n                    return Object.assign({}, e, a);\n                };\n            }\n            var hn = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(e) {\n                return typeof e;\n            } : function(e) {\n                return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n            };\n            function bn(e) {\n                if (Array.isArray(e)) {\n                    for(var a = 0, n = Array(e.length); a < e.length; a++)n[a] = e[a];\n                    return n;\n                }\n                return Array.from(e);\n            }\n            var gn = {}, yn = function(e, a) {\n                var n = a.entryId, i = a.linkType, o = a.spaceId, s = a.environmentId;\n                return o && s ? e.get(o + \"!\" + s + \"!\" + i + \"!\" + n) : e.get(i + \"!\" + n);\n            }, wn = function(e, a) {\n                var n = a.sys, i = n.type, o = n.linkType;\n                if (\"ResourceLink\" === i) {\n                    var s = function(e) {\n                        var a = /.*:spaces\\/([^/]+)(?:\\/environments\\/([^/]+))?\\/entries\\/([^/]+)$/;\n                        if (a.test(e)) {\n                            var n = function(e, a) {\n                                if (Array.isArray(e)) return e;\n                                if (Symbol.iterator in Object(e)) return function(e, a) {\n                                    var n = [], i = !0, o = !1, s = void 0;\n                                    try {\n                                        for(var t, r = e[Symbol.iterator](); !(i = (t = r.next()).done) && (n.push(t.value), !a || n.length !== a); i = !0);\n                                    } catch (e) {\n                                        o = !0, s = e;\n                                    } finally{\n                                        try {\n                                            !i && r.return && r.return();\n                                        } finally{\n                                            if (o) throw s;\n                                        }\n                                    }\n                                    return n;\n                                }(e, a);\n                                throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n                            }(e.match(a), 4), i = (n[0], n[1]), o = n[2];\n                            return {\n                                spaceId: i,\n                                environmentId: void 0 === o ? \"master\" : o,\n                                entryId: n[3]\n                            };\n                        }\n                    }(a.sys.urn), t = s.spaceId, r = s.environmentId, c = s.entryId, p = o.split(\":\")[1];\n                    return yn(e, {\n                        linkType: p,\n                        entryId: c,\n                        spaceId: t,\n                        environmentId: r\n                    }) || gn;\n                }\n                var l = a.sys.id;\n                return yn(e, {\n                    linkType: o,\n                    entryId: l\n                }) || gn;\n            }, kn = function e(a, n, i, o) {\n                if (n(a)) return i(a);\n                if (a && \"object\" === (void 0 === a ? \"undefined\" : hn(a))) {\n                    for(var s in a)a.hasOwnProperty(s) && (a[s] = e(a[s], n, i, o));\n                    o && (a = function(e) {\n                        if (Array.isArray(e)) return e.filter(function(e) {\n                            return e !== gn;\n                        });\n                        for(var a in e)e[a] === gn && delete e[a];\n                        return e;\n                    }(a));\n                }\n                return a;\n            };\n            const jn = function(e, a) {\n                if (a = a || {}, !e.items) return [];\n                var n = Da(e), i = Object.keys(n.includes || {}).reduce(function(a, n) {\n                    return [].concat(bn(a), bn(e.includes[n]));\n                }, []), o = [].concat(bn(n.items), bn(i)).filter(function(e) {\n                    return Boolean(e.sys);\n                }), s = new Map(o.reduce(function(e, a) {\n                    var n, i = (n = a.sys, n.space && n.environment ? [\n                        n.type + \"!\" + n.id,\n                        n.space.sys.id + \"!\" + n.environment.sys.id + \"!\" + n.type + \"!\" + n.id\n                    ] : [\n                        n.type + \"!\" + n.id\n                    ]).map(function(e) {\n                        return [\n                            e,\n                            a\n                        ];\n                    });\n                    return e.push.apply(e, bn(i)), e;\n                }, []));\n                return o.forEach(function(e) {\n                    var n = function(e, a) {\n                        return Array.isArray(a) ? Object.keys(e).filter(function(e) {\n                            return -1 !== a.indexOf(e);\n                        }).reduce(function(a, n) {\n                            return a[n] = e[n], a;\n                        }, {}) : e;\n                    }(e, a.itemEntryPoints);\n                    Object.assign(e, kn(n, function(e) {\n                        return (a = e) && a.sys && \"Link\" === a.sys.type || function(e) {\n                            return e && e.sys && \"ResourceLink\" === e.sys.type;\n                        }(e);\n                        var a;\n                    }, function(e) {\n                        return function(e, a, n) {\n                            var i = wn(e, a);\n                            return i === gn ? n ? i : a : i;\n                        }(s, e, a.removeUnresolved);\n                    }, a.removeUnresolved));\n                }), n.items;\n            };\n            var _n = n(784), En = n.n(_n);\n            function On(e) {\n                return Object.defineProperty(e, \"stringifySafe\", {\n                    enumerable: !1,\n                    configurable: !1,\n                    writable: !1,\n                    value: function(e = null, a = \"\") {\n                        return En()(this, e, a, (e, a)=>({\n                                sys: {\n                                    type: \"Link\",\n                                    linkType: \"Entry\",\n                                    id: a.sys.id,\n                                    circular: !0\n                                }\n                            }));\n                    }\n                });\n            }\n            async function Rn(e, a, n) {\n                if (!a || !a.initial && !a.nextSyncToken && !a.nextPageToken) throw new Error(\"Please provide one of `initial`, `nextSyncToken` or `nextPageToken` parameters for syncing\");\n                if (a.content_type && !a.type) a.type = \"Entry\";\n                else if (a.content_type && a.type && \"Entry\" !== a.type) throw new Error(\"When using the `content_type` filter your `type` parameter cannot be different from `Entry`.\");\n                const { withoutLinkResolution: i, withoutUnresolvableLinks: o, paginate: s } = {\n                    withoutLinkResolution: !1,\n                    withoutUnresolvableLinks: !1,\n                    paginate: !0,\n                    ...n\n                }, t = await Sn(e, [], a, {\n                    paginate: s\n                });\n                i || (t.items = jn(t, {\n                    removeUnresolved: o,\n                    itemEntryPoints: [\n                        \"fields\"\n                    ]\n                }));\n                const r = function(e) {\n                    const a = (e)=>(a, n)=>(n.sys.type === e && a.push(fn(n)), a);\n                    return {\n                        entries: e.reduce(a(\"Entry\"), []),\n                        assets: e.reduce(a(\"Asset\"), []),\n                        deletedEntries: e.reduce(a(\"DeletedEntry\"), []),\n                        deletedAssets: e.reduce(a(\"DeletedAsset\"), [])\n                    };\n                }(t.items);\n                return t.nextSyncToken && (r.nextSyncToken = t.nextSyncToken), t.nextPageToken && (r.nextPageToken = t.nextPageToken), dn((c = On(fn(r))).sys || {}), c;\n                var c;\n            }\n            async function Sn(e, a, n, { paginate: i }) {\n                const o = (s = n).nextPageToken ? {\n                    sync_token: s.nextPageToken\n                } : s.nextSyncToken ? {\n                    sync_token: s.nextSyncToken\n                } : s.sync_token ? {\n                    sync_token: s.sync_token\n                } : s;\n                var s;\n                const t = (await e.get(\"sync\", un({\n                    query: o\n                }))).data || {};\n                return a = a.concat(t.items || []), t.nextPageUrl ? i ? (delete o.initial, o.sync_token = Cn(t.nextPageUrl), Sn(e, a, o, {\n                    paginate: i\n                })) : {\n                    items: a,\n                    nextPageToken: Cn(t.nextPageUrl)\n                } : t.nextSyncUrl ? {\n                    items: a,\n                    nextSyncToken: Cn(t.nextSyncUrl)\n                } : {\n                    items: []\n                };\n            }\n            function Cn(e) {\n                const a = e.split(\"?\");\n                return a.length > 0 ? a[1].replace(\"sync_token=\", \"\") : \"\";\n            }\n            function Tn(e) {\n                const a = {};\n                let n = !1;\n                for(const i in e)Array.isArray(e[i]) && (a[i] = e[i].join(\",\"), n = !0);\n                return n ? {\n                    ...e,\n                    ...a\n                } : e;\n            }\n            function Ln(e) {\n                if (!e.select) return e;\n                const a = Array.isArray(e.select) ? e.select : e.select.split(\",\").map((e)=>e.trim()), n = new Set(a);\n                return n.has(\"sys\") ? e : (n.add(\"sys.id\"), n.add(\"sys.type\"), {\n                    ...e,\n                    select: [\n                        ...n\n                    ].join(\",\")\n                });\n            }\n            function An(e, { resolveLinks: a, removeUnresolved: n }) {\n                const i = On(e);\n                return a && (i.items = jn(i, {\n                    removeUnresolved: n,\n                    itemEntryPoints: [\n                        \"fields\"\n                    ]\n                })), i;\n            }\n            class zn extends Error {\n                constructor(e, a){\n                    super(`Invalid \"${e}\" provided, ` + a), this.name = \"ValidationError\";\n                }\n            }\n            function Fn(e, a) {\n                a ? function(e) {\n                    if (e.locale) throw new zn(\"locale\", \"The `locale` parameter is not allowed\");\n                }(e) : function(e) {\n                    if (\"*\" === e.locale) throw new zn(\"locale\", \"The use of locale='*' is no longer supported.To fetch an entry in all existing locales, \\n      use client.withAllLocales instead of the locale='*' parameter.\");\n                }(e);\n            }\n            function Un(e) {\n                if (\"resolveLinks\" in e) throw new zn(\"resolveLinks\", \"The use of the 'resolveLinks' parameter is no longer supported. By default, links are resolved. \\n      If you do not want to resolve links, use client.withoutLinkResolution.\");\n            }\n            function Pn(e) {\n                if (\"removeUnresolved\" in e) throw new zn(\"removeUnresolved\", \"The use of the 'removeUnresolved' parameter is no longer supported. By default, unresolved links are kept as link objects.\\n      If you do not want to include unresolved links, use client.withoutUnresolvableLinks.\");\n            }\n            function qn(e) {\n                for(const a in e){\n                    const n = e[a];\n                    if (\"object\" == typeof n && null !== n && !Array.isArray(n)) throw new Error(`Objects are not supported as value for the \"${a}\" query parameter.`);\n                }\n            }\n            class Bn extends Error {\n                constructor(e, a, n){\n                    super(\"The resource could not be found.\"), this.sys = {\n                        type: \"Error\",\n                        id: \"NotFound\"\n                    }, this.details = {\n                        type: \"Entry\",\n                        id: e,\n                        environment: a,\n                        space: n\n                    };\n                }\n            }\n            function Nn({ http: e, getGlobalOptions: a }, n) {\n                const i = (e = \"unknown\")=>new Bn(e, a().environment, a().space), o = (e)=>{\n                    let n = \"space\" === e ? a().spaceBaseUrl : a().environmentBaseUrl;\n                    if (!n) throw new Error(\"Please define baseUrl for \" + e);\n                    return n.endsWith(\"/\") || (n += \"/\"), n;\n                };\n                async function s({ context: a, path: n, config: i }) {\n                    const s = o(a);\n                    try {\n                        return (await e.get(s + n, i)).data;\n                    } catch (e) {\n                        xn(e);\n                    }\n                }\n                async function t(e, a) {\n                    const { withoutLinkResolution: n, withoutUnresolvableLinks: i } = a;\n                    try {\n                        return An(await s({\n                            context: \"environment\",\n                            path: \"entries\",\n                            config: un({\n                                query: Tn(Ln(e))\n                            })\n                        }), {\n                            resolveLinks: !n ?? !0,\n                            removeUnresolved: i ?? !1\n                        });\n                    } catch (e) {\n                        xn(e);\n                    }\n                }\n                return {\n                    version: \"10.6.5\",\n                    getSpace: async function() {\n                        return s({\n                            context: \"space\",\n                            path: \"\"\n                        });\n                    },\n                    getContentType: async function(e) {\n                        return s({\n                            context: \"environment\",\n                            path: `content_types/${e}`\n                        });\n                    },\n                    getContentTypes: async function(e = {}) {\n                        return s({\n                            context: \"environment\",\n                            path: \"content_types\",\n                            config: un({\n                                query: e\n                            })\n                        });\n                    },\n                    getAsset: async function(e, a = {}) {\n                        return async function(e, a, n = {\n                            withAllLocales: !1,\n                            withoutLinkResolution: !1,\n                            withoutUnresolvableLinks: !1\n                        }) {\n                            const { withAllLocales: i } = n;\n                            Fn(a, i), qn(a);\n                            return async function(e, a) {\n                                try {\n                                    return s({\n                                        context: \"environment\",\n                                        path: `assets/${e}`,\n                                        config: un({\n                                            query: Ln(a)\n                                        })\n                                    });\n                                } catch (e) {\n                                    xn(e);\n                                }\n                            }(e, i ? {\n                                ...a,\n                                locale: \"*\"\n                            } : a);\n                        }(e, a, n);\n                    },\n                    getAssets: async function(e = {}) {\n                        return async function(e, a = {\n                            withAllLocales: !1,\n                            withoutLinkResolution: !1,\n                            withoutUnresolvableLinks: !1\n                        }) {\n                            const { withAllLocales: n } = a;\n                            Fn(e, n), qn(e);\n                            return async function(e) {\n                                try {\n                                    return s({\n                                        context: \"environment\",\n                                        path: \"assets\",\n                                        config: un({\n                                            query: Tn(Ln(e))\n                                        })\n                                    });\n                                } catch (e) {\n                                    xn(e);\n                                }\n                            }(n ? {\n                                ...e,\n                                locale: \"*\"\n                            } : e);\n                        }(e, n);\n                    },\n                    getTag: async function(e) {\n                        return s({\n                            context: \"environment\",\n                            path: `tags/${e}`\n                        });\n                    },\n                    getTags: async function(e = {}) {\n                        return qn(e), s({\n                            context: \"environment\",\n                            path: \"tags\",\n                            config: un({\n                                query: Tn(Ln(e))\n                            })\n                        });\n                    },\n                    getLocales: async function(e = {}) {\n                        return qn(e), s({\n                            context: \"environment\",\n                            path: \"locales\",\n                            config: un({\n                                query: Ln(e)\n                            })\n                        });\n                    },\n                    parseEntries: function(e) {\n                        return function(e, a = {\n                            withAllLocales: !1,\n                            withoutLinkResolution: !1,\n                            withoutUnresolvableLinks: !1\n                        }) {\n                            return function(e, a) {\n                                const { withoutLinkResolution: n, withoutUnresolvableLinks: i } = a;\n                                return An(e, {\n                                    resolveLinks: !n ?? !0,\n                                    removeUnresolved: i ?? !1\n                                });\n                            }(e, a);\n                        }(e, n);\n                    },\n                    sync: async function(i, o = {\n                        paginate: !0\n                    }) {\n                        return async function(n, i, o = {\n                            withAllLocales: !1,\n                            withoutLinkResolution: !1,\n                            withoutUnresolvableLinks: !1\n                        }) {\n                            Un(n), Pn(n);\n                            const s = {\n                                ...i,\n                                ...o\n                            };\n                            return function(e) {\n                                e.defaults.baseURL = a().environmentBaseUrl;\n                            }(e), Rn(e, n, s);\n                        }(i, o, n);\n                    },\n                    getEntry: async function(e, a = {}) {\n                        return async function(e, a, n = {\n                            withAllLocales: !1,\n                            withoutLinkResolution: !1,\n                            withoutUnresolvableLinks: !1\n                        }) {\n                            const { withAllLocales: o } = n;\n                            return Fn(a, o), Un(a), Pn(a), qn(a), async function(e, a, n) {\n                                if (!e) throw i(e);\n                                try {\n                                    const o = await t({\n                                        \"sys.id\": e,\n                                        ...a\n                                    }, n);\n                                    if (o.items.length > 0) return o.items[0];\n                                    throw i(e);\n                                } catch (e) {\n                                    xn(e);\n                                }\n                            }(e, o ? {\n                                ...a,\n                                locale: \"*\"\n                            } : a, n);\n                        }(e, a, n);\n                    },\n                    getEntries: async function(e = {}) {\n                        return async function(e, a = {\n                            withAllLocales: !1,\n                            withoutLinkResolution: !1,\n                            withoutUnresolvableLinks: !1\n                        }) {\n                            const { withAllLocales: n } = a;\n                            return Fn(e, n), Un(e), Pn(e), qn(e), t(n ? {\n                                ...e,\n                                locale: \"*\"\n                            } : e, a);\n                        }(e, n);\n                    },\n                    createAssetKey: async function(a) {\n                        try {\n                            const e = Math.floor(Date.now() / 1e3);\n                            !function(e, a, n) {\n                                if (n = n || {}, \"number\" != typeof a) throw new zn(e, `only numeric values are allowed for timestamps, provided type was \"${typeof a}\"`);\n                                if (n.maximum && a > n.maximum) throw new zn(e, `value (${a}) cannot be further in the future than expected maximum (${n.maximum})`);\n                                if (n.now && a < n.now) throw new zn(e, `value (${a}) cannot be in the past, current time was ${n.now}`);\n                            }(\"expiresAt\", a, {\n                                maximum: e + 172800,\n                                now: e\n                            });\n                        } catch (e) {\n                            xn(e);\n                        }\n                        return async function({ context: a, path: n, data: i, config: s }) {\n                            const t = o(a);\n                            try {\n                                return (await e.post(t + n, i, s)).data;\n                            } catch (e) {\n                                xn(e);\n                            }\n                        }({\n                            context: \"environment\",\n                            path: \"asset_keys\",\n                            data: {\n                                expiresAt: a\n                            }\n                        });\n                    }\n                };\n            }\n            const Dn = ({ http: e, getGlobalOptions: a })=>{\n                function n(i) {\n                    return function({ http: e, getGlobalOptions: a }, n, i) {\n                        const o = Nn({\n                            http: e,\n                            getGlobalOptions: a\n                        }, n);\n                        return Object.defineProperty(o, \"withAllLocales\", {\n                            get: ()=>i({\n                                    ...n,\n                                    withAllLocales: !0\n                                })\n                        }), Object.defineProperty(o, \"withoutLinkResolution\", {\n                            get: ()=>i({\n                                    ...n,\n                                    withoutLinkResolution: !0\n                                })\n                        }), Object.defineProperty(o, \"withoutUnresolvableLinks\", {\n                            get: ()=>i({\n                                    ...n,\n                                    withoutUnresolvableLinks: !0\n                                })\n                        }), Object.create(o);\n                    }({\n                        http: e,\n                        getGlobalOptions: a\n                    }, i, n);\n                }\n                return {\n                    ...Nn({\n                        http: e,\n                        getGlobalOptions: a\n                    }, {\n                        withoutLinkResolution: !1,\n                        withAllLocales: !1,\n                        withoutUnresolvableLinks: !1\n                    }),\n                    get withAllLocales () {\n                        return n({\n                            withAllLocales: !0,\n                            withoutLinkResolution: !1,\n                            withoutUnresolvableLinks: !1\n                        });\n                    },\n                    get withoutLinkResolution () {\n                        return n({\n                            withAllLocales: !1,\n                            withoutLinkResolution: !0,\n                            withoutUnresolvableLinks: !1\n                        });\n                    },\n                    get withoutUnresolvableLinks () {\n                        return n({\n                            withAllLocales: !1,\n                            withoutLinkResolution: !1,\n                            withoutUnresolvableLinks: !0\n                        });\n                    }\n                };\n            };\n            function In(e) {\n                if (!e.accessToken) throw new TypeError(\"Expected parameter accessToken\");\n                if (!e.space) throw new TypeError(\"Expected parameter space\");\n                Un(e), Pn(e);\n                const a = {\n                    resolveLinks: !0,\n                    removeUnresolved: !1,\n                    defaultHostname: \"cdn.contentful.com\",\n                    environment: \"master\",\n                    ...e\n                }, n = function(e, a, n, i) {\n                    var o = [];\n                    a && o.push(\"app \".concat(a)), n && o.push(\"integration \".concat(n)), i && o.push(\"feature \" + i), o.push(\"sdk \".concat(e));\n                    var s = null;\n                    try {\n                         false ? (0) : \"undefined\" == typeof process || false ? (s = mn(), o.push(\"platform browser\")) : (s = function() {\n                            var e = process.platform || \"linux\", a = process.version || \"0.0.0\", n = {\n                                android: \"Android\",\n                                aix: \"Linux\",\n                                darwin: \"macOS\",\n                                freebsd: \"Linux\",\n                                linux: \"Linux\",\n                                openbsd: \"Linux\",\n                                sunos: \"Linux\",\n                                win32: \"Windows\"\n                            };\n                            return e in n ? \"\".concat(n[e] || \"Linux\", \"/\").concat(a) : null;\n                        }(), o.push(\"platform node.js/\".concat(process.versions && process.versions.node ? \"v\".concat(process.versions.node) : process.version)));\n                    } catch (e) {\n                        s = null;\n                    }\n                    return s && o.push(\"os \".concat(s)), \"\".concat(o.filter(function(e) {\n                        return \"\" !== e;\n                    }).join(\"; \"), \";\");\n                }(\"contentful.js/10.6.5\", a.application, a.integration);\n                a.headers = {\n                    ...a.headers,\n                    \"Content-Type\": \"application/vnd.contentful.delivery.v1+json\",\n                    \"X-Contentful-User-Agent\": n\n                };\n                const i = ln(ga, a);\n                if (!i.defaults.baseURL) throw new Error(\"Please define a baseURL\");\n                const o = vn({\n                    space: a.space,\n                    environment: a.environment,\n                    spaceBaseUrl: i.defaults.baseURL,\n                    environmentBaseUrl: `${i.defaults.baseURL}environments/${a.environment}`\n                });\n                return i.defaults.baseURL = o({}).environmentBaseUrl, Dn({\n                    http: i,\n                    getGlobalOptions: o\n                });\n            }\n        })(), i;\n    })());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/contentful/dist/contentful.node.min.js\n");

/***/ })

};
;